//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_eff "bytes";_df "encoding/binary";_dd "errors";_e "fmt";_ce "github.com/laduygaga/unipdf/v3/common";_bg "github.com/laduygaga/unipdf/v3/core";_a "github.com/laduygaga/unipdf/v3/internal/cmap";_f "github.com/laduygaga/unipdf/v3/internal/textencoding";
_efa "golang.org/x/xerrors";_ef "io";_b "os";_ca "regexp";_g "sort";_c "strings";_dc "sync";);var _cgb *RuneCharSafeMap ;var _fbce =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
var _agf *RuneCharSafeMap ;type Font interface{Encoder ()_f .TextEncoder ;GetRuneMetrics (_ddd rune )(CharMetrics ,bool );};func (_eg *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_eg ._ad .RLock ();defer _eg ._ad .RUnlock ();_ga ,_da :=_eg ._cac [b ];
return _ga ,_da ;};func (_cbd *ttfParser )ParseName ()error {if _eegd :=_cbd .Seek ("\u006e\u0061\u006d\u0065");_eegd !=nil {return _eegd ;};_dffb ,_ :=_cbd ._bfeg .Seek (0,_ef .SeekCurrent );_cbd ._fec .PostScriptName ="";_cbd .Skip (2);_bbd :=_cbd .ReadUShort ();
_cde :=_cbd .ReadUShort ();for _fdf :=uint16 (0);_fdf < _bbd &&_cbd ._fec .PostScriptName =="";_fdf ++{_cbd .Skip (3*2);_aga :=_cbd .ReadUShort ();_cdb :=_cbd .ReadUShort ();_dbb :=_cbd .ReadUShort ();if _aga ==6{_cbd ._bfeg .Seek (_dffb +int64 (_cde )+int64 (_dbb ),_ef .SeekStart );
_fga ,_acba :=_cbd .ReadStr (int (_cdb ));if _acba !=nil {return _acba ;};_fga =_c .Replace (_fga ,"\u0000","",-1);_ede ,_acba :=_ca .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _acba !=nil {return _acba ;
};_cbd ._fec .PostScriptName =_ede .ReplaceAllString (_fga ,"");};};if _cbd ._fec .PostScriptName ==""{_ce .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};var _cb =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
var _egg =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_eag *ttfParser )Parse ()(TtfType ,error ){_bfc ,_aee :=_eag .ReadStr (4);if _aee !=nil {return TtfType {},_aee ;};if _bfc =="\u004f\u0054\u0054\u004f"{return TtfType {},_efa .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bg .ErrNotSupported );
};if _bfc !="\u0000\u0001\u0000\u0000"&&_bfc !="\u0074\u0072\u0075\u0065"{_ce .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_bfc );
};_dbe :=int (_eag .ReadUShort ());_eag .Skip (3*2);_eag ._cfa =make (map[string ]uint32 );var _ggc string ;for _fdg :=0;_fdg < _dbe ;_fdg ++{_ggc ,_aee =_eag .ReadStr (4);if _aee !=nil {return TtfType {},_aee ;};_eag .Skip (4);_dgc :=_eag .ReadULong ();
_eag .Skip (4);_eag ._cfa [_ggc ]=_dgc ;};_ce .Log .Trace (_aff (_eag ._cfa ));if _aee =_eag .ParseComponents ();_aee !=nil {return TtfType {},_aee ;};return _eag ._fec ,nil ;};var _ba *RuneCharSafeMap ;func (_dfcg StdFont )Name ()string {return string (_dfcg ._caa .Name )};
func (_baa *TtfType )MakeToUnicode ()*_a .CMap {_ge :=make (map[_a .CharCode ]rune );if len (_baa .GlyphNames )==0{return _a .NewToUnicodeCMap (_ge );};for _efd ,_fd :=range _baa .Chars {_bcd :=_a .CharCode (_efd );_ece :=_baa .GlyphNames [_fd ];_fe ,_bbg :=_f .GlyphToRune (_ece );
if !_bbg {_ce .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_efd ,_ece );_fe =_f .MissingCodeRune ;};_ge [_bcd ]=_fe ;};return _a .NewToUnicodeCMap (_ge );
};func (_ccc *TtfType )NewEncoder ()_f .TextEncoder {return _f .NewTrueTypeFontEncoder (_ccc .Chars )};var _cge =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func _fg ()StdFont {_edcf .Do (_ffed );_bce :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_bce ,_agf );};func (_ec *RuneCharSafeMap )Length ()int {_ec ._ad .RLock ();defer _ec ._ad .RUnlock ();return len (_ec ._cac );};func IsStdFont (name StdFontName )bool {_ ,_cg :=_gg .read (name );return _cg };type StdFont struct{_caa Descriptor ;
_dga *RuneCharSafeMap ;_ff _f .TextEncoder ;};func TtfParse (r _ef .ReadSeeker )(TtfType ,error ){_fbe :=&ttfParser {_bfeg :r };return _fbe .Parse ()};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");
HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_adc *ttfParser )ParseHhea ()error {if _aeg :=_adc .Seek ("\u0068\u0068\u0065\u0061");_aeg !=nil {return _aeg ;};_adc .Skip (4+15*2);_adc ._adf =_adc .ReadUShort ();return nil ;};func (_fdc *ttfParser )parseCmapSubtable31 (_dcaa int64 )error {_dcd :=make ([]rune ,0,8);
_gfb :=make ([]rune ,0,8);_gaa :=make ([]int16 ,0,8);_ffg :=make ([]uint16 ,0,8);_fdc ._fec .Chars =make (map[rune ]GID );_fdc ._bfeg .Seek (int64 (_fdc ._cfa ["\u0063\u006d\u0061\u0070"])+_dcaa ,_ef .SeekStart );_dba :=_fdc .ReadUShort ();if _dba !=4{return _efa .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_dba ,_bg .ErrNotSupported );
};_fdc .Skip (2*2);_egcb :=int (_fdc .ReadUShort ()/2);_fdc .Skip (3*2);for _aea :=0;_aea < _egcb ;_aea ++{_gfb =append (_gfb ,rune (_fdc .ReadUShort ()));};_fdc .Skip (2);for _cbc :=0;_cbc < _egcb ;_cbc ++{_dcd =append (_dcd ,rune (_fdc .ReadUShort ()));
};for _aef :=0;_aef < _egcb ;_aef ++{_gaa =append (_gaa ,_fdc .ReadShort ());};_ege ,_ :=_fdc ._bfeg .Seek (int64 (0),_ef .SeekCurrent );for _dggd :=0;_dggd < _egcb ;_dggd ++{_ffg =append (_ffg ,_fdc .ReadUShort ());};for _dgfb :=0;_dgfb < _egcb ;_dgfb ++{_bda :=_dcd [_dgfb ];
_eae :=_gfb [_dgfb ];_fc :=_gaa [_dgfb ];_eege :=_ffg [_dgfb ];if _eege > 0{_fdc ._bfeg .Seek (_ege +2*int64 (_dgfb )+int64 (_eege ),_ef .SeekStart );};for _daca :=_bda ;_daca <=_eae ;_daca ++{if _daca ==0xFFFF{break ;};var _fbdf int32 ;if _eege > 0{_fbdf =int32 (_fdc .ReadUShort ());
if _fbdf > 0{_fbdf +=int32 (_fc );};}else {_fbdf =_daca +int32 (_fc );};if _fbdf >=65536{_fbdf -=65536;};if _fbdf > 0{_fdc ._fec .Chars [_daca ]=GID (_fbdf );};};};return nil ;};func (_cef StdFont )GetMetricsTable ()*RuneCharSafeMap {return _cef ._dga };
func (_gaec *TtfType )MakeEncoder ()(_f .SimpleEncoder ,error ){_afcc :=make (map[_f .CharCode ]GlyphName );for _baf :=_f .CharCode (0);_baf <=256;_baf ++{_eca :=rune (_baf );_cbfe ,_bb :=_gaec .Chars [_eca ];if !_bb {continue ;};var _abec GlyphName ;if int (_cbfe )>=0&&int (_cbfe )< len (_gaec .GlyphNames ){_abec =_gaec .GlyphNames [_cbfe ];
}else {_gfd :=rune (_cbfe );if _gag ,_gfg :=_f .RuneToGlyph (_gfd );_gfg {_abec =_gag ;};};if _abec !=""{_afcc [_baf ]=_abec ;};};if len (_afcc )==0{_ce .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_gaec ,_gaec .Chars );
};return _f .NewCustomSimpleTextEncoder (_afcc ,nil );};func (_cbce *ttfParser )parseCmapFormat6 ()error {_adg :=int (_cbce .ReadUShort ());_cdgb :=int (_cbce .ReadUShort ());_ce .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_cbce ._fec .String (),_adg ,_cdgb );
for _bff :=0;_bff < _cdgb ;_bff ++{_dceg :=GID (_cbce .ReadUShort ());_cbce ._fec .Chars [rune (_bff +_adg )]=_dceg ;};return nil ;};func (_ag *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_fb :=MakeRuneCharSafeMap (_ag .Length ());_ag .Range (func (_db rune ,_ea CharMetrics )(_cda bool ){_fb ._cac [_db ]=_ea ;
return false });return _fb ;};func (_fgd *ttfParser )ReadSByte ()(_egfa int8 ){_df .Read (_fgd ._bfeg ,_df .BigEndian ,&_egfa );return _egfa ;};func (_gde StdFont )Descriptor ()Descriptor {return _gde ._caa };func (_cbda *ttfParser )ParsePost ()error {if _cfb :=_cbda .Seek ("\u0070\u006f\u0073\u0074");
_cfb !=nil {return _cfb ;};_cbg :=_cbda .Read32Fixed ();_cbda ._fec .ItalicAngle =_cbda .Read32Fixed ();_cbda ._fec .UnderlinePosition =_cbda .ReadShort ();_cbda ._fec .UnderlineThickness =_cbda .ReadShort ();_cbda ._fec .IsFixedPitch =_cbda .ReadULong ()!=0;
_cbda .ReadULong ();_cbda .ReadULong ();_cbda .ReadULong ();_cbda .ReadULong ();_ce .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_cbg );switch _cbg {case 1.0:_cbda ._fec .GlyphNames =_egg ;
case 2.0:_fbed :=int (_cbda .ReadUShort ());_daf :=make ([]int ,_fbed );_cbda ._fec .GlyphNames =make ([]GlyphName ,_fbed );_bae :=-1;for _baee :=0;_baee < _fbed ;_baee ++{_fbeb :=int (_cbda .ReadUShort ());_daf [_baee ]=_fbeb ;if _fbeb <=0x7fff&&_fbeb > _bae {_bae =_fbeb ;
};};var _gadf []GlyphName ;if _bae >=len (_egg ){_gadf =make ([]GlyphName ,_bae -len (_egg )+1);for _geb :=0;_geb < _bae -len (_egg )+1;_geb ++{_cff :=int (_cbda .readByte ());_gef ,_bcfg :=_cbda .ReadStr (_cff );if _bcfg !=nil {return _bcfg ;};_gadf [_geb ]=GlyphName (_gef );
};};for _edg :=0;_edg < _fbed ;_edg ++{_cgba :=_daf [_edg ];if _cgba < len (_egg ){_cbda ._fec .GlyphNames [_edg ]=_egg [_cgba ];}else if _cgba >=len (_egg )&&_cgba <=32767{_cbda ._fec .GlyphNames [_edg ]=_gadf [_cgba -len (_egg )];}else {_cbda ._fec .GlyphNames [_edg ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";
};};case 2.5:_eabc :=make ([]int ,_cbda ._gaeg );for _dffbf :=0;_dffbf < len (_eabc );_dffbf ++{_cfgf :=int (_cbda .ReadSByte ());_eabc [_dffbf ]=_dffbf +1+_cfgf ;};_cbda ._fec .GlyphNames =make ([]GlyphName ,len (_eabc ));for _cbcc :=0;_cbcc < len (_cbda ._fec .GlyphNames );
_cbcc ++{_cdf :=_egg [_eabc [_cbcc ]];_cbda ._fec .GlyphNames [_cbcc ]=_cdf ;};case 3.0:_ce .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ce .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_cbg );};return nil ;};func _egc (){_eed =MakeRuneCharSafeMap (len (_cb ));_ecdb =MakeRuneCharSafeMap (len (_cb ));
_dbg =MakeRuneCharSafeMap (len (_cb ));_ggf =MakeRuneCharSafeMap (len (_cb ));for _fgb ,_bcea :=range _cb {_eed .Write (_bcea ,CharMetrics {Wx :float64 (_dff [_fgb ])});_ecdb .Write (_bcea ,CharMetrics {Wx :float64 (_cge [_fgb ])});_dbg .Write (_bcea ,CharMetrics {Wx :float64 (_cag [_fgb ])});
_ggf .Write (_bcea ,CharMetrics {Wx :float64 (_fbce [_fgb ])});};};var _acda =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func init (){RegisterStdFont (CourierName ,_dfa ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_bef ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_ggdg ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_cbb ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_fbcf *ttfParser )readByte ()(_ebef uint8 ){_df .Read (_fbcf ._bfeg ,_df .BigEndian ,&_ebef );return _ebef ;};var _acc =&RuneCharSafeMap {_cac :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_gbe *ttfParser )ParseMaxp ()error {if _fbd :=_gbe .Seek ("\u006d\u0061\u0078\u0070");_fbd !=nil {return _fbd ;};_gbe .Skip (4);_gbe ._gaeg =_gbe .ReadUShort ();return nil ;};func _gbg ()StdFont {_edcf .Do (_ffed );_fba :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_fba ,_fgf );};func (_gfc *ttfParser )parseCmapFormat12 ()error {_daa :=_gfc .ReadULong ();_ce .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_gfc ._fec .String (),_daa );
for _edb :=uint32 (0);_edb < _daa ;_edb ++{_dcgc :=_gfc .ReadULong ();_efcc :=_gfc .ReadULong ();_agbf :=_gfc .ReadULong ();if _dcgc > 0x0010FFFF||(0xD800<=_dcgc &&_dcgc <=0xDFFF){return _dd .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _efcc < _dcgc ||_efcc > 0x0010FFFF||(0xD800<=_efcc &&_efcc <=0xDFFF){return _dd .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _afgd :=_dcgc ;_afgd <=_efcc ;
_afgd ++{if _afgd > 0x10FFFF{_ce .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_gfc ._fec .Chars [rune (_afgd )]=GID (_agbf );_agbf ++;};};return nil ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_cdad ,_dfc :=_gg .read (name );if !_dfc {return StdFont {},false ;};return _cdad (),true ;};var _fbg *RuneCharSafeMap ;
func _agc ()StdFont {_edcf .Do (_ffed );_cab :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_cab ,_cgb );};func _aff (_afb map[string ]uint32 )string {var _dcg []string ;for _ebe :=range _afb {_dcg =append (_dcg ,_ebe );};_g .Slice (_dcg ,func (_aad ,_gbf int )bool {return _afb [_dcg [_aad ]]< _afb [_dcg [_gbf ]]});_dca :=[]string {_e .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_afb ))};
for _ ,_cgg :=range _dcg {_dca =append (_dca ,_e .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_cgg ,_afb [_cgg ]));};return _c .Join (_dca ,"\u000a");};type ttfParser struct{_fec TtfType ;_bfeg _ef .ReadSeeker ;_cfa map[string ]uint32 ;_adf uint16 ;
_gaeg uint16 ;};func _effe (){const _cbf =600;_abe =MakeRuneCharSafeMap (len (_cb ));for _ ,_cf :=range _cb {_abe .Write (_cf ,CharMetrics {Wx :_cbf });};_fbg =_abe .Copy ();_bea =_abe .Copy ();_ba =_abe .Copy ();};func init (){RegisterStdFont (HelveticaName ,_agc ,"\u0041\u0072\u0069a\u006c");
RegisterStdFont (HelveticaBoldName ,_ae ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_fg ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_gbg ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_cae *ttfParser )Read32Fixed ()float64 {_aadge :=float64 (_cae .ReadShort ());_eged :=float64 (_cae .ReadUShort ())/65536.0;return _aadge +_eged ;};var _fgf *RuneCharSafeMap ;func _cba ()StdFont {_aag :=_f .NewSymbolEncoder ();_ecd :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_ecd ,_acc ,_aag );};var _egf *RuneCharSafeMap ;var _cag =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
var _ecdb *RuneCharSafeMap ;type StdFontName string ;func (_cfg *ttfParser )ParseHead ()error {if _gad :=_cfg .Seek ("\u0068\u0065\u0061\u0064");_gad !=nil {return _gad ;};_cfg .Skip (3*4);_gdea :=_cfg .ReadULong ();if _gdea !=0x5F0F3CF5{_ce .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_cfg );
};_cfg .Skip (2);_cfg ._fec .UnitsPerEm =_cfg .ReadUShort ();_cfg .Skip (2*8);_cfg ._fec .Xmin =_cfg .ReadShort ();_cfg ._fec .Ymin =_cfg .ReadShort ();_cfg ._fec .Xmax =_cfg .ReadShort ();_cfg ._fec .Ymax =_cfg .ReadShort ();return nil ;};func (_egb StdFont )Encoder ()_f .TextEncoder {return _egb ._ff };
func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _f .TextEncoder )StdFont {var _eeg rune =0xA0;if _ ,_bcf :=metrics .Read (_eeg );!_bcf {_ac ,_ :=metrics .Read (0x20);metrics .Write (_eeg ,_ac );};return StdFont {_caa :desc ,_dga :metrics ,_ff :encoder };
};func (_dfb *ttfParser )ReadStr (length int )(string ,error ){_cbgf :=make ([]byte ,length );_fff ,_ccac :=_dfb ._bfeg .Read (_cbgf );if _ccac !=nil {return "",_ccac ;}else if _fff !=length {return "",_e .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_cbgf ),nil ;};func _dea ()StdFont {_efc :=_f .NewZapfDingbatsEncoder ();_bfe :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_bfe ,_dge ,_efc );};func _ae ()StdFont {_edcf .Do (_ffed );_aca :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_aca ,_egf );};func init (){RegisterStdFont (SymbolName ,_cba ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_dea );};func (_bc *fontMap )write (_cdd StdFontName ,_gae func ()StdFont ){_bc .Lock ();defer _bc .Unlock ();_bc ._ab [_cdd ]=_gae ;};var _gcb _dc .Once ;func (_dgeg *ttfParser )ReadShort ()(_bed int16 ){_df .Read (_dgeg ._bfeg ,_df .BigEndian ,&_bed );
return _bed ;};var _dff =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
type fontMap struct{_dc .Mutex ;_ab map[StdFontName ]func ()StdFont ;};func init (){RegisterStdFont (TimesRomanName ,_adb ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_dgab ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_fbc ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_gdeg ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_ggdgb *ttfParser )parseCmapVersion (_cgf int64 )error {_ce .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_cgf );if _ggdgb ._fec .Chars ==nil {_ggdgb ._fec .Chars =make (map[rune ]GID );
};_ggdgb ._bfeg .Seek (int64 (_ggdgb ._cfa ["\u0063\u006d\u0061\u0070"])+_cgf ,_ef .SeekStart );var _bcc ,_bfg uint32 ;_cece :=_ggdgb .ReadUShort ();if _cece < 8{_bcc =uint32 (_ggdgb .ReadUShort ());_bfg =uint32 (_ggdgb .ReadUShort ());}else {_ggdgb .ReadUShort ();
_bcc =_ggdgb .ReadULong ();_bfg =_ggdgb .ReadULong ();};_ce .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_cece ,_bcc ,_bfg );
switch _cece {case 0:return _ggdgb .parseCmapFormat0 ();case 6:return _ggdgb .parseCmapFormat6 ();case 12:return _ggdgb .parseCmapFormat12 ();default:_ce .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_cece );
return nil ;};};type GlyphName =_f .GlyphName ;type FontWeight int ;type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_cbac *ttfParser )ParseHmtx ()error {if _dbd :=_cbac .Seek ("\u0068\u006d\u0074\u0078");_dbd !=nil {return _dbd ;};_cbac ._fec .Widths =make ([]uint16 ,0,8);
for _fbca :=uint16 (0);_fbca < _cbac ._adf ;_fbca ++{_cbac ._fec .Widths =append (_cbac ._fec .Widths ,_cbac .ReadUShort ());_cbac .Skip (2);};if _cbac ._adf < _cbac ._gaeg &&_cbac ._adf > 0{_fgc :=_cbac ._fec .Widths [_cbac ._adf -1];for _dac :=_cbac ._adf ;
_dac < _cbac ._gaeg ;_dac ++{_cbac ._fec .Widths =append (_cbac ._fec .Widths ,_fgc );};};return nil ;};func (_beae *ttfParser )ParseComponents ()error {if _cace :=_beae .ParseHead ();_cace !=nil {return _cace ;};if _aaa :=_beae .ParseHhea ();_aaa !=nil {return _aaa ;
};if _bfd :=_beae .ParseMaxp ();_bfd !=nil {return _bfd ;};if _dcac :=_beae .ParseHmtx ();_dcac !=nil {return _dcac ;};if _ ,_gbfb :=_beae ._cfa ["\u006e\u0061\u006d\u0065"];_gbfb {if _bcfb :=_beae .ParseName ();_bcfb !=nil {return _bcfb ;};};if _ ,_agdf :=_beae ._cfa ["\u004f\u0053\u002f\u0032"];
_agdf {if _aeeg :=_beae .ParseOS2 ();_aeeg !=nil {return _aeeg ;};};if _ ,_cca :=_beae ._cfa ["\u0070\u006f\u0073\u0074"];_cca {if _dcf :=_beae .ParsePost ();_dcf !=nil {return _dcf ;};};if _ ,_dfg :=_beae ._cfa ["\u0063\u006d\u0061\u0070"];_dfg {if _afg :=_beae .ParseCmap ();
_afg !=nil {return _afg ;};};return nil ;};func (_gcc *ttfParser )ParseCmap ()error {var _afbe int64 ;if _gfba :=_gcc .Seek ("\u0063\u006d\u0061\u0070");_gfba !=nil {return _gfba ;};_ce .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_gcc .ReadUShort ();
_dae :=int (_gcc .ReadUShort ());_fge :=int64 (0);_cdg :=int64 (0);_acg :=int64 (0);for _aadg :=0;_aadg < _dae ;_aadg ++{_ebd :=_gcc .ReadUShort ();_ead :=_gcc .ReadUShort ();_afbe =int64 (_gcc .ReadULong ());if _ebd ==3&&_ead ==1{_cdg =_afbe ;}else if _ebd ==3&&_ead ==10{_acg =_afbe ;
}else if _ebd ==1&&_ead ==0{_fge =_afbe ;};};if _fge !=0{if _ged :=_gcc .parseCmapVersion (_fge );_ged !=nil {return _ged ;};};if _cdg !=0{if _cefg :=_gcc .parseCmapSubtable31 (_cdg );_cefg !=nil {return _cefg ;};};if _acg !=0{if _bcbb :=_gcc .parseCmapVersion (_acg );
_bcbb !=nil {return _bcbb ;};};if _cdg ==0&&_fge ==0&&_acg ==0{_ce .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};var _edcf _dc .Once ;func (_fffg *ttfParser )ReadUShort ()(_fbee uint16 ){_df .Read (_fffg ._bfeg ,_df .BigEndian ,&_fbee );return _fbee ;};func _dfa ()StdFont {_edd .Do (_effe );_def :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_def ,_abe );};func (_cccg *ttfParser )Seek (tag string )error {_afa ,_bbf :=_cccg ._cfa [tag ];if !_bbf {return _e .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_cccg ._bfeg .Seek (int64 (_afa ),_ef .SeekStart );return nil ;};func _dgab ()StdFont {_gcb .Do (_egc );_eb :=Descriptor {Name :TimesBoldName ,Family :_fa ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_eb ,_ecdb );};func _bef ()StdFont {_edd .Do (_effe );_befd :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_befd ,_fbg );};var _bea *RuneCharSafeMap ;func (_gd *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_gd ._ad .Lock ();defer _gd ._ad .Unlock ();_gd ._cac [b ]=r ;};func (_bgc *ttfParser )Skip (n int ){_bgc ._bfeg .Seek (int64 (n ),_ef .SeekCurrent )};
type GID =_f .GID ;var _edd _dc .Once ;type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;
};var _dbg *RuneCharSafeMap ;func (_ced *fontMap )read (_agb StdFontName )(func ()StdFont ,bool ){_ced .Lock ();defer _ced .Unlock ();_bf ,_ed :=_ced ._ab [_agb ];return _bf ,_ed ;};func (_gfe *ttfParser )parseCmapSubtable10 (_ebg int64 )error {if _gfe ._fec .Chars ==nil {_gfe ._fec .Chars =make (map[rune ]GID );
};_gfe ._bfeg .Seek (int64 (_gfe ._cfa ["\u0063\u006d\u0061\u0070"])+_ebg ,_ef .SeekStart );var _fab ,_dcge uint32 ;_ccb :=_gfe .ReadUShort ();if _ccb < 8{_fab =uint32 (_gfe .ReadUShort ());_dcge =uint32 (_gfe .ReadUShort ());}else {_gfe .ReadUShort ();
_fab =_gfe .ReadULong ();_dcge =_gfe .ReadULong ();};_ce .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_ccb ,_fab ,_dcge );
if _ccb !=0{return _dd .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gea ,_bdf :=_gfe .ReadStr (256);if _bdf !=nil {return _bdf ;
};_eab :=[]byte (_gea );for _fdgf ,_bcb :=range _eab {_gfe ._fec .Chars [rune (_fdgf )]=GID (_bcb );if _bcb !=0{_e .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_fdgf ,_bcb ,rune (_bcb ));
};};return nil ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;
CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_de :=_gg .read (name );_de {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_gg .write (name ,fnc );for _ ,_be :=range aliases {RegisterStdFont (_be ,fnc );};};func (_ggdge *ttfParser )parseCmapFormat0 ()error {_bdd ,_gagc :=_ggdge .ReadStr (256);if _gagc !=nil {return _gagc ;};_feb :=[]byte (_bdd );_ce .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_ggdge ._fec .String (),_bdd ,_feb );
for _gda ,_ddfc :=range _feb {_ggdge ._fec .Chars [rune (_gda )]=GID (_ddfc );};return nil ;};var _eed *RuneCharSafeMap ;var _abe *RuneCharSafeMap ;const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");
CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_cd CharMetrics )String ()string {return _e .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_cd .Wx ,_cd .Wy );};type RuneCharSafeMap struct{_cac map[rune ]CharMetrics ;_ad _dc .RWMutex ;};func _fbc ()StdFont {_gcb .Do (_egc );
_bgf :=Descriptor {Name :TimesItalicName ,Family :_fa ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};return NewStdFont (_bgf ,_ggf );
};var _gdd =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_bge *ttfParser )ReadULong ()(_affg uint32 ){_df .Read (_bge ._bfeg ,_df .BigEndian ,&_affg );return _affg ;};func _ffed (){_cgb =MakeRuneCharSafeMap (len (_cb ));_egf =MakeRuneCharSafeMap (len (_cb ));for _gafa ,_cgc :=range _cb {_cgb .Write (_cgc ,CharMetrics {Wx :float64 (_acda [_gafa ])});
_egf .Write (_cgc ,CharMetrics {Wx :float64 (_gdd [_gafa ])});};_agf =_cgb .Copy ();_fgf =_egf .Copy ();};var _dge =&RuneCharSafeMap {_cac :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func _cbb ()StdFont {_edd .Do (_effe );_bd :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_bd ,_bea );};func (_gfga *ttfParser )ParseOS2 ()error {if _ggb :=_gfga .Seek ("\u004f\u0053\u002f\u0032");_ggb !=nil {return _ggb ;};_cfgb :=_gfga .ReadUShort ();_gfga .Skip (4*2);_gfga .Skip (11*2+10+4*4+4);_gce :=_gfga .ReadUShort ();
_gfga ._fec .Bold =(_gce &32)!=0;_gfga .Skip (2*2);_gfga ._fec .TypoAscender =_gfga .ReadShort ();_gfga ._fec .TypoDescender =_gfga .ReadShort ();if _cfgb >=2{_gfga .Skip (3*2+2*4+2);_gfga ._fec .CapHeight =_gfga .ReadShort ();}else {_gfga ._fec .CapHeight =0;
};return nil ;};func _gdeg ()StdFont {_gcb .Do (_egc );_fad :=Descriptor {Name :TimesBoldItalicName ,Family :_fa ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_fad ,_dbg );};func _adb ()StdFont {_gcb .Do (_egc );_cec :=Descriptor {Name :TimesRomanName ,Family :_fa ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_cec ,_eed );};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func (_gc StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_eec ,_acb :=_gc ._dga .Read (r );
return _eec ,_acb ;};func TtfParseFile (fileStr string )(TtfType ,error ){_acdc ,_ddf :=_b .Open (fileStr );if _ddf !=nil {return TtfType {},_ddf ;};defer _acdc .Close ();return TtfParse (_acdc );};var _ Font =StdFont {};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_f .NewStandardEncoder ());
};func (_gb StdFont )ToPdfObject ()_bg .PdfObject {_acd :=_bg .MakeDict ();_acd .Set ("\u0054\u0079\u0070\u0065",_bg .MakeName ("\u0046\u006f\u006e\u0074"));_acd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bg .MakeName ("\u0054\u0079\u0070e\u0031"));
_acd .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bg .MakeName (_gb .Name ()));_acd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gb ._ff .ToPdfObject ());return _bg .MakeIndirectObject (_acd );};var _gg =&fontMap {_ab :make (map[StdFontName ]func ()StdFont )};
func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_cac :make (map[rune ]CharMetrics ,length )};};func (_dg *RuneCharSafeMap )Range (f func (_af rune ,_cdaa CharMetrics )(_dgf bool )){_dg ._ad .RLock ();defer _dg ._ad .RUnlock ();
for _gf ,_afc :=range _dg ._cac {if f (_gf ,_afc ){break ;};};};func _ggdg ()StdFont {_edd .Do (_effe );_cad :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_cad ,_ba );};func NewFontFile2FromPdfObject (obj _bg .PdfObject )(TtfType ,error ){obj =_bg .TraceToDirectObject (obj );_abb ,_dcb :=obj .(*_bg .PdfObjectStream );if !_dcb {_ce .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_bg .ErrTypeError ;};_fae ,_gge :=_bg .DecodeStream (_abb );if _gge !=nil {return TtfType {},_gge ;};_dbcb :=ttfParser {_bfeg :_eff .NewReader (_fae )};return _dbcb .Parse ();};const (_fa ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");
TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
);var _ggf *RuneCharSafeMap ;func (_dbc *TtfType )String ()string {return _e .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_dbc .PostScriptName ,_dbc .UnitsPerEm ,_dbc .Bold ,_dbc .ItalicAngle ,_dbc .CapHeight ,len (_dbc .Chars ),len (_dbc .GlyphNames ));
};