//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_fc "bufio";_ag "bytes";_fa "crypto/md5";_da "crypto/rand";_ba "crypto/sha1";_e "crypto/x509";_ge "encoding/binary";_b "encoding/hex";_ff "errors";_c "fmt";_ee "github.com/unidoc/pkcs7";_ae "github.com/laduygaga/unipdf/v3/common";_daa "github.com/laduygaga/unipdf/v3/core";
_eef "github.com/laduygaga/unipdf/v3/core/security";_cd "github.com/laduygaga/unipdf/v3/core/security/crypt";_cbg "github.com/laduygaga/unipdf/v3/internal/cmap";_ac "github.com/laduygaga/unipdf/v3/internal/imageutil";_agc "github.com/laduygaga/unipdf/v3/internal/license";
_gf "github.com/laduygaga/unipdf/v3/internal/sampling";_df "github.com/laduygaga/unipdf/v3/internal/textencoding";_ega "github.com/laduygaga/unipdf/v3/internal/timeutils";_bg "github.com/laduygaga/unipdf/v3/internal/transform";_cbe "github.com/laduygaga/unipdf/v3/model/internal/docutil";
_ec "github.com/laduygaga/unipdf/v3/model/internal/fonts";_cg "github.com/laduygaga/unipdf/v3/model/mdp";_cde "github.com/laduygaga/unipdf/v3/model/sigutil";_aa "github.com/laduygaga/unipdf/v3/ps";_eg "github.com/unidoc/unitype";_feg "golang.org/x/xerrors";_a "hash";
_baa "image";_dg "image/color";_ "image/gif";_ "image/png";_dgg "io";_ca "io/ioutil";_ce "math";_dd "math/rand";_dga "os";_de "regexp";_cb "sort";_af "strconv";_db "strings";_f "sync";_d "time";_fe "unicode";_ab "unicode/utf8";);

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _daa .PdfObject ;IC _daa .PdfObject ;RO _daa .PdfObject ;OverlayText _daa .PdfObject ;Repeat _daa .PdfObject ;DA _daa .PdfObject ;Q _daa .PdfObject ;};func (_gbdgg *DSS )generateHashMaps ()error {_dacgf ,_afaf :=_gbdgg .generateHashMap (_gbdgg .Certs );
if _afaf !=nil {return _afaf ;};_deae ,_afaf :=_gbdgg .generateHashMap (_gbdgg .OCSPs );if _afaf !=nil {return _afaf ;};_ffaf ,_afaf :=_gbdgg .generateHashMap (_gbdgg .CRLs );if _afaf !=nil {return _afaf ;};_gbdgg ._fdga =_dacgf ;_gbdgg ._dafdb =_deae ;
_gbdgg ._fafe =_ffaf ;return nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_dcfgc :=appender .Reader .DSS ;if _dcfgc ==nil {_dcfgc =NewDSS ();};if _agcc :=_dcfgc .generateHashMaps ();_agcc !=nil {return nil ,_agcc ;};return &LTV {CertClient :_cde .NewCertClient (),OCSPClient :_cde .NewOCSPClient (),CRLClient :_cde .NewCRLClient (),SkipExisting :true ,_ceaa :appender ,_eccgb :_dcfgc },nil ;
};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_fded *Outline )ToPdfOutline ()*PdfOutline {_gedfcg :=NewPdfOutline ();var _ecgbec []*PdfOutlineItem ;var _geaa int64 ;var _bbgfd *PdfOutlineItem ;for _ ,_bacdg :=range _fded .Entries {_aaeff ,_edgf :=_bacdg .ToPdfOutlineItem ();_aaeff .Parent =&_gedfcg .PdfOutlineTreeNode ;
if _bbgfd !=nil {_bbgfd .Next =&_aaeff .PdfOutlineTreeNode ;_aaeff .Prev =&_bbgfd .PdfOutlineTreeNode ;};_ecgbec =append (_ecgbec ,_aaeff );_geaa +=_edgf ;_bbgfd =_aaeff ;};_ebce :=int64 (len (_ecgbec ));_geaa +=_ebce ;if _ebce > 0{_gedfcg .First =&_ecgbec [0].PdfOutlineTreeNode ;
_gedfcg .Last =&_ecgbec [_ebce -1].PdfOutlineTreeNode ;_gedfcg .Count =&_geaa ;};return _gedfcg ;};func (_fad *PdfReader )newPdfActionTransFromDict (_fcaa *_daa .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_fcaa .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// String returns a string that describes `base`.
func (_dbdf fontCommon )String ()string {return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_dbdf .coreString ());};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _daa .PdfObject ;LE _daa .PdfObject ;BS _daa .PdfObject ;IC _daa .PdfObject ;BE _daa .PdfObject ;IT _daa .PdfObject ;Measure _daa .PdfObject ;};func (_gdf *PdfReader )newPdfAnnotationStampFromDict (_fbfc *_daa .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_eeec :=PdfAnnotationStamp {};
_gded ,_fbg :=_gdf .newPdfAnnotationMarkupFromDict (_fbfc );if _fbg !=nil {return nil ,_fbg ;};_eeec .PdfAnnotationMarkup =_gded ;_eeec .Name =_fbfc .Get ("\u004e\u0061\u006d\u0065");return &_eeec ,nil ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _dgg .ReadSeeker )(*PdfFont ,error ){const _ffgbef =_df .CharCode (32);const _fbeg =_df .CharCode (255);_dfcg ,_eaabf :=_ca .ReadAll (r );if _eaabf !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_eaabf );
return nil ,_eaabf ;};_gaaff ,_eaabf :=_ec .TtfParse (_ag .NewReader (_dfcg ));if _eaabf !=nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_eaabf );
return nil ,_eaabf ;};_fcbe :=&pdfFontSimple {_aaef :make (map[_df .CharCode ]float64 ),fontCommon :fontCommon {_fbafe :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_fcbe ._face =_df .NewWinAnsiEncoder ();_fcbe ._agfd =_gaaff .PostScriptName ;_fcbe .FirstChar =_daa .MakeInteger (int64 (_ffgbef ));
_fcbe .LastChar =_daa .MakeInteger (int64 (_fbeg ));_fgda :=1000.0/float64 (_gaaff .UnitsPerEm );if len (_gaaff .Widths )<=0{return nil ,_ff .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_cceba :=_fgda *float64 (_gaaff .Widths [0]);_adebg :=make ([]float64 ,0,_fbeg -_ffgbef +1);for _abdgf :=_ffgbef ;_abdgf <=_fbeg ;_abdgf ++{_bcfgb ,_gcbed :=_fcbe .Encoder ().CharcodeToRune (_abdgf );if !_gcbed {_ae .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_abdgf );
_adebg =append (_adebg ,_cceba );continue ;};_acacb ,_eegad :=_gaaff .Chars [_bcfgb ];if !_eegad {_ae .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_adebg =append (_adebg ,_cceba );
continue ;};_cbcdg :=_fgda *float64 (_gaaff .Widths [_acacb ]);_adebg =append (_adebg ,_cbcdg );};_fcbe .Widths =_daa .MakeIndirectObject (_daa .MakeArrayFromFloats (_adebg ));if len (_adebg )< int (_fbeg -_ffgbef +1){_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_adebg ),255-32+1);
return nil ,_daa .ErrRangeError ;};for _befb :=_ffgbef ;_befb <=_fbeg ;_befb ++{_fcbe ._aaef [_befb ]=_adebg [_befb -_ffgbef ];};_fcbe .Encoding =_daa .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_aaggc :=&PdfFontDescriptor {};
_aaggc .FontName =_daa .MakeName (_gaaff .PostScriptName );_aaggc .Ascent =_daa .MakeFloat (_fgda *float64 (_gaaff .TypoAscender ));_aaggc .Descent =_daa .MakeFloat (_fgda *float64 (_gaaff .TypoDescender ));_aaggc .CapHeight =_daa .MakeFloat (_fgda *float64 (_gaaff .CapHeight ));
_aaggc .FontBBox =_daa .MakeArrayFromFloats ([]float64 {_fgda *float64 (_gaaff .Xmin ),_fgda *float64 (_gaaff .Ymin ),_fgda *float64 (_gaaff .Xmax ),_fgda *float64 (_gaaff .Ymax )});_aaggc .ItalicAngle =_daa .MakeFloat (_gaaff .ItalicAngle );_aaggc .MissingWidth =_daa .MakeFloat (_fgda *float64 (_gaaff .Widths [0]));
_gacdd ,_eaabf :=_daa .MakeStream (_dfcg ,_daa .NewFlateEncoder ());if _eaabf !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_eaabf );
return nil ,_eaabf ;};_gacdd .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_daa .MakeInteger (int64 (len (_dfcg ))));_aaggc .FontFile2 =_gacdd ;if _gaaff .Bold {_aaggc .StemV =_daa .MakeInteger (120);}else {_aaggc .StemV =_daa .MakeInteger (70);
};_dgfg :=_dfdf ;if _gaaff .IsFixedPitch {_dgfg |=_cdfcd ;};if _gaaff .ItalicAngle !=0{_dgfg |=_afdad ;};_aaggc .Flags =_daa .MakeInteger (int64 (_dgfg ));_fcbe ._eccc =_aaggc ;_fdgg :=&PdfFont {_gbbee :_fcbe };return _fdgg ,nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _daa .PdfObject )(*PdfFilespec ,error ){_fccdg :=&PdfFilespec {};var _gfgdb *_daa .PdfObjectDictionary ;if _edeg ,_cgcdf :=_daa .GetIndirect (obj );_cgcdf {_fccdg ._ccde =_edeg ;_ededa ,_bgdc :=_daa .GetDict (_edeg .PdfObject );
if !_bgdc {_ae .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_daa .ErrTypeError ;};_gfgdb =_ededa ;}else if _gdbb ,_cgbcc :=_daa .GetDict (obj );
_cgbcc {_fccdg ._ccde =_gdbb ;_gfgdb =_gdbb ;}else {_ae .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_daa .ErrTypeError ;};if _gfgdb ==nil {_ae .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ff .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ggfc :=_gfgdb .Get ("\u0054\u0079\u0070\u0065");_ggfc !=nil {_bdfbd ,_gbbfd :=_ggfc .(*_daa .PdfObjectName );if !_gbbfd {_ae .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ggfc );
}else {if *_bdfbd !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_ae .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_bdfbd );
};};};if _bcgg :=_gfgdb .Get ("\u0046\u0053");_bcgg !=nil {_fccdg .FS =_bcgg ;};if _dgbe :=_gfgdb .Get ("\u0046");_dgbe !=nil {_fccdg .F =_dgbe ;};if _cccg :=_gfgdb .Get ("\u0055\u0046");_cccg !=nil {_fccdg .UF =_cccg ;};if _fgdf :=_gfgdb .Get ("\u0044\u004f\u0053");
_fgdf !=nil {_fccdg .DOS =_fgdf ;};if _ebabd :=_gfgdb .Get ("\u004d\u0061\u0063");_ebabd !=nil {_fccdg .Mac =_ebabd ;};if _abgdgd :=_gfgdb .Get ("\u0055\u006e\u0069\u0078");_abgdgd !=nil {_fccdg .Unix =_abgdgd ;};if _ddbed :=_gfgdb .Get ("\u0049\u0044");
_ddbed !=nil {_fccdg .ID =_ddbed ;};if _egdc :=_gfgdb .Get ("\u0056");_egdc !=nil {_fccdg .V =_egdc ;};if _fffdc :=_gfgdb .Get ("\u0045\u0046");_fffdc !=nil {_fccdg .EF =_fffdc ;};if _ceda :=_gfgdb .Get ("\u0052\u0046");_ceda !=nil {_fccdg .RF =_ceda ;
};if _dcbfg :=_gfgdb .Get ("\u0044\u0065\u0073\u0063");_dcbfg !=nil {_fccdg .Desc =_dcbfg ;};if _bdgfc :=_gfgdb .Get ("\u0043\u0049");_bdgfc !=nil {_fccdg .CI =_bdgfc ;};return _fccdg ,nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_daa .PdfObjectArray ;_bdecg *Image ;};

// ToPdfObject implements interface PdfModel.
func (_gcab *PdfAnnotationStamp )ToPdfObject ()_daa .PdfObject {_gcab .PdfAnnotation .ToPdfObject ();_agea :=_gcab ._gbf ;_ecee :=_agea .PdfObject .(*_daa .PdfObjectDictionary );_gcab .PdfAnnotationMarkup .appendToPdfDictionary (_ecee );_ecee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0053\u0074\u0061m\u0070"));
_ecee .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gcab .Name );return _agea ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cdcafc pdfFontType0 )GetRuneMetrics (r rune )(_ec .CharMetrics ,bool ){if _cdcafc .DescendantFont ==nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cdcafc );
return _ec .CharMetrics {},false ;};return _cdcafc .DescendantFont .GetRuneMetrics (r );};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_daa .PdfObjectName ;P *_daa .PdfObjectInteger ;V *_daa .PdfObjectName ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_fdabg *PdfReader )Decrypt (password []byte )(bool ,error ){_gedb ,_gaaggg :=_fdabg ._adgcg .Decrypt (password );if _gaaggg !=nil {return false ,_gaaggg ;};if !_gedb {return false ,nil ;};_gaaggg =_fdabg .loadStructure ();if _gaaggg !=nil {_ae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_gaaggg );
return false ,_gaaggg ;};return true ,nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_acc :=NewPdfAction ();_fce :=&PdfActionGoToR {};_fce .PdfAction =_acc ;_acc .SetContext (_fce );return _fce ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_fcddb *PdfFieldSignature )ToPdfObject ()_daa .PdfObject {if _fcddb .PdfAnnotationWidget !=nil {_fcddb .PdfAnnotationWidget .ToPdfObject ();};_fcddb .PdfField .ToPdfObject ();_dbace :=_fcddb ._caaee ;_eabbc :=_dbace .PdfObject .(*_daa .PdfObjectDictionary );
_eabbc .SetIfNotNil ("\u0046\u0054",_daa .MakeName ("\u0053\u0069\u0067"));_eabbc .SetIfNotNil ("\u004c\u006f\u0063\u006b",_fcddb .Lock );_eabbc .SetIfNotNil ("\u0053\u0056",_fcddb .SV );if _fcddb .V !=nil {_eabbc .SetIfNotNil ("\u0056",_fcddb .V .ToPdfObject ());
};return _dbace ;};func (_dcf *PdfReader )newPdfActionResetFormFromDict (_dcef *_daa .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_dcef .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dcef .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// GetCharMetrics returns the char metrics for character code `code`.
func (_bgcbc pdfFontType0 )GetCharMetrics (code _df .CharCode )(_ec .CharMetrics ,bool ){if _bgcbc .DescendantFont ==nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bgcbc );
return _ec .CharMetrics {},false ;};return _bgcbc .DescendantFont .GetCharMetrics (code );};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_ga :=NewPdfAction ();_efa :=&PdfActionRendition {};_efa .PdfAction =_ga ;_ga .SetContext (_efa );return _efa ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_dbfb :=&PdfColorspaceCalGray {};_dbfb .BlackPoint =[]float64 {0.0,0.0,0.0};_dbfb .Gamma =1;return _dbfb ;};var _acbae =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};
var (_gdggd _f .Mutex ;_bbagb ="";_gebce _d .Time ;_cdcfe ="";_gccab ="";_bbcbe _d .Time ;_gbcd ="";_fbebea ="";_fbcec ="";);

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_defd *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_fbcf :=_gf .NewReader (img .getBase ());_faba :=_ac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_gcga :=_gf .NewWriter (_faba );
_fcec :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_fbfg :=make ([]uint32 ,3);var (_ffa uint32 ;ANorm ,X ,Y ,Z ,_cged ,_gbbd ,_dafa float64 ;_gbfg error ;);for {_ffa ,_gbfg =_fbcf .ReadSample ();if _gbfg ==_dgg .EOF {break ;}else if _gbfg !=nil {return img ,_gbfg ;
};ANorm =float64 (_ffa )/_fcec ;X =_defd .WhitePoint [0]*_ce .Pow (ANorm ,_defd .Gamma );Y =_defd .WhitePoint [1]*_ce .Pow (ANorm ,_defd .Gamma );Z =_defd .WhitePoint [2]*_ce .Pow (ANorm ,_defd .Gamma );_cged =3.240479*X +-1.537150*Y +-0.498535*Z ;_gbbd =-0.969256*X +1.875992*Y +0.041556*Z ;
_dafa =0.055648*X +-0.204043*Y +1.057311*Z ;_cged =_ce .Min (_ce .Max (_cged ,0),1.0);_gbbd =_ce .Min (_ce .Max (_gbbd ,0),1.0);_dafa =_ce .Min (_ce .Max (_dafa ,0),1.0);_fbfg [0]=uint32 (_cged *_fcec );_fbfg [1]=uint32 (_gbbd *_fcec );_fbfg [2]=uint32 (_dafa *_fcec );
if _gbfg =_gcga .WriteSamples (_fbfg );_gbfg !=nil {return img ,_gbfg ;};};return _geda (&_faba ),nil ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_gfcf :=NewPdfAnnotation ();_cfb :=&PdfAnnotationWidget {};_cfb .PdfAnnotation =_gfcf ;_gfcf .SetContext (_cfb );return _cfb ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _daa .PdfObject ;Volume _daa .PdfObject ;Synchronous _daa .PdfObject ;Repeat _daa .PdfObject ;Mix _daa .PdfObject ;};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_gccbb :=&PdfColorPatternType2 {};return _gccbb ;};

// ToPdfObject implements interface PdfModel.
func (_geg *PdfActionSound )ToPdfObject ()_daa .PdfObject {_geg .PdfAction .ToPdfObject ();_ged :=_geg ._ad ;_bf :=_ged .PdfObject .(*_daa .PdfObjectDictionary );_bf .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeSound )));_bf .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_geg .Sound );
_bf .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_geg .Volume );_bf .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_geg .Synchronous );_bf .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_geg .Repeat );_bf .SetIfNotNil ("\u004d\u0069\u0078",_geg .Mix );
return _ged ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_daa .PdfObjectString ;Q *_daa .PdfObjectInteger ;DS *_daa .PdfObjectString ;RV _daa .PdfObject ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// String returns a string representation of PdfTransformParamsDocMDP.
func (_dcdg *PdfTransformParamsDocMDP )String ()string {return _c .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_dcdg .Type ,_dcdg .P ,_dcdg .V );};func (_cdbd *PdfReader )newPdfAnnotationCircleFromDict (_gbd *_daa .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_bgff :=PdfAnnotationCircle {};
_bcef ,_cbea :=_cdbd .newPdfAnnotationMarkupFromDict (_gbd );if _cbea !=nil {return nil ,_cbea ;};_bgff .PdfAnnotationMarkup =_bcef ;_bgff .BS =_gbd .Get ("\u0042\u0053");_bgff .IC =_gbd .Get ("\u0049\u0043");_bgff .BE =_gbd .Get ("\u0042\u0045");_bgff .RD =_gbd .Get ("\u0052\u0044");
return &_bgff ,nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_bdcag :_daa .MakeIndirectObject (_daa .MakeDict ())};};func (_adgd *LTV )getOCSPs (_egae []*_e .Certificate ,_bgad map[string ]*_e .Certificate )([][]byte ,error ){_ababf :=make ([][]byte ,0,len (_egae ));
for _ ,_gdfd :=range _egae {for _ ,_gdeca :=range _gdfd .OCSPServer {if _adgd .CertClient .IsCA (_gdfd ){continue ;};_dbab ,_acdg :=_bgad [_gdfd .Issuer .CommonName ];if !_acdg {_ae .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_efcfc ,_fbcag :=_adgd .OCSPClient .MakeRequest (_gdeca ,_gdfd ,_dbab );if _fbcag !=nil {_ae .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_fbcag );
continue ;};_ababf =append (_ababf ,_efcfc );};};return _ababf ,nil ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _daa .PdfObjectArray )(*PdfRectangle ,error ){_fdabc :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _cadgg error ;_fdabc .Llx ,_cadgg =_daa .GetNumberAsFloat (arr .Get (0));if _cadgg !=nil {return nil ,_cadgg ;};_fdabc .Lly ,_cadgg =_daa .GetNumberAsFloat (arr .Get (1));if _cadgg !=nil {return nil ,_cadgg ;};_fdabc .Urx ,_cadgg =_daa .GetNumberAsFloat (arr .Get (2));
if _cadgg !=nil {return nil ,_cadgg ;};_fdabc .Ury ,_cadgg =_daa .GetNumberAsFloat (arr .Get (3));if _cadgg !=nil {return nil ,_cadgg ;};return &_fdabc ,nil ;};

// K returns the value of the key component of the color.
func (_dfff *PdfColorDeviceCMYK )K ()float64 {return _dfff [3]};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_gfcc *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_fbcg ,_gfgd :=color .(*PdfColorDeviceRGB );if !_gfgd {_ae .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _fbcg ,nil ;};func (_fbd *PdfReader )newPdfAnnotationRichMediaFromDict (_ddd *_daa .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_dbad :=&PdfAnnotationRichMedia {};
_dbad .RichMediaSettings =_ddd .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_dbad .RichMediaContent =_ddd .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _dbad ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cae *PdfAction )GetContainingPdfObject ()_daa .PdfObject {return _cae ._ad };

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_fgfde *PdfPageResources )GetColorspaceByName (keyName _daa .PdfObjectName )(PdfColorspace ,bool ){_cbada ,_eedgg :=_fgfde .GetColorspaces ();if _eedgg !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_eedgg );
return nil ,false ;};if _cbada ==nil {return nil ,false ;};_agdfc ,_bfdd :=_cbada .Colorspaces [string (keyName )];if !_bfdd {return nil ,false ;};return _agdfc ,true ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_cgefg *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_daa .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ded ,_dede :=_daa .GetNumbersAsFloat (objects );
if _dede !=nil {return nil ,_dede ;};return _cgefg .ColorFromFloats (_ded );};

// ToPdfObject implements interface PdfModel.
func (_gdc *PdfAnnotationSquiggly )ToPdfObject ()_daa .PdfObject {_gdc .PdfAnnotation .ToPdfObject ();_dfgd :=_gdc ._gbf ;_acgf :=_dfgd .PdfObject .(*_daa .PdfObjectDictionary );_gdc .PdfAnnotationMarkup .appendToPdfDictionary (_acgf );_acgf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_acgf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gdc .QuadPoints );return _dfgd ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_fgd *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_afde ,_cccd :=color .(*PdfColorDeviceGray );if !_cccd {_ae .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_afde ),float64 (*_afde ),float64 (*_afde )),nil ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_caaee :_daa .MakeIndirectObject (_daa .MakeDict ())}};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_feeb *PdfPageResources )HasXObjectByName (keyName _daa .PdfObjectName )bool {_eebff ,_ :=_feeb .GetXObjectByName (keyName );return _eebff !=nil ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dgggd *PdfPageResources )GetShadingByName (keyName _daa .PdfObjectName )(*PdfShading ,bool ){if _dgggd .Shading ==nil {return nil ,false ;};_agecg ,_cdefb :=_daa .TraceToDirectObject (_dgggd .Shading ).(*_daa .PdfObjectDictionary );if !_cdefb {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgggd .Shading );
return nil ,false ;};if _aaegee :=_agecg .Get (keyName );_aaegee !=nil {_bdgbf ,_badc :=_ecgfa (_aaegee );if _badc !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_badc );
return nil ,false ;};return _bdgbf ,true ;};return nil ,false ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_dbe :=&PdfAction {};_dbe ._ad =_daa .MakeIndirectObject (_daa .MakeDict ());return _dbe ;};

// ToPdfObject implements interface PdfModel.
func (_aafe *PdfActionImportData )ToPdfObject ()_daa .PdfObject {_aafe .PdfAction .ToPdfObject ();_acaa :=_aafe ._ad ;_dbba :=_acaa .PdfObject .(*_daa .PdfObjectDictionary );_dbba .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeImportData )));
if _aafe .F !=nil {_dbba .Set ("\u0046",_aafe .F .ToPdfObject ());};return _acaa ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_bdfe :=NewPdfAnnotation ();_cefg :=&PdfAnnotationText {};_cefg .PdfAnnotation =_bdfe ;_cefg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdfe .SetContext (_cefg );return _cefg ;};var _ pdfFont =(*pdfFontType0 )(nil );


// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_gbbee pdfFont };

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_dgfc *PdfFieldButton )GetType ()ButtonType {_ebfgd :=ButtonTypeCheckbox ;if _dgfc .Ff !=nil {if (uint32 (*_dgfc .Ff )&FieldFlagPushbutton .Mask ())> 0{_ebfgd =ButtonTypePush ;}else if (uint32 (*_dgfc .Ff )&FieldFlagRadio .Mask ())> 0{_ebfgd =ButtonTypeRadio ;
};};return _ebfgd ;};

// Val returns the value of the color.
func (_efbcf *PdfColorCalGray )Val ()float64 {return float64 (*_efbcf )};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_aaafe *PdfColorspaceDeviceN )ToPdfObject ()_daa .PdfObject {_faea :=_daa .MakeArray (_daa .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_faea .Append (_aaafe .ColorantNames );_faea .Append (_aaafe .AlternateSpace .ToPdfObject ());_faea .Append (_aaafe .TintTransform .ToPdfObject ());
if _aaafe .Attributes !=nil {_faea .Append (_aaafe .Attributes .ToPdfObject ());};if _aaafe ._cbcda !=nil {_aaafe ._cbcda .PdfObject =_faea ;return _aaafe ._cbcda ;};return _faea ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_daa .PdfObject ;GetContainingPdfObject ()_daa .PdfObject ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_beebe *PdfPageResources )SetXObjectByName (keyName _daa .PdfObjectName ,stream *_daa .PdfObjectStream )error {if _beebe .XObject ==nil {_beebe .XObject =_daa .MakeDict ();};_fddaa :=_daa .TraceToDirectObject (_beebe .XObject );_aedadg ,_beccf :=_fddaa .(*_daa .PdfObjectDictionary );
if !_beccf {_ae .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_beebe .XObject ,_fddaa );return _ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_aedadg .Set (keyName ,stream );return nil ;};func (_gaeg *PdfReader )loadAction (_fdde _daa .PdfObject )(*PdfAction ,error ){if _dda ,_bda :=_daa .GetIndirect (_fdde );_bda {_dfc ,_eac :=_gaeg .newPdfActionFromIndirectObject (_dda );if _eac !=nil {return nil ,_eac ;
};return _dfc ,nil ;}else if !_daa .IsNullObject (_fdde ){return nil ,_ff .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aabfgc *Permissions )ToPdfObject ()_daa .PdfObject {return _aabfgc ._fadgg };func _acfd (_aadac *_daa .PdfIndirectObject ,_dagd *_daa .PdfObjectDictionary )(*DSS ,error ){if _aadac ==nil {_aadac =_daa .MakeIndirectObject (nil );};_aadac .PdfObject =_daa .MakeDict ();
_fabac :=map[string ]*VRI {};if _dbgc ,_cdgd :=_daa .GetDict (_dagd .Get ("\u0056\u0052\u0049"));_cdgd {for _ ,_dbgcg :=range _dbgc .Keys (){if _bee ,_fdcb :=_daa .GetDict (_dbgc .Get (_dbgcg ));_fdcb {_fabac [_db .ToUpper (_dbgcg .String ())]=_efbd (_bee );
};};};return &DSS {Certs :_dgdfbe (_dagd .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_dgdfbe (_dagd .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_dgdfbe (_dagd .Get ("\u0043\u0052\u004c\u0073")),VRI :_fabac ,_fcbb :_aadac },nil ;};

// ToPdfObject implements interface PdfModel.
func (_fcfg *PdfAnnotationRedact )ToPdfObject ()_daa .PdfObject {_fcfg .PdfAnnotation .ToPdfObject ();_bdba :=_fcfg ._gbf ;_gfd :=_bdba .PdfObject .(*_daa .PdfObjectDictionary );_fcfg .PdfAnnotationMarkup .appendToPdfDictionary (_gfd );_gfd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_gfd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fcfg .QuadPoints );_gfd .SetIfNotNil ("\u0049\u0043",_fcfg .IC );_gfd .SetIfNotNil ("\u0052\u004f",_fcfg .RO );_gfd .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_fcfg .OverlayText );
_gfd .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fcfg .Repeat );_gfd .SetIfNotNil ("\u0044\u0041",_fcfg .DA );_gfd .SetIfNotNil ("\u0051",_fcfg .Q );return _bdba ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_afgfcg *CompliancePdfReader )error ;};func _agba (_dbgde *_daa .PdfObjectDictionary ,_afaecf *fontCommon )(*pdfFontType0 ,error ){_abgfd ,_efgg :=_daa .GetArray (_dbgde .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_efgg {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_afaecf );
return nil ,_daa .ErrRangeError ;};if _abgfd .Len ()!=1{_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_abgfd .Len ());return nil ,_daa .ErrRangeError ;
};_gcgb ,_agge :=_fegag (_abgfd .Get (0),false );if _agge !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_agge ,_afaecf );
return nil ,_agge ;};_edaf :=_daagbe (_afaecf );_edaf .DescendantFont =_gcgb ;_gcgdd ,_efgg :=_daa .GetNameVal (_dbgde .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _efgg {if _gcgdd =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_gcgdd =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_edaf ._dfgee =_df .NewIdentityTextEncoder (_gcgdd );
}else if _cbg .IsPredefinedCMap (_gcgdd ){_edaf ._faca ,_agge =_cbg .LoadPredefinedCMap (_gcgdd );if _agge !=nil {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gcgdd ,_agge );
};}else {_ae .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_gcgdd );};};if _aabe :=_gcgb .baseFields ()._efedc ;_aabe !=nil {if _caaef :=_aabe .Name ();_caaef =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_caaef =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_caaef =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_caaef =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_edaf ._dfgee =_df .NewCMapEncoder (_gcgdd ,_edaf ._faca ,_aabe );
};};return _edaf ,nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_gfcb *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_dbf *PdfReader )newPdfActionRenditionFromDict (_gfed *_daa .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_gfed .Get ("\u0052"),AN :_gfed .Get ("\u0041\u004e"),OP :_gfed .Get ("\u004f\u0050"),JS :_gfed .Get ("\u004a\u0053")},nil ;
};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_cafdd *Image )ToJBIG2Image ()(*_daa .JBIG2Image ,error ){_ggea ,_fgfea :=_cafdd .ToGoImage ();if _fgfea !=nil {return nil ,_fgfea ;};return _daa .GoImageToJBIG2 (_ggea ,_daa .JB2ImageAutoThreshold );};func (_cbd *PdfReader )newPdfAnnotationSquigglyFromDict (_ege *_daa .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_adfc :=PdfAnnotationSquiggly {};
_efdb ,_fcc :=_cbd .newPdfAnnotationMarkupFromDict (_ege );if _fcc !=nil {return nil ,_fcc ;};_adfc .PdfAnnotationMarkup =_efdb ;_adfc .QuadPoints =_ege .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_adfc ,nil ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_ecgg *BorderStyle )GetPdfName ()string {switch *_ecgg {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_bdc :=NewPdfAction ();_ddg :=&PdfActionSound {};_ddg .PdfAction =_bdc ;_bdc .SetContext (_ddg );return _ddg ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_cdbdb *PdfOutlineTreeNode )GetContainingPdfObject ()_daa .PdfObject {return _cdbdb .GetContext ().GetContainingPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_fgc *PdfAnnotationSound )ToPdfObject ()_daa .PdfObject {_fgc .PdfAnnotation .ToPdfObject ();_efbb :=_fgc ._gbf ;_fecfg :=_efbb .PdfObject .(*_daa .PdfObjectDictionary );_fgc .PdfAnnotationMarkup .appendToPdfDictionary (_fecfg );_fecfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0053\u006f\u0075n\u0064"));
_fecfg .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fgc .Sound );_fecfg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fgc .Name );return _efbb ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_fcbb *_daa .PdfIndirectObject ;Certs []*_daa .PdfObjectStream ;OCSPs []*_daa .PdfObjectStream ;CRLs []*_daa .PdfObjectStream ;VRI map[string ]*VRI ;_fdga map[string ]*_daa .PdfObjectStream ;_dafdb map[string ]*_daa .PdfObjectStream ;_fafe map[string ]*_daa .PdfObjectStream ;
};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_abad *PdfFont )GetCharMetrics (code _df .CharCode )(CharMetrics ,bool ){var _aedcb _ec .CharMetrics ;switch _cbgad :=_abad ._gbbee .(type ){case *pdfFontSimple :if _egca ,_fabe :=_cbgad .GetCharMetrics (code );_fabe {return _egca ,_fabe ;};case *pdfFontType0 :if _gffb ,_fgfga :=_cbgad .GetCharMetrics (code );
_fgfga {return _gffb ,_fgfga ;};case *pdfCIDFontType0 :if _fgaf ,_gdggf :=_cbgad .GetCharMetrics (code );_gdggf {return _fgaf ,_gdggf ;};case *pdfCIDFontType2 :if _cbcff ,_ddgd :=_cbgad .GetCharMetrics (code );_ddgd {return _cbcff ,_ddgd ;};case *pdfFontType3 :if _bgcda ,_bebgf :=_cbgad .GetCharMetrics (code );
_bebgf {return _bgcda ,_bebgf ;};default:_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_abad ._gbbee );
return _aedcb ,false ;};if _egge ,_adge :=_abad .GetFontDescriptor ();_adge ==nil &&_egge !=nil {return _ec .CharMetrics {Wx :_egge ._bcae },true ;};_ae .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_abad );
return _aedcb ,false ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_afdgf *Image )ToGoImage ()(_baa .Image ,error ){_ae .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_fdgb ,_aabc :=_ac .NewImage (int (_afdgf .Width ),int (_afdgf .Height ),int (_afdgf .BitsPerComponent ),_afdgf .ColorComponents ,_afdgf .Data ,_afdgf ._bbcf ,_afdgf ._bfdc );
if _aabc !=nil {return nil ,_aabc ;};return _fdgb ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_aacb _dgg .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_beged _baa .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_ebffc _baa .Image )(*Image ,error );

// Compress an image.
Compress (_facga *Image ,_dgddg int64 )(*Image ,error );};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_gccec *PdfPage )AddContentStreamByString (contentStr string )error {_fcaag ,_bbgae :=_daa .MakeStream ([]byte (contentStr ),_daa .NewFlateEncoder ());if _bbgae !=nil {return _bbgae ;};if _gccec .Contents ==nil {_gccec .Contents =_fcaag ;}else {_gdacda :=_daa .TraceToDirectObject (_gccec .Contents );
_aaacf ,_eabdc :=_gdacda .(*_daa .PdfObjectArray );if !_eabdc {_aaacf =_daa .MakeArray (_gdacda );};_aaacf .Append (_fcaag );_gccec .Contents =_aaacf ;};return nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;func (_ccg *PdfReader )newPdfActionFromIndirectObject (_abcg *_daa .PdfIndirectObject )(*PdfAction ,error ){_dac ,_ecf :=_abcg .PdfObject .(*_daa .PdfObjectDictionary );if !_ecf {return nil ,_c .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ccg ._beaec .GetModelFromPrimitive (_dac );model !=nil {_dbbe ,_gcc :=model .(*PdfAction );if !_gcc {return nil ,_c .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _dbbe ,nil ;};_cbad :=&PdfAction {};_cbad ._ad =_abcg ;_ccg ._beaec .Register (_dac ,_cbad );if _gdgd :=_dac .Get ("\u0054\u0079\u0070\u0065");_gdgd !=nil {_efc ,_afd :=_gdgd .(*_daa .PdfObjectName );if !_afd {_ae .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gdgd );
}else {if *_efc !="\u0041\u0063\u0074\u0069\u006f\u006e"{_ae .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_efc );
};_cbad .Type =_efc ;};};if _ade :=_dac .Get ("\u004e\u0065\u0078\u0074");_ade !=nil {_cbad .Next =_ade ;};if _bfd :=_dac .Get ("\u0053");_bfd !=nil {_cbad .S =_bfd ;};_fec ,_ed :=_cbad .S .(*_daa .PdfObjectName );if !_ed {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cbad .S );
return nil ,_c .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cbad .S );};_fbb :=PdfActionType (_fec .String ());
switch _fbb {case ActionTypeGoTo :_gg ,_dcb :=_ccg .newPdfActionGotoFromDict (_dac );if _dcb !=nil {return nil ,_dcb ;};_gg .PdfAction =_cbad ;_cbad ._gfc =_gg ;return _cbad ,nil ;case ActionTypeGoToR :_aggb ,_bga :=_ccg .newPdfActionGotoRFromDict (_dac );
if _bga !=nil {return nil ,_bga ;};_aggb .PdfAction =_cbad ;_cbad ._gfc =_aggb ;return _cbad ,nil ;case ActionTypeGoToE :_ddf ,_gcd :=_ccg .newPdfActionGotoEFromDict (_dac );if _gcd !=nil {return nil ,_gcd ;};_ddf .PdfAction =_cbad ;_cbad ._gfc =_ddf ;
return _cbad ,nil ;case ActionTypeLaunch :_abf ,_aff :=_ccg .newPdfActionLaunchFromDict (_dac );if _aff !=nil {return nil ,_aff ;};_abf .PdfAction =_cbad ;_cbad ._gfc =_abf ;return _cbad ,nil ;case ActionTypeThread :_bed ,_aef :=_ccg .newPdfActionThreadFromDict (_dac );
if _aef !=nil {return nil ,_aef ;};_bed .PdfAction =_cbad ;_cbad ._gfc =_bed ;return _cbad ,nil ;case ActionTypeURI :_adea ,_ecfg :=_ccg .newPdfActionURIFromDict (_dac );if _ecfg !=nil {return nil ,_ecfg ;};_adea .PdfAction =_cbad ;_cbad ._gfc =_adea ;
return _cbad ,nil ;case ActionTypeSound :_gab ,_ecd :=_ccg .newPdfActionSoundFromDict (_dac );if _ecd !=nil {return nil ,_ecd ;};_gab .PdfAction =_cbad ;_cbad ._gfc =_gab ;return _cbad ,nil ;case ActionTypeMovie :_fg ,_gac :=_ccg .newPdfActionMovieFromDict (_dac );
if _gac !=nil {return nil ,_gac ;};_fg .PdfAction =_cbad ;_cbad ._gfc =_fg ;return _cbad ,nil ;case ActionTypeHide :_dbc ,_fga :=_ccg .newPdfActionHideFromDict (_dac );if _fga !=nil {return nil ,_fga ;};_dbc .PdfAction =_cbad ;_cbad ._gfc =_dbc ;return _cbad ,nil ;
case ActionTypeNamed :_gcgf ,_fea :=_ccg .newPdfActionNamedFromDict (_dac );if _fea !=nil {return nil ,_fea ;};_gcgf .PdfAction =_cbad ;_cbad ._gfc =_gcgf ;return _cbad ,nil ;case ActionTypeSubmitForm :_dae ,_bac :=_ccg .newPdfActionSubmitFormFromDict (_dac );
if _bac !=nil {return nil ,_bac ;};_dae .PdfAction =_cbad ;_cbad ._gfc =_dae ;return _cbad ,nil ;case ActionTypeResetForm :_bde ,_bce :=_ccg .newPdfActionResetFormFromDict (_dac );if _bce !=nil {return nil ,_bce ;};_bde .PdfAction =_cbad ;_cbad ._gfc =_bde ;
return _cbad ,nil ;case ActionTypeImportData :_acd ,_cgge :=_ccg .newPdfActionImportDataFromDict (_dac );if _cgge !=nil {return nil ,_cgge ;};_acd .PdfAction =_cbad ;_cbad ._gfc =_acd ;return _cbad ,nil ;case ActionTypeSetOCGState :_bdec ,_cgb :=_ccg .newPdfActionSetOCGStateFromDict (_dac );
if _cgb !=nil {return nil ,_cgb ;};_bdec .PdfAction =_cbad ;_cbad ._gfc =_bdec ;return _cbad ,nil ;case ActionTypeRendition :_efae ,_aac :=_ccg .newPdfActionRenditionFromDict (_dac );if _aac !=nil {return nil ,_aac ;};_efae .PdfAction =_cbad ;_cbad ._gfc =_efae ;
return _cbad ,nil ;case ActionTypeTrans :_bca ,_bfda :=_ccg .newPdfActionTransFromDict (_dac );if _bfda !=nil {return nil ,_bfda ;};_bca .PdfAction =_cbad ;_cbad ._gfc =_bca ;return _cbad ,nil ;case ActionTypeGoTo3DView :_adf ,_caff :=_ccg .newPdfActionGoTo3DViewFromDict (_dac );
if _caff !=nil {return nil ,_caff ;};_adf .PdfAction =_cbad ;_cbad ._gfc =_adf ;return _cbad ,nil ;case ActionTypeJavaScript :_fgf ,_gaaa :=_ccg .newPdfActionJavaScriptFromDict (_dac );if _gaaa !=nil {return nil ,_gaaa ;};_fgf .PdfAction =_cbad ;_cbad ._gfc =_fgf ;
return _cbad ,nil ;};_ae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_fbb );return nil ,nil ;};func (_abed Image )getBase ()_ac .ImageBase {return _ac .NewImageBase (int (_abed .Width ),int (_abed .Height ),int (_abed .BitsPerComponent ),_abed .ColorComponents ,_abed .Data ,_abed ._bbcf ,_abed ._bfdc );
};func (_cecf *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// ToPdfObject returns a stream object.
func (_egfbc *XObjectForm )ToPdfObject ()_daa .PdfObject {_dded :=_egfbc ._ebedbd ;_dfeff :=_dded .PdfObjectDictionary ;if _egfbc .Filter !=nil {_dfeff =_egfbc .Filter .MakeStreamDict ();_dded .PdfObjectDictionary =_dfeff ;};_dfeff .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_dfeff .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0046\u006f\u0072\u006d"));_dfeff .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_egfbc .FormType );_dfeff .SetIfNotNil ("\u0042\u0042\u006f\u0078",_egfbc .BBox );
_dfeff .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_egfbc .Matrix );if _egfbc .Resources !=nil {_dfeff .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_egfbc .Resources .ToPdfObject ());};_dfeff .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_egfbc .Group );
_dfeff .SetIfNotNil ("\u0052\u0065\u0066",_egfbc .Ref );_dfeff .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_egfbc .MetaData );_dfeff .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_egfbc .PieceInfo );_dfeff .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_egfbc .LastModified );
_dfeff .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_egfbc .StructParent );_dfeff .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_egfbc .StructParents );_dfeff .SetIfNotNil ("\u004f\u0050\u0049",_egfbc .OPI );
_dfeff .SetIfNotNil ("\u004f\u0043",_egfbc .OC );_dfeff .SetIfNotNil ("\u004e\u0061\u006d\u0065",_egfbc .Name );_dfeff .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_daa .MakeInteger (int64 (len (_egfbc .Stream ))));_dded .Stream =_egfbc .Stream ;return _dded ;
};func (_cafe *PdfField )inherit (_afdae func (*PdfField )bool )(bool ,error ){_gafd :=map[*PdfField ]bool {};_gbbe :=false ;_dabea :=_cafe ;for _dabea !=nil {if _ ,_fdcbg :=_gafd [_dabea ];_fdcbg {return false ,_ff .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");
};_ebab :=_afdae (_dabea );if _ebab {_gbbe =true ;break ;};_gafd [_dabea ]=true ;_dabea =_dabea .Parent ;};return _gbbe ,nil ;};

// M returns the value of the magenta component of the color.
func (_bbcc *PdfColorDeviceCMYK )M ()float64 {return _bbcc [1]};func (_gbfgc *PdfWriter )copyObjects (){_beba :=make (map[_daa .PdfObject ]_daa .PdfObject );_dcgfe :=make ([]_daa .PdfObject ,0,len (_gbfgc ._aaaae ));_acff :=make (map[_daa .PdfObject ]struct{},len (_gbfgc ._aaaae ));
_agfb :=make (map[_daa .PdfObject ]struct{});for _ ,_dged :=range _gbfgc ._aaaae {_ceebbd :=_gbfgc .copyObject (_dged ,_beba ,_agfb ,false );if _ ,_aggc :=_agfb [_dged ];_aggc {continue ;};_dcgfe =append (_dcgfe ,_ceebbd );_acff [_ceebbd ]=struct{}{};};
_gbfgc ._aaaae =_dcgfe ;_gbfgc ._egfgg =_acff ;_gbfgc ._badb =_gbfgc .copyObject (_gbfgc ._badb ,_beba ,nil ,false ).(*_daa .PdfIndirectObject );_gbfgc ._gcdee =_gbfgc .copyObject (_gbfgc ._gcdee ,_beba ,nil ,false ).(*_daa .PdfIndirectObject );if _gbfgc ._efea !=nil {_gbfgc ._efea =_gbfgc .copyObject (_gbfgc ._efea ,_beba ,nil ,false ).(*_daa .PdfIndirectObject );
};if _gbfgc ._ffde {_acbbd :=make (map[_daa .PdfObject ]int64 );for _gbeed ,_fgfag :=range _gbfgc ._faabf {if _dccdf ,_gegbff :=_beba [_gbeed ];_gegbff {_acbbd [_dccdf ]=_fgfag ;}else {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_gbfgc ._faabf =_acbbd ;};};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _dgg .ReadSeeker )(*CompliancePdfReader ,error ){const _aaag ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_gbdg ,_ebadd :=_ccac (rs ,&ReaderOpts {ComplianceMode :true },false ,_aaag );
if _ebadd !=nil {return nil ,_ebadd ;};return &CompliancePdfReader {PdfReader :_gbdg },nil ;};

// SetFillImage attach a model.Image to push button.
func (_dbdb *PdfFieldButton )SetFillImage (image *Image ){if _dbdb .IsPush (){_dbdb ._bdecg =image ;};};

// String returns a string describing the font descriptor.
func (_fedf *PdfFontDescriptor )String ()string {var _cfed []string ;if _fedf .FontName !=nil {_cfed =append (_cfed ,_fedf .FontName .String ());};if _fedf .FontFamily !=nil {_cfed =append (_cfed ,_fedf .FontFamily .String ());};if _fedf .fontFile !=nil {_cfed =append (_cfed ,_fedf .fontFile .String ());
};if _fedf ._aafbe !=nil {_cfed =append (_cfed ,_fedf ._aafbe .String ());};_cfed =append (_cfed ,_c .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_fedf .FontFile3 !=nil ));return _c .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_db .Join (_cfed ,"\u002c\u0020"));
};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_daa .PdfObjectArray ;Domain *_daa .PdfObjectArray ;Function []PdfFunction ;Extend *_daa .PdfObjectArray ;};func (_caea *PdfWriter )setHashIDs (_ggfg _a .Hash )error {_adcdb :=_ggfg .Sum (nil );if _caea ._adcff ==""{_caea ._adcff =_b .EncodeToString (_adcdb [:8]);
};_caea .setDocumentIDs (_caea ._adcff ,_b .EncodeToString (_adcdb [8:]));return nil ;};func (_eff *PdfReader )newPdfActionMovieFromDict (_daag *_daa .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_daag .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_daag .Get ("\u0054"),Operation :_daag .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};func _dfagd (_ebcff _daa .PdfObject ){_ae .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_ebcff ,_ebcff .String ());if _fgcab ,_fdeb :=_ebcff .(*_daa .PdfObjectStream );_fdeb {_ecdda ,_deagc :=_daa .DecodeStream (_fgcab );
if _deagc !=nil {_ae .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_deagc );return ;};_ae .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_ecdda );}else if _efdbd ,_bedge :=_ebcff .(*_daa .PdfIndirectObject );
_bedge {_ae .Log .Debug ("\u0025\u0054\u0020%\u0076",_efdbd .PdfObject ,_efdbd .PdfObject );_ae .Log .Debug ("\u0025\u0073",_efdbd .PdfObject .String ());};};func (_afcga *pdfFontSimple )getFontEncoding ()(_cggg string ,_bgefc map[_df .CharCode ]_df .GlyphName ,_bcggf error ){_cggg ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _feac ,_agbd :=_acbae [_afcga ._agfd ];_agbd {_cggg =_feac ;}else if _afcga .fontFlags ()&_gaed !=0{for _ddcge ,_fabacf :=range _acbae {if _db .Contains (_afcga ._agfd ,_ddcge ){_cggg =_fabacf ;break ;};};};if _afcga .Encoding ==nil {return _cggg ,nil ,nil ;
};switch _gffa :=_afcga .Encoding .(type ){case *_daa .PdfObjectName :return string (*_gffa ),nil ,nil ;case *_daa .PdfObjectDictionary :_cbade ,_bdgeb :=_daa .GetName (_gffa .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _bdgeb {_cggg =_cbade .String ();};if _ebgf :=_gffa .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_ebgf !=nil {_ecdae ,_dbeb :=_daa .GetArray (_ebgf );if !_dbeb {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_gffa ,_gffa .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_daa .ErrTypeError ;};_bgefc ,_bcggf =_df .FromFontDifferences (_ecdae );};return _cggg ,_bgefc ,_bcggf ;default:_ae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_afcga .Encoding ,_afcga .Encoding );
return "",nil ,_daa .ErrTypeError ;};};func _bdece (_egbd *PdfPage )map[_daa .PdfObjectName ]_daa .PdfObject {_dbca :=make (map[_daa .PdfObjectName ]_daa .PdfObject );if _egbd .Resources ==nil {return _dbca ;};if _egbd .Resources .Font !=nil {if _gagc ,_faga :=_daa .GetDict (_egbd .Resources .Font );
_faga {for _ ,_aaeg :=range _gagc .Keys (){_dbca [_aaeg ]=_gagc .Get (_aaeg );};};};if _egbd .Resources .ExtGState !=nil {if _ddegf ,_deag :=_daa .GetDict (_egbd .Resources .ExtGState );_deag {for _ ,_abda :=range _ddegf .Keys (){_dbca [_abda ]=_ddegf .Get (_abda );
};};};if _egbd .Resources .XObject !=nil {if _effb ,_dcefd :=_daa .GetDict (_egbd .Resources .XObject );_dcefd {for _ ,_gcbb :=range _effb .Keys (){_dbca [_gcbb ]=_effb .Get (_gcbb );};};};if _egbd .Resources .Pattern !=nil {if _cgda ,_ffdc :=_daa .GetDict (_egbd .Resources .Pattern );
_ffdc {for _ ,_afdc :=range _cgda .Keys (){_dbca [_afdc ]=_cgda .Get (_afdc );};};};if _egbd .Resources .Shading !=nil {if _cbeab ,_dccb :=_daa .GetDict (_egbd .Resources .Shading );_dccb {for _ ,_gefe :=range _cbeab .Keys (){_dbca [_gefe ]=_cbeab .Get (_gefe );
};};};if _egbd .Resources .ProcSet !=nil {if _geec ,_eeae :=_daa .GetDict (_egbd .Resources .ProcSet );_eeae {for _ ,_cee :=range _geec .Keys (){_dbca [_cee ]=_geec .Get (_cee );};};};if _egbd .Resources .Properties !=nil {if _gbff ,_gbef :=_daa .GetDict (_egbd .Resources .Properties );
_gbef {for _ ,_ddge :=range _gbff .Keys (){_dbca [_ddge ]=_gbff .Get (_ddge );};};};return _dbca ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func _faef (_agce *_daa .PdfObjectStream )(*PdfFunctionType0 ,error ){_ceec :=&PdfFunctionType0 {};_ceec ._ggbgd =_agce ;_gbcc :=_agce .PdfObjectDictionary ;_caafd ,_gfaag :=_daa .TraceToDirectObject (_gbcc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_daa .PdfObjectArray );
if !_gfaag {_ae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _caafd .Len ()< 0||_caafd .Len ()%2!=0{_ae .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_ceec .NumInputs =_caafd .Len ()/2;_ecgfg ,_adfg :=_caafd .ToFloat64Array ();if _adfg !=nil {return nil ,_adfg ;};_ceec .Domain =_ecgfg ;_caafd ,_gfaag =_daa .TraceToDirectObject (_gbcc .Get ("\u0052\u0061\u006eg\u0065")).(*_daa .PdfObjectArray );if !_gfaag {_ae .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _caafd .Len ()< 0||_caafd .Len ()%2!=0{return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ceec .NumOutputs =_caafd .Len ()/2;_cdda ,_adfg :=_caafd .ToFloat64Array ();if _adfg !=nil {return nil ,_adfg ;};_ceec .Range =_cdda ;_caafd ,_gfaag =_daa .TraceToDirectObject (_gbcc .Get ("\u0053\u0069\u007a\u0065")).(*_daa .PdfObjectArray );if !_gfaag {_ae .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_fffgc ,_adfg :=_caafd .ToIntegerArray ();
if _adfg !=nil {return nil ,_adfg ;};if len (_fffgc )!=_ceec .NumInputs {_ae .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ceec .Size =_fffgc ;_babec ,_gfaag :=_daa .TraceToDirectObject (_gbcc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_daa .PdfObjectInteger );
if !_gfaag {_ae .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_babec !=1&&*_babec !=2&&*_babec !=4&&*_babec !=8&&*_babec !=12&&*_babec !=16&&*_babec !=24&&*_babec !=32{_ae .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_babec );
return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ceec .BitsPerSample =int (*_babec );_ceec .Order =1;_dggfg ,_gfaag :=_daa .TraceToDirectObject (_gbcc .Get ("\u004f\u0072\u0064e\u0072")).(*_daa .PdfObjectInteger );
if _gfaag {if *_dggfg !=1&&*_dggfg !=3{_ae .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_dggfg );return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ceec .Order =int (*_dggfg );
};_caafd ,_gfaag =_daa .TraceToDirectObject (_gbcc .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_daa .PdfObjectArray );if _gfaag {_cddef ,_dcbg :=_caafd .ToFloat64Array ();if _dcbg !=nil {return nil ,_dcbg ;};_ceec .Encode =_cddef ;};_caafd ,_gfaag =_daa .TraceToDirectObject (_gbcc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_daa .PdfObjectArray );
if _gfaag {_dfcce ,_bgdaf :=_caafd .ToFloat64Array ();if _bgdaf !=nil {return nil ,_bgdaf ;};_ceec .Decode =_dfcce ;};_gbaad ,_adfg :=_daa .DecodeStream (_agce );if _adfg !=nil {return nil ,_adfg ;};_ceec ._bgeef =_gbaad ;return _ceec ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fdgd *PdfBorderStyle )ToPdfObject ()_daa .PdfObject {_bcda :=_daa .MakeDict ();if _fdgd ._cgfb !=nil {if _dbfe ,_ace :=_fdgd ._cgfb .(*_daa .PdfIndirectObject );_ace {_dbfe .PdfObject =_bcda ;};};_bcda .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _fdgd .W !=nil {_bcda .Set ("\u0057",_daa .MakeFloat (*_fdgd .W ));};if _fdgd .S !=nil {_bcda .Set ("\u0053",_daa .MakeName (_fdgd .S .GetPdfName ()));};if _fdgd .D !=nil {_bcda .Set ("\u0044",_daa .MakeArrayFromIntegers (*_fdgd .D ));};if _fdgd ._cgfb !=nil {return _fdgd ._cgfb ;
};return _bcda ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_adba *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_ecgc :=func (_adfdg float64 )float64 {if _adfdg >=6.0/29{return _adfdg *_adfdg *_adfdg ;};return 108.0/841*(_adfdg -4.0/29.0);};_cbbe ,_dafac :=color .(*PdfColorLab );if !_dafac {_ae .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_cbbe .L ();AStar :=_cbbe .A ();BStar :=_cbbe .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_adba .WhitePoint [0]*_ecgc (L );Y :=_adba .WhitePoint [1]*_ecgc (M );Z :=_adba .WhitePoint [2]*_ecgc (N );_gfag :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bfbg :=-0.969256*X +1.875992*Y +0.041556*Z ;_ebg :=0.055648*X +-0.204043*Y +1.057311*Z ;_gfag =_ce .Min (_ce .Max (_gfag ,0),1.0);
_bfbg =_ce .Min (_ce .Max (_bfbg ,0),1.0);_ebg =_ce .Min (_ce .Max (_ebg ,0),1.0);return NewPdfColorDeviceRGB (_gfag ,_bfbg ,_ebg ),nil ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_bfaf *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _daa .GetNumberAsFloat (_bfaf .Ascent );};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_ffcda *PdfFont )CharcodesToUnicodeWithStats (charcodes []_df .CharCode )(_dadd []rune ,_ceeg ,_eggg int ){_ffba ,_ceeg ,_eggg :=_ffcda .CharcodesToStrings (charcodes );return []rune (_db .Join (_ffba ,"")),_ceeg ,_eggg ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_edgbb *PdfReader )GetObjectNums ()[]int {return _edgbb ._adgcg .GetObjectNums ()};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);func (_ebfc *PdfReader )newPdfAnnotationSoundFromDict (_gfb *_daa .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_fbaf :=PdfAnnotationSound {};
_gaaac ,_dba :=_ebfc .newPdfAnnotationMarkupFromDict (_gfb );if _dba !=nil {return nil ,_dba ;};_fbaf .PdfAnnotationMarkup =_gaaac ;_fbaf .Name =_gfb .Get ("\u004e\u0061\u006d\u0065");_fbaf .Sound =_gfb .Get ("\u0053\u006f\u0075n\u0064");return &_fbaf ,nil ;
};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _daa .PdfObjectName ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_bdef ,_debb :=NewStandard14Font (basefont );if _debb !=nil {panic (_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _bdef ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_fecgc ,_ddafg :=_dga .Open (filePath );if _ddafg !=nil {_ae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ddafg );
return nil ,_ddafg ;};defer _fecgc .Close ();return NewCompositePdfFontFromTTF (_fecgc );};

// Width returns the width of `rect`.
func (_cbdaf *PdfRectangle )Width ()float64 {return _ce .Abs (_cbdaf .Urx -_cbdaf .Llx )};func (_gffec *PdfWriter )writeBytes (_caecb []byte ){if _gffec ._ccfbf !=nil {return ;};_egfab ,_feecgb :=_gffec ._ccbbdb .Write (_caecb );_gffec ._badfb +=int64 (_egfab );
_gffec ._ccfbf =_feecgb ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_aacf *_daa .PdfIndirectObject ;};type fontCommon struct{_agfd string ;_fbafe string ;_cddg string ;_fbeba _daa .PdfObject ;_efedc *_cbg .CMap ;_eccc *PdfFontDescriptor ;
_decda int64 ;};func _dgcae (_cgeec _daa .PdfObject )(*PdfFunctionType3 ,error ){_eaaed :=&PdfFunctionType3 {};var _caedf *_daa .PdfObjectDictionary ;if _befdg ,_aadag :=_cgeec .(*_daa .PdfIndirectObject );_aadag {_edegf ,_acefd :=_befdg .PdfObject .(*_daa .PdfObjectDictionary );
if !_acefd {return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eaaed ._ffgad =_befdg ;_caedf =_edegf ;}else if _dacea ,_bcdg :=_cgeec .(*_daa .PdfObjectDictionary );_bcdg {_caedf =_dacea ;
}else {return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eccb ,_dedb :=_daa .TraceToDirectObject (_caedf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_daa .PdfObjectArray );if !_dedb {_ae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _eccb .Len ()!=2{_ae .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_ff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_abagg ,_cgfaf :=_eccb .ToFloat64Array ();if _cgfaf !=nil {return nil ,_cgfaf ;};_eaaed .Domain =_abagg ;_eccb ,_dedb =_daa .TraceToDirectObject (_caedf .Get ("\u0052\u0061\u006eg\u0065")).(*_daa .PdfObjectArray );
if _dedb {if _eccb .Len ()< 0||_eccb .Len ()%2!=0{return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cafbf ,_bfcf :=_eccb .ToFloat64Array ();if _bfcf !=nil {return nil ,_bfcf ;};_eaaed .Range =_cafbf ;
};_eccb ,_dedb =_daa .TraceToDirectObject (_caedf .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_daa .PdfObjectArray );if !_dedb {_ae .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_eaaed .Functions =[]PdfFunction {};
for _ ,_caggc :=range _eccb .Elements (){_cfec ,_bbaeb :=_bcec (_caggc );if _bbaeb !=nil {return nil ,_bbaeb ;};_eaaed .Functions =append (_eaaed .Functions ,_cfec );};_eccb ,_dedb =_daa .TraceToDirectObject (_caedf .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_daa .PdfObjectArray );
if !_dedb {_ae .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_fdcg ,_cgfaf :=_eccb .ToFloat64Array ();if _cgfaf !=nil {return nil ,_cgfaf ;};_eaaed .Bounds =_fdcg ;if len (_eaaed .Bounds )!=len (_eaaed .Functions )-1{_ae .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_eaaed .Bounds ),len (_eaaed .Functions ));
return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eccb ,_dedb =_daa .TraceToDirectObject (_caedf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_daa .PdfObjectArray );if !_dedb {_ae .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_abadf ,_cgfaf :=_eccb .ToFloat64Array ();
if _cgfaf !=nil {return nil ,_cgfaf ;};_eaaed .Encode =_abadf ;if len (_eaaed .Encode )!=2*len (_eaaed .Functions ){_ae .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_eaaed .Encode ),len (_eaaed .Functions ));
return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _eaaed ,nil ;};func (_dbbac *PdfReader )newPdfActionHideFromDict (_dce *_daa .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_dce .Get ("\u0054"),H :_dce .Get ("\u0048")},nil ;
};func _dcaa (_bgaff *_daa .PdfObjectDictionary )(*PdfShadingType5 ,error ){_aaffag :=PdfShadingType5 {};_gfcbg :=_bgaff .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gfcbg ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bcdc ,_gdaeg :=_gfcbg .(*_daa .PdfObjectInteger );if !_gdaeg {_ae .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gfcbg );
return nil ,_daa .ErrTypeError ;};_aaffag .BitsPerCoordinate =_bcdc ;_gfcbg =_bgaff .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gfcbg ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_bcdc ,_gdaeg =_gfcbg .(*_daa .PdfObjectInteger );if !_gdaeg {_ae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gfcbg );
return nil ,_daa .ErrTypeError ;};_aaffag .BitsPerComponent =_bcdc ;_gfcbg =_bgaff .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _gfcbg ==nil {_ae .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_bcdc ,_gdaeg =_gfcbg .(*_daa .PdfObjectInteger );if !_gdaeg {_ae .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gfcbg );
return nil ,_daa .ErrTypeError ;};_aaffag .VerticesPerRow =_bcdc ;_gfcbg =_bgaff .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gfcbg ==nil {_ae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_abfga ,_gdaeg :=_gfcbg .(*_daa .PdfObjectArray );if !_gdaeg {_ae .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gfcbg );
return nil ,_daa .ErrTypeError ;};_aaffag .Decode =_abfga ;if _dbdeb :=_bgaff .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dbdeb !=nil {_aaffag .Function =[]PdfFunction {};if _abee ,_geeea :=_dbdeb .(*_daa .PdfObjectArray );_geeea {for _ ,_aceda :=range _abee .Elements (){_fbceg ,_fcbgg :=_bcec (_aceda );
if _fcbgg !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fcbgg );return nil ,_fcbgg ;};_aaffag .Function =append (_aaffag .Function ,_fbceg );
};}else {_abeff ,_gfcfd :=_bcec (_dbdeb );if _gfcfd !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gfcfd );return nil ,_gfcfd ;
};_aaffag .Function =append (_aaffag .Function ,_abeff );};};return &_aaffag ,nil ;};func (_ggdb *pdfFontType0 )subsetRegistered ()error {_begg ,_cgab :=_ggdb .DescendantFont ._gbbee .(*pdfCIDFontType2 );if !_cgab {_ae .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_ggdb .DescendantFont );
return nil ;};if _begg ==nil {return nil ;};if _begg ._eccc ==nil {_ae .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _ggdb ._dfgee ==nil {_ae .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_edcf ,_cgab :=_daa .GetStream (_begg ._eccc .FontFile2 );if !_cgab {_ae .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ff .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ccaf ,_ceeec :=_daa .DecodeStream (_edcf );if _ceeec !=nil {_ae .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ceeec );
return _ceeec ;};_feadc ,_ceeec :=_eg .Parse (_ag .NewReader (_ccaf ));if _ceeec !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_edcf .Stream ));
return _ceeec ;};var _dbbf []rune ;var _acdfb *_eg .Font ;switch _gaab :=_ggdb ._dfgee .(type ){case *_df .TrueTypeFontEncoder :_dbbf =_gaab .RegisteredRunes ();_acdfb ,_ceeec =_feadc .SubsetKeepRunes (_dbbf );if _ceeec !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ceeec );
return _ceeec ;};_gaab .SubsetRegistered ();case *_df .IdentityEncoder :_dbbf =_gaab .RegisteredRunes ();_gbgc :=make ([]_eg .GlyphIndex ,len (_dbbf ));for _ccddf ,_eccfa :=range _dbbf {_gbgc [_ccddf ]=_eg .GlyphIndex (_eccfa );};_acdfb ,_ceeec =_feadc .SubsetKeepIndices (_gbgc );
if _ceeec !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ceeec );return _ceeec ;};case _df .SimpleEncoder :_fabd :=_gaab .Charcodes ();for _ ,_ebef :=range _fabd {_aggbc ,_ebcf :=_gaab .CharcodeToRune (_ebef );if !_ebcf {_ae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_ebef );
continue ;};_dbbf =append (_dbbf ,_aggbc );};default:return _c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_ggdb ._dfgee );
};var _cgbfa _ag .Buffer ;_ceeec =_acdfb .Write (&_cgbfa );if _ceeec !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ceeec );return _ceeec ;};if _ggdb ._efedc !=nil {_cbec :=make (map[_cbg .CharCode ]rune ,len (_dbbf ));for _ ,_dagf :=range _dbbf {_dfbg ,_dbde :=_ggdb ._dfgee .RuneToCharcode (_dagf );
if !_dbde {continue ;};_cbec [_cbg .CharCode (_dfbg )]=_dagf ;};_ggdb ._efedc =_cbg .NewToUnicodeCMap (_cbec );};_edcf ,_ceeec =_daa .MakeStream (_cgbfa .Bytes (),_daa .NewFlateEncoder ());if _ceeec !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ceeec );
return _ceeec ;};_edcf .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_daa .MakeInteger (int64 (_cgbfa .Len ())));if _eecbd ,_beaf :=_daa .GetStream (_begg ._eccc .FontFile2 );_beaf {*_eecbd =*_edcf ;}else {_begg ._eccc .FontFile2 =_edcf ;};_cdad :=_dacd ();
if len (_ggdb ._agfd )> 0{_ggdb ._agfd =_cbaff (_ggdb ._agfd ,_cdad );};if len (_begg ._agfd )> 0{_begg ._agfd =_cbaff (_begg ._agfd ,_cdad );};if len (_ggdb ._cddg )> 0{_ggdb ._cddg =_cbaff (_ggdb ._cddg ,_cdad );};if _begg ._eccc !=nil {_bdefa ,_ebdbd :=_daa .GetName (_begg ._eccc .FontName );
if _ebdbd &&len (_bdefa .String ())> 0{_ecfee :=_cbaff (_bdefa .String (),_cdad );_begg ._eccc .FontName =_daa .MakeName (_ecfee );};};return nil ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _daa .StreamEncoder )(*XObjectImage ,error ){_cgcfg :=NewXObjectImage ();return UpdateXObjectImageFromImage (_cgcfg ,img ,cs ,encoder );};func (_gga *PdfReader )newPdfAnnotationScreenFromDict (_gcb *_daa .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_ecfdg :=PdfAnnotationScreen {};
_ecfdg .T =_gcb .Get ("\u0054");_ecfdg .MK =_gcb .Get ("\u004d\u004b");_ecfdg .A =_gcb .Get ("\u0041");_ecfdg .AA =_gcb .Get ("\u0041\u0041");return &_ecfdg ,nil ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_bgeef []byte ;_bgacd []uint32 ;_ggbgd *_daa .PdfObjectStream ;};func (_aaa *PdfReader )newPdfAnnotationFreeTextFromDict (_daae *_daa .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_baeg :=PdfAnnotationFreeText {};
_caee ,_dece :=_aaa .newPdfAnnotationMarkupFromDict (_daae );if _dece !=nil {return nil ,_dece ;};_baeg .PdfAnnotationMarkup =_caee ;_baeg .DA =_daae .Get ("\u0044\u0041");_baeg .Q =_daae .Get ("\u0051");_baeg .RC =_daae .Get ("\u0052\u0043");_baeg .DS =_daae .Get ("\u0044\u0053");
_baeg .CL =_daae .Get ("\u0043\u004c");_baeg .IT =_daae .Get ("\u0049\u0054");_baeg .BE =_daae .Get ("\u0042\u0045");_baeg .RD =_daae .Get ("\u0052\u0044");_baeg .BS =_daae .Get ("\u0042\u0053");_baeg .LE =_daae .Get ("\u004c\u0045");return &_baeg ,nil ;
};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _daa .PdfObject ;};func _aeeea (_dfec *[]*PdfField ,_dfba FieldFilterFunc ,_fgfgf bool )[]*PdfField {if _dfec ==nil {return nil ;};_gggda :=*_dfec ;if len (*_dfec )==0{return nil ;
};_gfgf :=_gggda [:0];if _dfba ==nil {_dfba =func (*PdfField )bool {return true };};var _fcbgb []*PdfField ;for _ ,_dccec :=range _gggda {_aaddc :=_dfba (_dccec );if _aaddc {_fcbgb =append (_fcbgb ,_dccec );if len (_dccec .Kids )> 0{_fcbgb =append (_fcbgb ,_aeeea (&_dccec .Kids ,_dfba ,_fgfgf )...);
};};if !_fgfgf ||!_aaddc ||len (_dccec .Kids )> 0{_gfgf =append (_gfgf ,_dccec );};};*_dfec =_gfgf ;return _fcbgb ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_aegad *PdfPageResources )SetPatternByName (keyName _daa .PdfObjectName ,pattern _daa .PdfObject )error {if _aegad .Pattern ==nil {_aegad .Pattern =_daa .MakeDict ();};_gdaac ,_ffcca :=_daa .GetDict (_aegad .Pattern );if !_ffcca {return _daa .ErrTypeError ;
};_gdaac .Set (keyName ,pattern );return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ebgc pdfCIDFontType0 )GetCharMetrics (code _df .CharCode )(_ec .CharMetrics ,bool ){_bbbfb :=_ebgc ._bgcca ;if _dfgdf ,_afgaa :=_ebgc ._dfca [code ];_afgaa {_bbbfb =_dfgdf ;};return _ec .CharMetrics {Wx :_bbbfb },true ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_bfcb *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_gccd :=_gf .NewReader (img .getBase ());_fgeb :=_ac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_efada :=_gf .NewWriter (_fgeb );
_baaa :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_bggg :=make ([]uint32 ,3);var (_aged error ;_afag ,_gcdb ,_agegg ,_cgdb ,_acdbg ,_daba float64 ;);for {_aged =_gccd .ReadSamples (_bggg );if _aged ==_dgg .EOF {break ;}else if _aged !=nil {return img ,_aged ;
};_afag =float64 (_bggg [0])/_baaa ;_gcdb =float64 (_bggg [1])/_baaa ;_agegg =float64 (_bggg [2])/_baaa ;_cgdb =_bfcb .Matrix [0]*_ce .Pow (_afag ,_bfcb .Gamma [0])+_bfcb .Matrix [3]*_ce .Pow (_gcdb ,_bfcb .Gamma [1])+_bfcb .Matrix [6]*_ce .Pow (_agegg ,_bfcb .Gamma [2]);
_acdbg =_bfcb .Matrix [1]*_ce .Pow (_afag ,_bfcb .Gamma [0])+_bfcb .Matrix [4]*_ce .Pow (_gcdb ,_bfcb .Gamma [1])+_bfcb .Matrix [7]*_ce .Pow (_agegg ,_bfcb .Gamma [2]);_daba =_bfcb .Matrix [2]*_ce .Pow (_afag ,_bfcb .Gamma [0])+_bfcb .Matrix [5]*_ce .Pow (_gcdb ,_bfcb .Gamma [1])+_bfcb .Matrix [8]*_ce .Pow (_agegg ,_bfcb .Gamma [2]);
_afag =3.240479*_cgdb +-1.537150*_acdbg +-0.498535*_daba ;_gcdb =-0.969256*_cgdb +1.875992*_acdbg +0.041556*_daba ;_agegg =0.055648*_cgdb +-0.204043*_acdbg +1.057311*_daba ;_afag =_ce .Min (_ce .Max (_afag ,0),1.0);_gcdb =_ce .Min (_ce .Max (_gcdb ,0),1.0);
_agegg =_ce .Min (_ce .Max (_agegg ,0),1.0);_bggg [0]=uint32 (_afag *_baaa );_bggg [1]=uint32 (_gcdb *_baaa );_bggg [2]=uint32 (_agegg *_baaa );if _aged =_efada .WriteSamples (_bggg );_aged !=nil {return img ,_aged ;};};return _geda (&_fgeb ),nil ;};func _afdag (_bfgef *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_bfgef }};


// ParsePdfObject parses input pdf object into given output intent.
func (_gfgebe *PdfOutputIntent )ParsePdfObject (object _daa .PdfObject )error {_ggcae ,_gcaf :=_daa .GetDict (object );if !_gcaf {_ae .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _ff .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_gfgebe ._effbd =_ggcae ;_gfgebe .Type ,_ =_ggcae .GetString ("\u0054\u0079\u0070\u0065");_dacf ,_gcaf :=_ggcae .GetString ("\u0053");if _gcaf {switch _dacf {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_gfgebe .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_gfgebe .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_gfgebe .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_gfgebe .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_gfgebe .S =PdfOutputIntentTypeX ;
};};_gfgebe .OutputCondition ,_ =_ggcae .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_gfgebe .OutputConditionIdentifier ,_ =_ggcae .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_gfgebe .RegistryName ,_ =_ggcae .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_gfgebe .Info ,_ =_ggcae .GetString ("\u0049\u006e\u0066\u006f");if _cddgf ,_ccbcb :=_daa .GetStream (_ggcae .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_ccbcb {_gfgebe .ColorComponents ,_ =_daa .GetIntVal (_cddgf .Get ("\u004e"));_bgeed ,_dcbac :=_daa .DecodeStream (_cddgf );if _dcbac !=nil {return _dcbac ;};_gfgebe .DestOutputProfile =_bgeed ;};return nil ;};var (_dabc =_de .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_bfeg =_de .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_fdgeb =_de .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_dfdgf ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_bdddf ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_ccbc ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);func (_dadfd *PdfWriter )checkPendingObjects (){for _afbfb ,_dcabd :=range _dadfd ._ffacb {if !_dadfd .hasObject (_afbfb ){_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_afbfb ,_afbfb ,_afbfb );
for _ ,_aacfe :=range _dcabd {for _ ,_gbfab :=range _aacfe .Keys (){_egbgg :=_aacfe .Get (_gbfab );if _egbgg ==_afbfb {_ae .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_aacfe .Set (_gbfab ,_daa .MakeNull ());break ;};};};};};};

// IsSimple returns true if `font` is a simple font.
func (_fbdg *PdfFont )IsSimple ()bool {_ ,_ddegd :=_fbdg ._gbbee .(*pdfFontSimple );return _ddegd };func _cdcd (_bccg *_daa .PdfObjectDictionary )(*PdfShadingType3 ,error ){_cbgbe :=PdfShadingType3 {};_ddeea :=_bccg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _ddeea ==nil {_ae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;
};_bgbc ,_feebc :=_ddeea .(*_daa .PdfObjectArray );if !_feebc {_ae .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ddeea );return nil ,_daa .ErrTypeError ;
};if _bgbc .Len ()!=6{_ae .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bgbc .Len ());return nil ,ErrInvalidAttribute ;};_cbgbe .Coords =_bgbc ;
if _gdeef :=_bccg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gdeef !=nil {_gdeef =_daa .TraceToDirectObject (_gdeef );_gfcfg ,_fbbea :=_gdeef .(*_daa .PdfObjectArray );if !_fbbea {_ae .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdeef );
return nil ,_daa .ErrTypeError ;};_cbgbe .Domain =_gfcfg ;};_ddeea =_bccg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ddeea ==nil {_ae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cbgbe .Function =[]PdfFunction {};if _afac ,_fdag :=_ddeea .(*_daa .PdfObjectArray );_fdag {for _ ,_gfdgf :=range _afac .Elements (){_ebcdc ,_daada :=_bcec (_gfdgf );if _daada !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_daada );
return nil ,_daada ;};_cbgbe .Function =append (_cbgbe .Function ,_ebcdc );};}else {_daefce ,_gbaae :=_bcec (_ddeea );if _gbaae !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbaae );
return nil ,_gbaae ;};_cbgbe .Function =append (_cbgbe .Function ,_daefce );};if _eecef :=_bccg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_eecef !=nil {_eecef =_daa .TraceToDirectObject (_eecef );_abeg ,_daebb :=_eecef .(*_daa .PdfObjectArray );if !_daebb {_ae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eecef );
return nil ,_daa .ErrTypeError ;};if _abeg .Len ()!=2{_ae .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_abeg .Len ());return nil ,ErrInvalidAttribute ;
};_cbgbe .Extend =_abeg ;};return &_cbgbe ,nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_ceff *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ceff .Alternate ==nil {_ae .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _ceff .N ==1{_ae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_dcee :=NewPdfColorspaceDeviceGray ();return _dcee .ColorToRGB (color );}else if _ceff .N ==3{_ae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _ceff .N ==4{_ae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_aeca :=NewPdfColorspaceDeviceCMYK ();return _aeca .ColorToRGB (color );}else {return nil ,_ff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ae .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ceff );
return _ceff .Alternate .ColorToRGB (color );};

// GetXObjectByName gets XObject by name.
func (_cfcd *PdfPage )GetXObjectByName (name _daa .PdfObjectName )(_daa .PdfObject ,bool ){_cdfd ,_caab :=_cfcd .Resources .XObject .(*_daa .PdfObjectDictionary );if !_caab {return nil ,false ;};if _bdefac :=_cdfd .Get (name );_bdefac !=nil {return _bdefac ,true ;
};return nil ,false ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_dfe *PdfAppender )SetDocInfo (info *PdfInfo ){_dfe ._eagb =info };

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_ggag *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _ddddb []_df .TextEncoder ;var _cdcf _df .CMapEncoder ;if _deaeg :=_ggag .baseFields ()._efedc ;_deaeg !=nil {_cdcf =_df .NewCMapEncoder ("",nil ,_deaeg );};_acag :=_ggag .Encoder ();
if _acag !=nil {switch _adbdd :=_acag .(type ){case _df .SimpleEncoder :_bcccc :=_adbdd .BaseName ();if _ ,_beaga :=_aggde [_bcccc ];_beaga {_ddddb =append (_ddddb ,_acag );};};};if len (_ddddb )==0{if _ggag .baseFields ()._efedc !=nil {_ddddb =append (_ddddb ,_cdcf );
};if _acag !=nil {_ddddb =append (_ddddb ,_acag );};};var _eeadb _ag .Buffer ;var _fcada int ;for _ ,_gegb :=range data {var _dbfa bool ;for _ ,_abae :=range _ddddb {if _ggae :=_abae .Encode (string (_gegb ));len (_ggae )> 0{_eeadb .Write (_ggae );_dbfa =true ;
break ;};};if !_dbfa {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_gegb );
_fcada ++;};};if _fcada !=0{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_fcada ,_ggag ,_ddddb );
};return _eeadb .Bytes (),_fcada ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ecef *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// ToPdfObject implements interface PdfModel.
func (_ebe *PdfActionGoToE )ToPdfObject ()_daa .PdfObject {_ebe .PdfAction .ToPdfObject ();_cef :=_ebe ._ad ;_fdf :=_cef .PdfObject .(*_daa .PdfObjectDictionary );_fdf .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeGoToE )));if _ebe .F !=nil {_fdf .Set ("\u0046",_ebe .F .ToPdfObject ());
};_fdf .SetIfNotNil ("\u0044",_ebe .D );_fdf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ebe .NewWindow );_fdf .SetIfNotNil ("\u0054",_ebe .T );return _cef ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_cfgg *PdfAnnotation )ToPdfObject ()_daa .PdfObject {_efef :=_cfgg ._gbf ;_cfa :=_efef .PdfObject .(*_daa .PdfObjectDictionary );_cfa .Clear ();_cfa .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName ("\u0041\u006e\u006eo\u0074"));_cfa .SetIfNotNil ("\u0052\u0065\u0063\u0074",_cfgg .Rect );
_cfa .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cfgg .Contents );_cfa .SetIfNotNil ("\u0050",_cfgg .P );_cfa .SetIfNotNil ("\u004e\u004d",_cfgg .NM );_cfa .SetIfNotNil ("\u004d",_cfgg .M );_cfa .SetIfNotNil ("\u0046",_cfgg .F );_cfa .SetIfNotNil ("\u0041\u0050",_cfgg .AP );
_cfa .SetIfNotNil ("\u0041\u0053",_cfgg .AS );_cfa .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_cfgg .Border );_cfa .SetIfNotNil ("\u0043",_cfgg .C );_cfa .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cfgg .StructParent );
_cfa .SetIfNotNil ("\u004f\u0043",_cfgg .OC );return _efef ;};

// ToPdfObject implements interface PdfModel.
func (_ddeg *PdfAnnotationPopup )ToPdfObject ()_daa .PdfObject {_ddeg .PdfAnnotation .ToPdfObject ();_gfedc :=_ddeg ._gbf ;_adff :=_gfedc .PdfObject .(*_daa .PdfObjectDictionary );_adff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0050\u006f\u0070u\u0070"));
_adff .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ddeg .Parent );_adff .SetIfNotNil ("\u004f\u0070\u0065\u006e",_ddeg .Open );return _gfedc ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_beabc *PdfReader )GetCatalogMetadata ()(_daa .PdfObject ,bool ){if _beabc ._cgace ==nil {return nil ,false ;};_dacba :=_beabc ._cgace .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _dacba ,_dacba !=nil ;};

// ToPdfObject implements interface PdfModel.
func (_ffgf *PdfAnnotationLine )ToPdfObject ()_daa .PdfObject {_ffgf .PdfAnnotation .ToPdfObject ();_bdeg :=_ffgf ._gbf ;_efag :=_bdeg .PdfObject .(*_daa .PdfObjectDictionary );_ffgf .PdfAnnotationMarkup .appendToPdfDictionary (_efag );_efag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u004c\u0069\u006e\u0065"));
_efag .SetIfNotNil ("\u004c",_ffgf .L );_efag .SetIfNotNil ("\u0042\u0053",_ffgf .BS );_efag .SetIfNotNil ("\u004c\u0045",_ffgf .LE );_efag .SetIfNotNil ("\u0049\u0043",_ffgf .IC );_efag .SetIfNotNil ("\u004c\u004c",_ffgf .LL );_efag .SetIfNotNil ("\u004c\u004c\u0045",_ffgf .LLE );
_efag .SetIfNotNil ("\u0043\u0061\u0070",_ffgf .Cap );_efag .SetIfNotNil ("\u0049\u0054",_ffgf .IT );_efag .SetIfNotNil ("\u004c\u004c\u004f",_ffgf .LLO );_efag .SetIfNotNil ("\u0043\u0050",_ffgf .CP );_efag .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ffgf .Measure );
_efag .SetIfNotNil ("\u0043\u004f",_ffgf .CO );return _bdeg ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_eggf :=&PdfColorPatternType3 {};return _eggf };

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _daa .PdfObject ;};

// B returns the value of the blue component of the color.
func (_gbfbc *PdfColorDeviceRGB )B ()float64 {return _gbfbc [2]};func (_dgff *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// GetAction returns the PDF action for the annotation link.
func (_afab *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _afab ._afgc !=nil {return _afab ._afgc ,nil ;};if _afab .A ==nil {return nil ,nil ;};if _afab ._cdbf ==nil {return nil ,nil ;};_dgac ,_bebg :=_afab ._cdbf .loadAction (_afab .A );if _bebg !=nil {return nil ,_bebg ;
};_afab ._afgc =_dgac ;return _afab ._afgc ,nil ;};func _bgdfa (_bbgfgb _daa .PdfObject )(string ,error ){_bbgfgb =_daa .TraceToDirectObject (_bbgfgb );switch _abgdc :=_bbgfgb .(type ){case *_daa .PdfObjectString :return _abgdc .Str (),nil ;case *_daa .PdfObjectStream :_cffcg ,_febc :=_daa .DecodeStream (_abgdc );
if _febc !=nil {return "",_febc ;};return string (_cffcg ),nil ;};return "",_c .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_bbgfgb );
};

// SetName sets the `Name` field of the signature.
func (_agdfg *PdfSignature )SetName (name string ){_agdfg .Name =_daa .MakeString (name )};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _dgg .ReadSeeker )(*PdfReader ,error ){const _gaaec ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _ccac (rs ,&ReaderOpts {},false ,_gaaec );};

// SetForms sets the Acroform for a PDF file.
func (_dabdg *PdfWriter )SetForms (form *PdfAcroForm )error {_dabdg ._fcgff =form ;return nil };

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_cbeeab *PdfWriter )SetDocInfo (info *PdfInfo ){_cbeeab .setDocInfo (info .ToPdfObject ())};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_daa .PdfObjectStream ;OCSP []*_daa .PdfObjectStream ;CRL []*_daa .PdfObjectStream ;TU *_daa .PdfObjectString ;TS *_daa .PdfObjectString ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_adbdbc *PdfPageResources )HasColorspaceByName (keyName _daa .PdfObjectName )bool {_cgdcg ,_bebce :=_adbdbc .GetColorspaces ();if _bebce !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bebce );
return false ;};if _cgdcg ==nil {return false ;};_ ,_aage :=_cgdcg .Colorspaces [string (keyName )];return _aage ;};func (_eab *PdfReader )newPdfActionImportDataFromDict (_ecb *_daa .PdfObjectDictionary )(*PdfActionImportData ,error ){_bcb ,_bfa :=_dbbb (_ecb .Get ("\u0046"));
if _bfa !=nil {return nil ,_bfa ;};return &PdfActionImportData {F :_bcb },nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcgd *PdfActionJavaScript )ToPdfObject ()_daa .PdfObject {_gcgd .PdfAction .ToPdfObject ();_abc :=_gcgd ._ad ;_bbff :=_abc .PdfObject .(*_daa .PdfObjectDictionary );_bbff .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeJavaScript )));_bbff .SetIfNotNil ("\u004a\u0053",_gcgd .JS );
return _abc ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_gcefb :map[_daa .PdfObject ]struct{}{},_beaec :_aaddf (),_adgcg :_daa .NewParserFromString (txt )};};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_cad :=NewPdfAction ();_dfb :=&PdfActionTrans {};_dfb .PdfAction =_cad ;_cad .SetContext (_dfb );return _dfb ;};func (_eged *Image )samplesTrimPadding (_gbbfdf []uint32 )[]uint32 {_adbgc :=_eged .ColorComponents *int (_eged .Width )*int (_eged .Height );
if len (_gbbfdf )==_adbgc {return _gbbfdf ;};_dfdff :=make ([]uint32 ,_adbgc );_dgeg :=int (_eged .Width )*_eged .ColorComponents ;var _defc ,_adcad ,_dbacf ,_cfbd int ;_dedc :=_ac .BytesPerLine (int (_eged .Width ),int (_eged .BitsPerComponent ),_eged .ColorComponents );
for _defc =0;_defc < int (_eged .Height );_defc ++{_adcad =_defc *int (_eged .Width );_dbacf =_defc *_dedc ;for _cfbd =0;_cfbd < _dgeg ;_cfbd ++{_dfdff [_adcad +_cfbd ]=_gbbfdf [_dbacf +_cfbd ];};};return _dfdff ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_dcba *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_fcgfb :=range pages {_fcgfb =_fcgfb .Duplicate ();_cfeg (_fcgfb );_dcba ._ffda =append (_dcba ._ffda ,_fcgfb );};};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_cdfdb ,_dbbfe :=_ega .ParsePdfTime (dateStr );if _dbbfe !=nil {return PdfDate {},_dbbfe ;};return NewPdfDateFromTime (_cdfdb );};func (_acdb *PdfReader )newPdfActionGotoEFromDict (_gef *_daa .PdfObjectDictionary )(*PdfActionGoToE ,error ){_faf ,_gcf :=_dbbb (_gef .Get ("\u0046"));
if _gcf !=nil {return nil ,_gcf ;};return &PdfActionGoToE {D :_gef .Get ("\u0044"),NewWindow :_gef .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_gef .Get ("\u0054"),F :_faf },nil ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_gfdeg *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_gfdeg ._gcdde =colorspace ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_gbag *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_cfgc ,_ ,_gaee :=_gbag .CharcodesToUnicodeWithStats (_gbag .BytesToCharcodes (data ));_aaaacg :=_df .ExpandLigatures (_cfgc );return _aaaacg ,_ab .RuneCountInString (_aaaacg ),_gaee ;
};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// ToPdfObject implements interface PdfModel.
func (_bbg *PdfAnnotationLink )ToPdfObject ()_daa .PdfObject {_bbg .PdfAnnotation .ToPdfObject ();_efca :=_bbg ._gbf ;_cdcc :=_efca .PdfObject .(*_daa .PdfObjectDictionary );_cdcc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u004c\u0069\u006e\u006b"));
if _bbg ._afgc !=nil &&_bbg ._afgc ._gfc !=nil {_cdcc .Set ("\u0041",_bbg ._afgc ._gfc .ToPdfObject ());}else if _bbg .A !=nil {_cdcc .Set ("\u0041",_bbg .A );};_cdcc .SetIfNotNil ("\u0044\u0065\u0073\u0074",_bbg .Dest );_cdcc .SetIfNotNil ("\u0048",_bbg .H );
_cdcc .SetIfNotNil ("\u0050\u0041",_bbg .PA );_cdcc .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bbg .QuadPoints );_cdcc .SetIfNotNil ("\u0042\u0053",_bbg .BS );return _efca ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// ToPdfObject implements interface PdfModel.
func (_efd *PdfActionGoToR )ToPdfObject ()_daa .PdfObject {_efd .PdfAction .ToPdfObject ();_cdg :=_efd ._ad ;_gdb :=_cdg .PdfObject .(*_daa .PdfObjectDictionary );_gdb .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeGoToR )));if _efd .F !=nil {_gdb .Set ("\u0046",_efd .F .ToPdfObject ());
};_gdb .SetIfNotNil ("\u0044",_efd .D );_gdb .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_efd .NewWindow );return _cdg ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_eebd *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _eebd .flattenFieldsWithOpts (false ,appgen ,opts );};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_bea PdfModel ;Rect _daa .PdfObject ;Contents _daa .PdfObject ;P _daa .PdfObject ;NM _daa .PdfObject ;M _daa .PdfObject ;F _daa .PdfObject ;AP _daa .PdfObject ;AS _daa .PdfObject ;Border _daa .PdfObject ;C _daa .PdfObject ;StructParent _daa .PdfObject ;
OC _daa .PdfObject ;_gbf *_daa .PdfIndirectObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_aeag *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _aeag .Alternate ==nil {if _aeag .N ==1{_bebca :=NewPdfColorspaceDeviceGray ();return _bebca .ColorFromFloats (vals );}else if _aeag .N ==3{_gafc :=NewPdfColorspaceDeviceRGB ();
return _gafc .ColorFromFloats (vals );}else if _aeag .N ==4{_gade :=NewPdfColorspaceDeviceCMYK ();return _gade .ColorFromFloats (vals );}else {return nil ,_ff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _aeag .Alternate .ColorFromFloats (vals );};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _daa .PdfObject )(_daa .PdfObjectName ,error ){var _bcfd *_daa .PdfObjectName ;var _fbfb *_daa .PdfObjectArray ;if _cgef ,_gedc :=obj .(*_daa .PdfIndirectObject );_gedc {if _bdbce ,_gdgg :=_cgef .PdfObject .(*_daa .PdfObjectArray );
_gdgg {_fbfb =_bdbce ;}else if _baba ,_gbae :=_cgef .PdfObject .(*_daa .PdfObjectName );_gbae {_bcfd =_baba ;};}else if _gddg ,_cdbg :=obj .(*_daa .PdfObjectArray );_cdbg {_fbfb =_gddg ;}else if _bbggc ,_agfe :=obj .(*_daa .PdfObjectName );_agfe {_bcfd =_bbggc ;
};if _bcfd !=nil {switch *_bcfd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_bcfd ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_bcfd ,nil ;
};};if _fbfb !=nil &&_fbfb .Len ()> 0{if _gfdf ,_ggf :=_fbfb .Get (0).(*_daa .PdfObjectName );_ggf {switch *_gfdf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fbfb .Len ()==1{return *_gfdf ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_gfdf ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_gfdf ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_gfdf ,nil ;};};};return "",nil ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_daa .PdfObjectDictionary )(*PdfPageResources ,error ){_babfce :=NewPdfPageResources ();if _adcd :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_adcd !=nil {_babfce .ExtGState =_adcd ;};if _feeac :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_feeac !=nil &&!_daa .IsNullObject (_feeac ){_babfce .ColorSpace =_feeac ;};if _bcgbd :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_bcgbd !=nil {_babfce .Pattern =_bcgbd ;};if _acede :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_acede !=nil {_babfce .Shading =_acede ;
};if _efedb :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_efedb !=nil {_babfce .XObject =_efedb ;};if _aebab :=_daa .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_aebab !=nil {_babfce .Font =_aebab ;};if _bedca :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_bedca !=nil {_babfce .ProcSet =_bedca ;};if _fabdd :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_fabdd !=nil {_babfce .Properties =_fabdd ;};return _babfce ,nil ;};

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_aegg :=&PdfShadingType2 {};_aegg .PdfShading =&PdfShading {};_aegg .PdfShading ._facgg =_daa .MakeIndirectObject (_daa .MakeDict ());_aegg .PdfShading ._fbega =_aegg ;return _aegg ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_fbbed *PdfReader )GetNameDictionary ()(_daa .PdfObject ,error ){_fgffb :=_daa .ResolveReference (_fbbed ._cgace .Get ("\u004e\u0061\u006de\u0073"));if _fgffb ==nil {return nil ,nil ;};if !_fbbed ._gagec {_bcafc :=_fbbed .traverseObjectData (_fgffb );
if _bcafc !=nil {return nil ,_bcafc ;};};return _fgffb ,nil ;};func (_facg *PdfReader )newPdfAnnotationPopupFromDict (_ffcf *_daa .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_ffd :=PdfAnnotationPopup {};_ffd .Parent =_ffcf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_ffd .Open =_ffcf .Get ("\u004f\u0070\u0065\u006e");return &_ffd ,nil ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_egedd :=&XObjectImage {};_fbfbbd :=&_daa .PdfObjectStream {};_fbfbbd .PdfObjectDictionary =_daa .MakeDict ();_egedd ._deefd =_fbfbbd ;return _egedd ;};func (_cdace *LTV )getCRLs (_gffba []*_e .Certificate )([][]byte ,error ){_dfbff :=make ([][]byte ,0,len (_gffba ));
for _ ,_cfcag :=range _gffba {for _ ,_cebdg :=range _cfcag .CRLDistributionPoints {if _cdace .CertClient .IsCA (_cfcag ){continue ;};_fdab ,_gcabef :=_cdace .CRLClient .MakeRequest (_cebdg ,_cfcag );if _gcabef !=nil {_ae .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_gcabef );
continue ;};_dfbff =append (_dfbff ,_fdab );};};return _dfbff ,nil ;};func (_fcdg *PdfReader )newPdfFieldFromIndirectObject (_dedd *_daa .PdfIndirectObject ,_becad *PdfField )(*PdfField ,error ){if _fgfa ,_baaac :=_fcdg ._beaec .GetModelFromPrimitive (_dedd ).(*PdfField );
_baaac {return _fgfa ,nil ;};_beef ,_bgcba :=_daa .GetDict (_dedd );if !_bgcba {return nil ,_c .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ccccf :=NewPdfField ();_ccccf ._caaee =_dedd ;_ccccf ._caaee .PdfObject =_beef ;if _fcdf ,_afdd :=_daa .GetName (_beef .Get ("\u0046\u0054"));_afdd {_ccccf .FT =_fcdf ;};if _becad !=nil {_ccccf .Parent =_becad ;};_ccccf .T ,_ =_beef .Get ("\u0054").(*_daa .PdfObjectString );
_ccccf .TU ,_ =_beef .Get ("\u0054\u0055").(*_daa .PdfObjectString );_ccccf .TM ,_ =_beef .Get ("\u0054\u004d").(*_daa .PdfObjectString );_ccccf .Ff ,_ =_beef .Get ("\u0046\u0066").(*_daa .PdfObjectInteger );_ccccf .V =_beef .Get ("\u0056");_ccccf .DV =_beef .Get ("\u0044\u0056");
_ccccf .AA =_beef .Get ("\u0041\u0041");if DA :=_beef .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_daa .GetString (DA );_ccccf .VariableText =&VariableText {DA :DA };Q ,_ :=_beef .Get ("\u0051").(*_daa .PdfObjectInteger );DS ,_ :=_beef .Get ("\u0044\u0053").(*_daa .PdfObjectString );
RV :=_beef .Get ("\u0052\u0056");_ccccf .VariableText .Q =Q ;_ccccf .VariableText .DS =DS ;_ccccf .VariableText .RV =RV ;};_eced :=_ccccf .FT ;if _eced ==nil &&_becad !=nil {_eced =_becad .FT ;};if _eced !=nil {switch *_eced {case "\u0054\u0078":_adaa ,_abef :=_dggga (_beef );
if _abef !=nil {return nil ,_abef ;};_adaa .PdfField =_ccccf ;_ccccf ._afaec =_adaa ;case "\u0043\u0068":_efecd ,_fced :=_eadbe (_beef );if _fced !=nil {return nil ,_fced ;};_efecd .PdfField =_ccccf ;_ccccf ._afaec =_efecd ;case "\u0042\u0074\u006e":_gfga ,_cbaa :=_bace (_beef );
if _cbaa !=nil {return nil ,_cbaa ;};_gfga .PdfField =_ccccf ;_ccccf ._afaec =_gfga ;case "\u0053\u0069\u0067":_ecgbe ,_cfcb :=_fcdg .newPdfFieldSignatureFromDict (_beef );if _cfcb !=nil {return nil ,_cfcb ;};_ecgbe .PdfField =_ccccf ;_ccccf ._afaec =_ecgbe ;
default:_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_ccccf .FT );return nil ,_ff .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _gagbd ,_afga :=_daa .GetName (_beef .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_afga {if *_gagbd =="\u0057\u0069\u0064\u0067\u0065\u0074"{_bgda ,_egad :=_fcdg .newPdfAnnotationFromIndirectObject (_dedd );if _egad !=nil {return nil ,_egad ;
};_fcfe ,_bafg :=_bgda .GetContext ().(*PdfAnnotationWidget );if !_bafg {return nil ,_ff .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_fcfe ._gad =_ccccf ;_fcfe .Parent =_ccccf ._caaee ;
_ccccf .Annotations =append (_ccccf .Annotations ,_fcfe );return _ccccf ,nil ;};};_aagd :=true ;if _aaecf ,_dfgf :=_daa .GetArray (_beef .Get ("\u004b\u0069\u0064\u0073"));_dfgf {_fefee :=make ([]*_daa .PdfIndirectObject ,0,_aaecf .Len ());for _ ,_aeffa :=range _aaecf .Elements (){_bcag ,_geeg :=_daa .GetIndirect (_aeffa );
if !_geeg {_bdfc ,_dcab :=_daa .GetStream (_aeffa );if _dcab &&_bdfc .PdfObjectDictionary !=nil {_gfdfg ,_fbdda :=_daa .GetNameVal (_bdfc .Get ("\u0054\u0079\u0070\u0065"));if _fbdda &&_gfdfg =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_ae .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_ff .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_cbda ,_cfcc :=_daa .GetDict (_bcag );
if !_cfcc {return nil ,ErrTypeCheck ;};if _aagd {_aagd =!_gdca (_cbda );};_fefee =append (_fefee ,_bcag );};for _ ,_fadc :=range _fefee {if _aagd {_eegef ,_acdfe :=_fcdg .newPdfAnnotationFromIndirectObject (_fadc );if _acdfe !=nil {_ae .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_acdfe );
return nil ,_acdfe ;};_adbbe ,_cbdg :=_eegef ._bea .(*PdfAnnotationWidget );if !_cbdg {return nil ,ErrTypeCheck ;};_adbbe ._gad =_ccccf ;_ccccf .Annotations =append (_ccccf .Annotations ,_adbbe );}else {_ecfa ,_beec :=_fcdg .newPdfFieldFromIndirectObject (_fadc ,_ccccf );
if _beec !=nil {_ae .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_beec );return nil ,_beec ;};_ccccf .Kids =append (_ccccf .Kids ,_ecfa );
};};};return _ccccf ,nil ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_gdggd .Lock ();defer _gdggd .Unlock ();_bbagb =author };

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_dcdc *PdfFieldChoice )ToPdfObject ()_daa .PdfObject {_dcdc .PdfField .ToPdfObject ();_dabbc :=_dcdc ._caaee ;_ffaff :=_dabbc .PdfObject .(*_daa .PdfObjectDictionary );_ffaff .Set ("\u0046\u0054",_daa .MakeName ("\u0043\u0068"));if _dcdc .Opt !=nil {_ffaff .Set ("\u004f\u0070\u0074",_dcdc .Opt );
};if _dcdc .TI !=nil {_ffaff .Set ("\u0054\u0049",_dcdc .TI );};if _dcdc .I !=nil {_ffaff .Set ("\u0049",_dcdc .I );};return _dabbc ;};

// Encoder returns the font's text encoder.
func (_fdcdg *pdfFontSimple )Encoder ()_df .TextEncoder {if _fdcdg ._face !=nil {return _fdcdg ._face ;};if _fdcdg ._acefe !=nil {return _fdcdg ._acefe ;};_fffac ,_ :=_df .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _fffac ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_cbca *PdfPattern )ToPdfObject ()_daa .PdfObject {_efege :=_cbca .getDict ();_efege .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_efege .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_daa .MakeInteger (_cbca .PatternType ));
return _cbca ._degd ;};

// Add appends a top level outline item to the outline.
func (_cdgf *Outline )Add (item *OutlineItem ){_cdgf .Entries =append (_cdgf .Entries ,item )};

// GetContainingPdfObject implements model.PdfModel interface.
func (_gcgfb *PdfOutputIntent )GetContainingPdfObject ()_daa .PdfObject {return _gcgfb ._effbd };

// GetNumComponents returns the number of color components (1 for grayscale).
func (_efaf *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// ToGoTime returns the date in time.Time format.
func (_ceeac PdfDate )ToGoTime ()_d .Time {_ddagf :=int (_ceeac ._ecbeb *60*60+_ceeac ._ggbbf *60);switch _ceeac ._cdacd {case '-':_ddagf =-_ddagf ;case 'Z':_ddagf =0;};_eagg :=_c .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_ceeac ._cdacd ,_ceeac ._ecbeb ,_ceeac ._ggbbf );
_ccgba :=_d .FixedZone (_eagg ,_ddagf );return _d .Date (int (_ceeac ._agdgd ),_d .Month (_ceeac ._gdeeb ),int (_ceeac ._ebdeb ),int (_ceeac ._bcgga ),int (_ceeac ._ffab ),int (_ceeac ._dfad ),0,_ccgba );};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_fed :=NewPdfAnnotation ();_edb :=&PdfAnnotationProjection {};_edb .PdfAnnotation =_fed ;_edb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fed .SetContext (_edb );return _edb ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};func (_aagga PdfFont )actualFont ()pdfFont {if _aagga ._gbbee ==nil {_ae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aagga );
};return _aagga ._gbbee ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_ddc *PdfAnnotation )GetContext ()PdfModel {if _ddc ==nil {return nil ;};return _ddc ._bea ;};var (ErrRequiredAttributeMissing =_ff .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ff .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_abbc =_ff .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_ff .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ff .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_feg .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_daa .ErrNotSupported );ErrType1CFontNotSupported =_feg .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_daa .ErrNotSupported );
ErrType3FontNotSupported =_feg .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_daa .ErrNotSupported );
ErrTTCmapNotSupported =_feg .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_daa .ErrNotSupported );
ErrSignNotEnoughSpace =_feg .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_feg .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// ToInteger convert to an integer format.
func (_bcdb *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_afdg :=_ce .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_afdg *_bcdb .R ()),uint32 (_afdg *_bcdb .G ()),uint32 (_afdg *_bcdb .B ())};};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_ebfcf *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _ebfcf ._eeeea ==nil {_ebfcf ._eeeea =_aa .NewPSExecutor (_ebfcf .Program );};var _bbca []_aa .PSObject ;for _ ,_dgae :=range xVec {_bbca =append (_bbca ,_aa .MakeReal (_dgae ));
};_eace ,_bdcge :=_ebfcf ._eeeea .Execute (_bbca );if _bdcge !=nil {return nil ,_bdcge ;};_bacga ,_bdcge :=_aa .PSObjectArrayToFloat64Array (_eace );if _bdcge !=nil {return nil ,_bdcge ;};return _bacga ,nil ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_ffgfb *PdfColorspaceLab )DecodeArray ()[]float64 {_gccb :=[]float64 {0,100};if _ffgfb .Range !=nil &&len (_ffgfb .Range )==4{_gccb =append (_gccb ,_ffgfb .Range ...);}else {_gccb =append (_gccb ,-100,100,-100,100);};return _gccb ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_dabgg *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_dabgff *PdfSignature ,_gcgcd Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_bbcef *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_aecb *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_cdccg *PdfSignature ,_eaca Hasher )error ;};

// Items returns all children outline items.
func (_ggaga *OutlineItem )Items ()[]*OutlineItem {return _ggaga .Entries };

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ddcb :=NewPdfAnnotation ();_efed :=&PdfAnnotationCaret {};_efed .PdfAnnotation =_ddcb ;_efed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddcb .SetContext (_efed );return _efed ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _daa .PdfObject ;Q _daa .PdfObject ;RC _daa .PdfObject ;DS _daa .PdfObject ;CL _daa .PdfObject ;IT _daa .PdfObject ;BE _daa .PdfObject ;RD _daa .PdfObject ;BS _daa .PdfObject ;LE _daa .PdfObject ;
};func (_eecb *PdfReader )newPdfFieldSignatureFromDict (_eaaac *_daa .PdfObjectDictionary )(*PdfFieldSignature ,error ){_aafaf :=&PdfFieldSignature {};_dgea ,_adcgd :=_daa .GetIndirect (_eaaac .Get ("\u0056"));if _adcgd {var _ceee error ;_aafaf .V ,_ceee =_eecb .newPdfSignatureFromIndirect (_dgea );
if _ceee !=nil {return nil ,_ceee ;};};_aafaf .Lock ,_ =_daa .GetIndirect (_eaaac .Get ("\u004c\u006f\u0063\u006b"));_aafaf .SV ,_ =_daa .GetIndirect (_eaaac .Get ("\u0053\u0056"));return _aafaf ,nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_ffgad *_daa .PdfIndirectObject ;};func (_cgcab *PdfWriter )writeObjects (){_ae .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_cgcab ._aaaae ));
_cgcab ._agfc =make (map[int ]crossReference );_cgcab ._agfc [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _cgcab ._ccee .ObjectMap !=nil {for _dgadd ,_bbde :=range _cgcab ._ccee .ObjectMap {if _dgadd ==0{continue ;};if _bbde .XType ==_daa .XrefTypeObjectStream {_dadgb :=crossReference {Type :2,ObjectNumber :_bbde .OsObjNumber ,Index :_bbde .OsObjIndex };
_cgcab ._agfc [_dgadd ]=_dadgb ;};if _bbde .XType ==_daa .XrefTypeTableEntry {_eeddg :=crossReference {Type :1,ObjectNumber :_bbde .ObjectNumber ,Offset :_bbde .Offset };_cgcab ._agfc [_dgadd ]=_eeddg ;};};};};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_aaac :=&PdfColorspaceLab {};_aaac .BlackPoint =[]float64 {0.0,0.0,0.0};_aaac .Range =[]float64 {-100,100,-100,100};return _aaac ;};func (_dbddg *pdfFontSimple )addEncoding ()error {var (_cfbb string ;_cbgag map[_df .CharCode ]_df .GlyphName ;
_ccdab _df .SimpleEncoder ;);if _dbddg .Encoder ()!=nil {_dfcad ,_gcabe :=_dbddg .Encoder ().(_df .SimpleEncoder );if _gcabe &&_dfcad !=nil {_cfbb =_dfcad .BaseName ();};};if _dbddg .Encoding !=nil {_ebefg ,_eeaef ,_ffee :=_dbddg .getFontEncoding ();if _ffee !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dbddg ._agfd ,_dbddg ._fbafe ,_dbddg .Encoding ,_dbddg .Encoding ,_ffee );
return _ffee ;};if _ebefg !=""{_cfbb =_ebefg ;};_cbgag =_eeaef ;_ccdab ,_ffee =_df .NewSimpleTextEncoder (_cfbb ,_cbgag );if _ffee !=nil {return _ffee ;};};if _ccdab ==nil {_eeecg :=_dbddg ._eccc ;if _eeecg !=nil {switch _dbddg ._fbafe {case "\u0054\u0079\u0070e\u0031":if _eeecg .fontFile !=nil &&_eeecg .fontFile ._dgfad !=nil {_ae .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_ccdab =_eeecg .fontFile ._dgfad ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _eeecg ._aafbe !=nil {_ae .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_eadf ,_caegc :=_eeecg ._aafbe .MakeEncoder ();
if _caegc ==nil {_ccdab =_eadf ;};};};};};if _ccdab !=nil {if _cbgag !=nil {_ae .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cbgag ,_dbddg .baseFields ());
_ccdab =_df .ApplyDifferences (_ccdab ,_cbgag );};_dbddg .SetEncoder (_ccdab );};return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_eafdg *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// Val returns the color value.
func (_cccc *PdfColorDeviceGray )Val ()float64 {return float64 (*_cccc )};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_gbfb :=NewPdfAnnotation ();_ccfg :=&PdfAnnotationHighlight {};_ccfg .PdfAnnotation =_gbfb ;_ccfg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbfb .SetContext (_ccfg );return _ccfg ;};func _feabb (_gdce _daa .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_gcgfc :=NewPdfColorspaceSpecialSeparation ();
if _dgca ,_eeda :=_gdce .(*_daa .PdfIndirectObject );_eeda {_gcgfc ._bgea =_dgca ;};_gdce =_daa .TraceToDirectObject (_gdce );_cgad ,_ffca :=_gdce .(*_daa .PdfObjectArray );if !_ffca {return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _cgad .Len ()!=4{return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_gdce =_cgad .Get (0);
_fdgf ,_ffca :=_gdce .(*_daa .PdfObjectName );if !_ffca {return nil ,_c .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_fdgf !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_c .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_gdce =_cgad .Get (1);_fdgf ,_ffca =_gdce .(*_daa .PdfObjectName );if !_ffca {return nil ,_c .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_gcgfc .ColorantName =_fdgf ;_gdce =_cgad .Get (2);_deaca ,_fgbg :=NewPdfColorspaceFromPdfObject (_gdce );if _fgbg !=nil {return nil ,_fgbg ;};_gcgfc .AlternateSpace =_deaca ;_fcfbd ,_fgbg :=_bcec (_cgad .Get (3));if _fgbg !=nil {return nil ,_fgbg ;};
_gcgfc .TintTransform =_fcfbd ;return _gcgfc ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_eeege :=&PdfAppender {_ecec :reader ._befda ,Reader :reader ,_cbadc :reader ._adgcg ,_dbff :reader ._gcefb };_ebcd ,_deg :=_eeege ._ecec .Seek (0,_dgg .SeekEnd );if _deg !=nil {return nil ,_deg ;
};_eeege ._acf =_ebcd ;if _ ,_deg =_eeege ._ecec .Seek (0,_dgg .SeekStart );_deg !=nil {return nil ,_deg ;};_eeege ._egaf ,_deg =NewPdfReader (_eeege ._ecec );if _deg !=nil {return nil ,_deg ;};for _ ,_dbg :=range _eeege .Reader .GetObjectNums (){if _eeege ._ddga < _dbg {_eeege ._ddga =_dbg ;
};};_eeege ._eccg =_eeege ._cbadc .GetXrefTable ();_eeege ._egfa =_eeege ._cbadc .GetXrefOffset ();_eeege ._ffda =append (_eeege ._ffda ,_eeege ._egaf .PageList ...);_eeege ._bbgd =make (map[_daa .PdfObject ]struct{});_eeege ._fedb =make (map[_daa .PdfObject ]int64 );
_eeege ._dabd =make (map[_daa .PdfObject ]struct{});_eeege ._bgcb =_eeege ._egaf .AcroForm ;_eeege ._cfbe =_eeege ._egaf .DSS ;return _eeege ,nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_fdcfd *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _fdcfd .RunesToCharcodeBytes ([]rune (str ));};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _daa .PdfObject ;NewWindow _daa .PdfObject ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _daa .PdfObject ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func _ecgfa (_aaefb _daa .PdfObject )(*PdfShading ,error ){_ecfbd :=&PdfShading {};var _fabeg *_daa .PdfObjectDictionary ;if _fdbfg ,_bffde :=_daa .GetIndirect (_aaefb );_bffde {_ecfbd ._facgg =_fdbfg ;
_caaaa ,_edag :=_fdbfg .PdfObject .(*_daa .PdfObjectDictionary );if !_edag {_ae .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_daa .ErrTypeError ;
};_fabeg =_caaaa ;}else if _cagd ,_edggd :=_daa .GetStream (_aaefb );_edggd {_ecfbd ._facgg =_cagd ;_fabeg =_cagd .PdfObjectDictionary ;}else if _ceba ,_fcdge :=_daa .GetDict (_aaefb );_fcdge {_ecfbd ._facgg =_ceba ;_fabeg =_ceba ;}else {_ae .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_aaefb );
return nil ,_daa .ErrTypeError ;};if _fabeg ==nil {_ae .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ff .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_aaefb =_fabeg .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _aaefb ==nil {_ae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aaefb =_daa .TraceToDirectObject (_aaefb );_bfgbb ,_bcgcg :=_aaefb .(*_daa .PdfObjectInteger );if !_bcgcg {_ae .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aaefb );
return nil ,_daa .ErrTypeError ;};if *_bfgbb < 1||*_bfgbb > 7{_ae .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_bfgbb );
return nil ,_daa .ErrTypeError ;};_ecfbd .ShadingType =_bfgbb ;_aaefb =_fabeg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _aaefb ==nil {_ae .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cfff ,_ddgfe :=NewPdfColorspaceFromPdfObject (_aaefb );if _ddgfe !=nil {_ae .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_ddgfe );
return nil ,_ddgfe ;};_ecfbd .ColorSpace =_cfff ;_aaefb =_fabeg .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _aaefb !=nil {_aaefb =_daa .TraceToDirectObject (_aaefb );_dgagb ,_gaefd :=_aaefb .(*_daa .PdfObjectArray );if !_gaefd {_ae .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_aaefb );
return nil ,_daa .ErrTypeError ;};_ecfbd .Background =_dgagb ;};_aaefb =_fabeg .Get ("\u0042\u0042\u006f\u0078");if _aaefb !=nil {_aaefb =_daa .TraceToDirectObject (_aaefb );_ccbd ,_fagff :=_aaefb .(*_daa .PdfObjectArray );if !_fagff {_ae .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_aaefb );
return nil ,_daa .ErrTypeError ;};_efegg ,_eafca :=NewPdfRectangle (*_ccbd );if _eafca !=nil {_ae .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_eafca );return nil ,_eafca ;};_ecfbd .BBox =_efegg ;};_aaefb =_fabeg .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _aaefb !=nil {_aaefb =_daa .TraceToDirectObject (_aaefb );_bbaeg ,_cddcg :=_aaefb .(*_daa .PdfObjectBool );if !_cddcg {_ae .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aaefb );
return nil ,_daa .ErrTypeError ;};_ecfbd .AntiAlias =_bbaeg ;};switch *_bfgbb {case 1:_ggcg ,_adfcc :=_deec (_fabeg );if _adfcc !=nil {return nil ,_adfcc ;};_ggcg .PdfShading =_ecfbd ;_ecfbd ._fbega =_ggcg ;return _ecfbd ,nil ;case 2:_cbdca ,_ffeff :=_gcgab (_fabeg );
if _ffeff !=nil {return nil ,_ffeff ;};_cbdca .PdfShading =_ecfbd ;_ecfbd ._fbega =_cbdca ;return _ecfbd ,nil ;case 3:_gfba ,_febgb :=_cdcd (_fabeg );if _febgb !=nil {return nil ,_febgb ;};_gfba .PdfShading =_ecfbd ;_ecfbd ._fbega =_gfba ;return _ecfbd ,nil ;
case 4:_cdabb ,_abedcc :=_aafg (_fabeg );if _abedcc !=nil {return nil ,_abedcc ;};_cdabb .PdfShading =_ecfbd ;_ecfbd ._fbega =_cdabb ;return _ecfbd ,nil ;case 5:_fgbbd ,_aefeac :=_dcaa (_fabeg );if _aefeac !=nil {return nil ,_aefeac ;};_fgbbd .PdfShading =_ecfbd ;
_ecfbd ._fbega =_fgbbd ;return _ecfbd ,nil ;case 6:_fdgae ,_dacdg :=_gfddgd (_fabeg );if _dacdg !=nil {return nil ,_dacdg ;};_fdgae .PdfShading =_ecfbd ;_ecfbd ._fbega =_fdgae ;return _ecfbd ,nil ;case 7:_dfcgga ,_gaecd :=_baeb (_fabeg );if _gaecd !=nil {return nil ,_gaecd ;
};_dfcgga .PdfShading =_ecfbd ;_ecfbd ._fbega =_dfcgga ;return _ecfbd ,nil ;};return nil ,_ff .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// C returns the value of the C component of the color.
func (_gaeca *PdfColorCalRGB )C ()float64 {return _gaeca [2]};

// SetFontByName sets the font specified by keyName to the given object.
func (_bgfg *PdfPageResources )SetFontByName (keyName _daa .PdfObjectName ,obj _daa .PdfObject )error {if _bgfg .Font ==nil {_bgfg .Font =_daa .MakeDict ();};_eddad ,_bgfac :=_daa .TraceToDirectObject (_bgfg .Font ).(*_daa .PdfObjectDictionary );if !_bgfac {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_daa .TraceToDirectObject (_bgfg .Font ));
return _daa .ErrTypeError ;};_eddad .Set (keyName ,obj );return nil ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;type fontFile struct{_edde string ;_dfgg string ;_dgfad _df .SimpleEncoder ;};func (_afdf *PdfReader )newPdfActionSubmitFormFromDict (_aea *_daa .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_bfe ,_dec :=_dbbb (_aea .Get ("\u0046"));
if _dec !=nil {return nil ,_dec ;};return &PdfActionSubmitForm {F :_bfe ,Fields :_aea .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_aea .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_fb :=NewPdfAction ();_age :=&PdfActionSubmitForm {};_age .PdfAction =_fb ;_fb .SetContext (_age );return _age ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_fabc FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_fabc .Mask ()&^fl .Mask ())};type pdfSignDictionary struct{*_daa .PdfObjectDictionary ;_ebebc *SignatureHandler ;_ebeaa *PdfSignature ;_gfcge int64 ;_cdfad int ;_bbeb int ;_bfddf int ;
_bddf int ;};func (_edg *PdfReader )newPdfAnnotationHighlightFromDict (_eafe *_daa .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_ebff :=PdfAnnotationHighlight {};_adbg ,_ada :=_edg .newPdfAnnotationMarkupFromDict (_eafe );if _ada !=nil {return nil ,_ada ;
};_ebff .PdfAnnotationMarkup =_adbg ;_ebff .QuadPoints =_eafe .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ebff ,nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_cbga *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func (_egf *PdfReader )newPdfActionLaunchFromDict (_cced *_daa .PdfObjectDictionary )(*PdfActionLaunch ,error ){_beg ,_bef :=_dbbb (_cced .Get ("\u0046"));if _bef !=nil {return nil ,_bef ;
};return &PdfActionLaunch {Win :_cced .Get ("\u0057\u0069\u006e"),Mac :_cced .Get ("\u004d\u0061\u0063"),Unix :_cced .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_cced .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_beg },nil ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_fbf :=NewPdfAnnotation ();_eeb :=&PdfAnnotationInk {};_eeb .PdfAnnotation =_fbf ;_eeb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbf .SetContext (_eeb );return _eeb ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_ddfe *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _ddfe .Range };

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_daa .PdfObjectStream )(*XObjectImage ,error ){_dcdeef :=&XObjectImage {};_dcdeef ._deefd =stream ;_bdfd :=*(stream .PdfObjectDictionary );_bafgf ,_ebbcae :=_daa .NewEncoderFromStream (stream );if _ebbcae !=nil {return nil ,_ebbcae ;
};_dcdeef .Filter =_bafgf ;if _bgbcd :=_daa .TraceToDirectObject (_bdfd .Get ("\u0057\u0069\u0064t\u0068"));_bgbcd !=nil {_geedd ,_cggbdd :=_bgbcd .(*_daa .PdfObjectInteger );if !_cggbdd {return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_cfceb :=int64 (*_geedd );_dcdeef .Width =&_cfceb ;}else {return nil ,_ff .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _fdabe :=_daa .TraceToDirectObject (_bdfd .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_fdabe !=nil {_ecbdb ,_dbdca :=_fdabe .(*_daa .PdfObjectInteger );if !_dbdca {return nil ,_ff .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_gdbea :=int64 (*_ecbdb );
_dcdeef .Height =&_gdbea ;}else {return nil ,_ff .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _bgbbg :=_daa .TraceToDirectObject (_bdfd .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_bgbbg !=nil {_cbbed ,_acfbc :=NewPdfColorspaceFromPdfObject (_bgbbg );if _acfbc !=nil {return nil ,_acfbc ;};_dcdeef .ColorSpace =_cbbed ;}else {_ae .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_dcdeef .ColorSpace =NewPdfColorspaceDeviceGray ();};if _dbcc :=_daa .TraceToDirectObject (_bdfd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_dbcc !=nil {_ebadf ,_fbdcc :=_dbcc .(*_daa .PdfObjectInteger );
if !_fbdcc {return nil ,_ff .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bddc :=int64 (*_ebadf );_dcdeef .BitsPerComponent =&_bddc ;};_dcdeef .Intent =_bdfd .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_dcdeef .ImageMask =_bdfd .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_dcdeef .Mask =_bdfd .Get ("\u004d\u0061\u0073\u006b");_dcdeef .Decode =_bdfd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_dcdeef .Interpolate =_bdfd .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_dcdeef .Alternatives =_bdfd .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_dcdeef .SMask =_bdfd .Get ("\u0053\u004d\u0061s\u006b");_dcdeef .SMaskInData =_bdfd .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_dcdeef .Matte =_bdfd .Get ("\u004d\u0061\u0074t\u0065");_dcdeef .Name =_bdfd .Get ("\u004e\u0061\u006d\u0065");_dcdeef .StructParent =_bdfd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dcdeef .ID =_bdfd .Get ("\u0049\u0044");
_dcdeef .OPI =_bdfd .Get ("\u004f\u0050\u0049");_dcdeef .Metadata =_bdfd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dcdeef .OC =_bdfd .Get ("\u004f\u0043");_dcdeef .Stream =stream .Stream ;return _dcdeef ,nil ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_cfdf *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_cfdf .GetNumComponents (){return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgcg ,_ecbff :=_cfdf .TintTransform .Evaluate (vals );
if _ecbff !=nil {return nil ,_ecbff ;};_gcedg ,_ecbff :=_cfdf .AlternateSpace .ColorFromFloats (_dgcg );if _ecbff !=nil {return nil ,_ecbff ;};return _gcedg ,nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_baac *PdfFont )CharcodesToStrings (charcodes []_df .CharCode )([]string ,int ,int ){_dcbba :=_baac .baseFields ();_eacga :=make ([]string ,0,len (charcodes ));_eeegf :=0;_eefga :=_baac .Encoder ();_dedec :=_dcbba ._efedc !=nil &&_baac .IsSimple ()&&_baac .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_db .Contains (_dcbba ._efedc .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_dedec &&_eefga !=nil {switch _adfbb :=_eefga .(type ){case _df .SimpleEncoder :_dgagg :=_adfbb .BaseName ();if _ ,_aebeg :=_aggde [_dgagg ];_aebeg {for _ ,_fgeba :=range charcodes {if _bccde ,_fgaef :=_eefga .CharcodeToRune (_fgeba );_fgaef {_eacga =append (_eacga ,string (_bccde ));
}else {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_fgeba ,charcodes ,_dcbba .isCIDFont (),_baac ,_eefga );
_eeegf ++;_eacga =append (_eacga ,_cbg .MissingCodeString );};};return _eacga ,len (_eacga ),_eeegf ;};};};for _ ,_fdfg :=range charcodes {if _dcbba ._efedc !=nil {if _eagad ,_eegc :=_dcbba ._efedc .CharcodeToUnicode (_cbg .CharCode (_fdfg ));_eegc {_eacga =append (_eacga ,_eagad );
continue ;};};if _eefga !=nil {if _efece ,_acbc :=_eefga .CharcodeToRune (_fdfg );_acbc {_eacga =append (_eacga ,string (_efece ));continue ;};};_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_fdfg ,charcodes ,_dcbba .isCIDFont (),_baac ,_eefga );
_eeegf ++;_eacga =append (_eacga ,_cbg .MissingCodeString );};if _eeegf !=0{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_eeegf ,_baac );
};return _eacga ,len (_eacga ),_eeegf ;};func _bded (_fbfgg _daa .PdfObject )(*PdfColorspaceLab ,error ){_ggdd :=NewPdfColorspaceLab ();if _bgbd ,_fef :=_fbfgg .(*_daa .PdfIndirectObject );_fef {_ggdd ._befe =_bgbd ;};_fbfgg =_daa .TraceToDirectObject (_fbfgg );
_agad ,_edec :=_fbfgg .(*_daa .PdfObjectArray );if !_edec {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _agad .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_fbfgg =_daa .TraceToDirectObject (_agad .Get (0));_ecae ,_edec :=_fbfgg .(*_daa .PdfObjectName );if !_edec {return nil ,_c .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_ecae !="\u004c\u0061\u0062"{return nil ,_c .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_fbfgg =_daa .TraceToDirectObject (_agad .Get (1));_gfbb ,_edec :=_fbfgg .(*_daa .PdfObjectDictionary );
if !_edec {return nil ,_c .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_fbfgg =_gfbb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_fbfgg =_daa .TraceToDirectObject (_fbfgg );_ecad ,_edec :=_fbfgg .(*_daa .PdfObjectArray );if !_edec {return nil ,_c .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _ecad .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_efge ,_gfcag :=_ecad .GetAsFloat64Slice ();if _gfcag !=nil {return nil ,_gfcag ;};_ggdd .WhitePoint =_efge ;_fbfgg =_gfbb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fbfgg !=nil {_fbfgg =_daa .TraceToDirectObject (_fbfgg );
_eefba ,_faffa :=_fbfgg .(*_daa .PdfObjectArray );if !_faffa {return nil ,_c .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _eefba .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_gceca ,_bcegb :=_eefba .GetAsFloat64Slice ();if _bcegb !=nil {return nil ,_bcegb ;};_ggdd .BlackPoint =_gceca ;};_fbfgg =_gfbb .Get ("\u0052\u0061\u006eg\u0065");if _fbfgg !=nil {_fbfgg =_daa .TraceToDirectObject (_fbfgg );_dade ,_gfdg :=_fbfgg .(*_daa .PdfObjectArray );
if !_gfdg {_ae .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_c .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dade .Len ()!=4{_ae .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_dcbbg ,_cgae :=_dade .GetAsFloat64Slice ();if _cgae !=nil {return nil ,_cgae ;};_ggdd .Range =_dcbbg ;};return _ggdd ,nil ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _daa .PdfObject ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_dfegg int ,_dcfbe *PdfPage );

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_bdbg *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_eae *PdfReader )newPdfActionThreadFromDict (_fca *_daa .PdfObjectDictionary )(*PdfActionThread ,error ){_eeeg ,_ceb :=_dbbb (_fca .Get ("\u0046"));
if _ceb !=nil {return nil ,_ceb ;};return &PdfActionThread {D :_fca .Get ("\u0044"),B :_fca .Get ("\u0042"),F :_eeeg },nil ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _daa .PdfObject ;V _daa .PdfObject ;};

// ToInteger convert to an integer format.
func (_cfgd *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_fcgc :=_ce .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_fcgc *_cfgd .A ()),uint32 (_fcgc *_cfgd .B ()),uint32 (_fcgc *_cfgd .C ())};};

// SetContext sets the sub annotation (context).
func (_cbc *PdfAnnotation )SetContext (ctx PdfModel ){_cbc ._bea =ctx };

// ToPdfObject implements interface PdfModel.
func (_cdfe *PdfSignature )ToPdfObject ()_daa .PdfObject {_ddgdd :=_cdfe ._cebcc ;var _ceebb *_daa .PdfObjectDictionary ;if _aaaaa ,_aafga :=_ddgdd .PdfObject .(*pdfSignDictionary );_aafga {_ceebb =_aaaaa .PdfObjectDictionary ;}else {_ceebb =_ddgdd .PdfObject .(*_daa .PdfObjectDictionary );
};_ceebb .SetIfNotNil ("\u0054\u0079\u0070\u0065",_cdfe .Type );_ceebb .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_cdfe .Filter );_ceebb .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_cdfe .SubFilter );_ceebb .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_cdfe .ByteRange );
_ceebb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cdfe .Contents );_ceebb .SetIfNotNil ("\u0043\u0065\u0072\u0074",_cdfe .Cert );_ceebb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cdfe .Name );_ceebb .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_cdfe .Reason );
_ceebb .SetIfNotNil ("\u004d",_cdfe .M );_ceebb .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_cdfe .Reference );_ceebb .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_cdfe .Changes );_ceebb .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_cdfe .ContactInfo );
return _ddgdd ;};func _cbaff (_cfdg ,_eccfb string )string {if _db .Contains (_cfdg ,"\u002b"){_cafda :=_db .Split (_cfdg ,"\u002b");if len (_cafda )==2{_cfdg =_cafda [1];};};return _eccfb +"\u002b"+_cfdg ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dabcb *PdfShadingType6 )ToPdfObject ()_daa .PdfObject {_dabcb .PdfShading .ToPdfObject ();_feeg ,_dcgfb :=_dabcb .getShadingDict ();if _dcgfb !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dabcb .BitsPerCoordinate !=nil {_feeg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dabcb .BitsPerCoordinate );};if _dabcb .BitsPerComponent !=nil {_feeg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dabcb .BitsPerComponent );
};if _dabcb .BitsPerFlag !=nil {_feeg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dabcb .BitsPerFlag );};if _dabcb .Decode !=nil {_feeg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dabcb .Decode );};if _dabcb .Function !=nil {if len (_dabcb .Function )==1{_feeg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dabcb .Function [0].ToPdfObject ());
}else {_dggfgb :=_daa .MakeArray ();for _ ,_edggfb :=range _dabcb .Function {_dggfgb .Append (_edggfb .ToPdfObject ());};_feeg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dggfgb );};};return _dabcb ._facgg ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_daa .PdfObjectArray ;TI *_daa .PdfObjectInteger ;I *_daa .PdfObjectArray ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_bfgb *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_daa .PdfObjectInteger ;BitsPerComponent *_daa .PdfObjectInteger ;BitsPerFlag *_daa .PdfObjectInteger ;Decode *_daa .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_cdec :=NewPdfAnnotation ();_bgd :=&PdfAnnotationWatermark {};_bgd .PdfAnnotation =_cdec ;_cdec .SetContext (_bgd );return _bgd ;};func _dafg (_ebed _daa .PdfObject )(*PdfBorderStyle ,error ){_bead :=&PdfBorderStyle {};
_bead ._cgfb =_ebed ;var _egfc *_daa .PdfObjectDictionary ;_ebed =_daa .TraceToDirectObject (_ebed );_egfc ,_gcag :=_ebed .(*_daa .PdfObjectDictionary );if !_gcag {return nil ,_ff .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};
if _aedaf :=_egfc .Get ("\u0054\u0079\u0070\u0065");_aedaf !=nil {_gaf ,_fbe :=_aedaf .(*_daa .PdfObjectName );if !_fbe {_ae .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_aedaf );
}else {if *_gaf !="\u0042\u006f\u0072\u0064\u0065\u0072"{_ae .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_gaf );};};};if _egd :=_egfc .Get ("\u0057");
_egd !=nil {_ede ,_gcfeg :=_daa .GetNumberAsFloat (_egd );if _gcfeg !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_gcfeg );return nil ,_gcfeg ;};_bead .W =&_ede ;
};if _decd :=_egfc .Get ("\u0053");_decd !=nil {_afcg ,_eead :=_decd .(*_daa .PdfObjectName );if !_eead {return nil ,_ff .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _bfg BorderStyle ;switch *_afcg {case "\u0053":_bfg =BorderStyleSolid ;case "\u0044":_bfg =BorderStyleDashed ;case "\u0042":_bfg =BorderStyleBeveled ;case "\u0049":_bfg =BorderStyleInset ;case "\u0055":_bfg =BorderStyleUnderline ;default:_ae .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_afcg );
return nil ,_ff .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_bead .S =&_bfg ;};if _efg :=_egfc .Get ("\u0044");_efg !=nil {_eafeg ,_gdbc :=_efg .(*_daa .PdfObjectArray );
if !_gdbc {_ae .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_efg );return nil ,_ff .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_bcbd ,_cbeb :=_eafeg .ToIntegerArray ();if _cbeb !=nil {_ae .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_cbeb );
return nil ,_cbeb ;};_bead .D =&_bcbd ;};return _bead ,nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_ffad *PdfPattern )GetContainingPdfObject ()_daa .PdfObject {return _ffad ._degd };func (_agfga *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _agfga ._adgcg .GetCrypter ()!=nil &&!_agfga ._adgcg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dcdde :=_agfga ._cgace ;_dgdag :=_dcdde .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _dgdag ==nil {return nil ,nil ;};_beaee ,_eefca :=_daa .GetIndirect (_dgdag );_dgdag =_daa .TraceToDirectObject (_dgdag );if _daa .IsNullObject (_dgdag ){_ae .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_gfeee ,_dbcec :=_daa .GetDict (_dgdag );if !_dbcec {_ae .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_dgdag );_ae .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_dgdag );};_ae .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_ae .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_agfga ._gagec {_cdgdg :=_agfga .traverseObjectData (_gfeee );
if _cdgdg !=nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_cdgdg );
return nil ,_cdgdg ;};};_bacgd ,_bdeb :=_agfga .newPdfAcroFormFromDict (_beaee ,_gfeee );if _bdeb !=nil {return nil ,_bdeb ;};_bacgd ._caade =!_eefca ;return _bacgd ,nil ;};

// SetBorderWidth sets the style's border width.
func (_bdbc *PdfBorderStyle )SetBorderWidth (width float64 ){_bdbc .W =&width };

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_ebeb *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _gddc []float64 ;for _fegg :=0;_fegg < _ebeb .GetNumComponents ();_fegg ++{_gddc =append (_gddc ,0.0,1.0);};return _gddc ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_gfgde *PdfTilingPattern )ToPdfObject ()_daa .PdfObject {_gfgde .PdfPattern .ToPdfObject ();_abdge :=_gfgde .getDict ();if _gfgde .PaintType !=nil {_abdge .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_gfgde .PaintType );};if _gfgde .TilingType !=nil {_abdge .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_gfgde .TilingType );
};if _gfgde .BBox !=nil {_abdge .Set ("\u0042\u0042\u006f\u0078",_gfgde .BBox .ToPdfObject ());};if _gfgde .XStep !=nil {_abdge .Set ("\u0058\u0053\u0074e\u0070",_gfgde .XStep );};if _gfgde .YStep !=nil {_abdge .Set ("\u0059\u0053\u0074e\u0070",_gfgde .YStep );
};if _gfgde .Resources !=nil {_abdge .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gfgde .Resources .ToPdfObject ());};if _gfgde .Matrix !=nil {_abdge .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gfgde .Matrix );};return _gfgde ._degd ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_bgdb *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_eabagc :=_bgdb .fill (provider ,appGen );if _eabagc !=nil {return _eabagc ;};if _ ,_bfecgd :=provider .(FieldImageProvider );_bfecgd {_eabagc =_bgdb .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _eabagc ;};

// IsCID returns true if the underlying font is CID.
func (_fdadb *PdfFont )IsCID ()bool {return _fdadb .baseFields ().isCIDFont ()};func (_bbefg *PdfWriter )writeObject (_cdabd int ,_gfdgfa _daa .PdfObject ){_ae .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_cdabd );
if _dfaba ,_gaad :=_gfdgfa .(*_daa .PdfIndirectObject );_gaad {_bbefg ._agfc [_cdabd ]=crossReference {Type :1,Offset :_bbefg ._badfb ,Generation :_dfaba .GenerationNumber };_bdcb :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cdabd );
if _ggaad ,_ddgec :=_dfaba .PdfObject .(*pdfSignDictionary );_ddgec {_ggaad ._gfcge =_bbefg ._badfb +int64 (len (_bdcb ));};if _dfaba .PdfObject ==nil {_ae .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_dfaba .PdfObject =_daa .MakeNull ();};_bdcb +=_dfaba .PdfObject .WriteString ();_bdcb +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_bbefg .writeString (_bdcb );return ;};if _cfeab ,_cafff :=_gfdgfa .(*_daa .PdfObjectStream );_cafff {_bbefg ._agfc [_cdabd ]=crossReference {Type :1,Offset :_bbefg ._badfb ,Generation :_cfeab .GenerationNumber };
_eadfca :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cdabd );_eadfca +=_cfeab .PdfObjectDictionary .WriteString ();_eadfca +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bbefg .writeString (_eadfca );_bbefg .writeBytes (_cfeab .Stream );
_bbefg .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _fbdfg ,_dbfgae :=_gfdgfa .(*_daa .PdfObjectStreams );_dbfgae {_bbefg ._agfc [_cdabd ]=crossReference {Type :1,Offset :_bbefg ._badfb ,Generation :_fbdfg .GenerationNumber };
_gcbg :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cdabd );var _cacbg []string ;var _efbbf string ;var _efdag int64 ;for _dffbg ,_gfaef :=range _fbdfg .Elements (){_fecb ,_dbga :=_gfaef .(*_daa .PdfIndirectObject );if !_dbga {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_cdabd ,_gfaef );
continue ;};_ggdbe :=_fecb .PdfObject .WriteString ()+"\u0020";_efbbf =_efbbf +_ggdbe ;_cacbg =append (_cacbg ,_c .Sprintf ("\u0025\u0064\u0020%\u0064",_fecb .ObjectNumber ,_efdag ));_bbefg ._agfc [int (_fecb .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_cdabd ,Index :_dffbg };
_efdag =_efdag +int64 (len ([]byte (_ggdbe )));};_gbcde :=_db .Join (_cacbg ,"\u0020")+"\u0020";_cbdgbc :=_daa .NewFlateEncoder ();_fgfeag :=_cbdgbc .MakeStreamDict ();_fgfeag .Set (_daa .PdfObjectName ("\u0054\u0079\u0070\u0065"),_daa .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_gfgg :=int64 (_fbdfg .Len ());_fgfeag .Set (_daa .PdfObjectName ("\u004e"),_daa .MakeInteger (_gfgg ));_adbab :=int64 (len (_gbcde ));_fgfeag .Set (_daa .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_daa .MakeInteger (_adbab ));_cbbaa ,_ :=_cbdgbc .EncodeBytes ([]byte (_gbcde +_efbbf ));
_gfec :=int64 (len (_cbbaa ));_fgfeag .Set (_daa .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_daa .MakeInteger (_gfec ));_gcbg +=_fgfeag .WriteString ();_gcbg +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bbefg .writeString (_gcbg );
_bbefg .writeBytes (_cbbaa );_bbefg .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_bbefg .writeString (_gfdgfa .WriteString ());};func (_dgcb *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};func (_fabag *PdfWriter )hasObject (_dddeg _daa .PdfObject )bool {_ ,_gcbbb :=_fabag ._egfgg [_dddeg ];return _gcbbb ;};var _deca =_de .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func (_ggd *PdfReader )newPdfActionGotoRFromDict (_eee *_daa .PdfObjectDictionary )(*PdfActionGoToR ,error ){_dbd ,_dfbc :=_dbbb (_eee .Get ("\u0046"));
if _dfbc !=nil {return nil ,_dfbc ;};return &PdfActionGoToR {D :_eee .Get ("\u0044"),NewWindow :_eee .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_dbd },nil ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_ddddc *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _ddddc .UnderlyingCS .GetNumComponents ();};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_acdf :=NewPdfAnnotation ();_bfc :=&PdfAnnotationFreeText {};_bfc .PdfAnnotation =_acdf ;_bfc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acdf .SetContext (_bfc );return _bfc ;};func _fcef (_fdad _daa .PdfObject )(*PdfColorspaceDeviceN ,error ){_gabde :=NewPdfColorspaceDeviceN ();
if _fgfe ,_cagab :=_fdad .(*_daa .PdfIndirectObject );_cagab {_gabde ._cbcda =_fgfe ;};_fdad =_daa .TraceToDirectObject (_fdad );_eacb ,_aeedd :=_fdad .(*_daa .PdfObjectArray );if !_aeedd {return nil ,_c .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _eacb .Len ()!=4&&_eacb .Len ()!=5{return nil ,_c .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_fdad =_eacb .Get (0);
_cgbe ,_aeedd :=_fdad .(*_daa .PdfObjectName );if !_aeedd {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_cgbe !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_c .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_fdad =_eacb .Get (1);
_fdad =_daa .TraceToDirectObject (_fdad );_ccgb ,_aeedd :=_fdad .(*_daa .PdfObjectArray );if !_aeedd {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_gabde .ColorantNames =_ccgb ;_fdad =_eacb .Get (2);_dadb ,_fbabd :=NewPdfColorspaceFromPdfObject (_fdad );if _fbabd !=nil {return nil ,_fbabd ;};_gabde .AlternateSpace =_dadb ;_eebc ,_fbabd :=_bcec (_eacb .Get (3));if _fbabd !=nil {return nil ,_fbabd ;
};_gabde .TintTransform =_eebc ;if _eacb .Len ()==5{_fdbb ,_bbaf :=_ggafb (_eacb .Get (4));if _bbaf !=nil {return nil ,_bbaf ;};_gabde .Attributes =_fdbb ;};return _gabde ,nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_bbcfb *PdfShading )GetContainingPdfObject ()_daa .PdfObject {return _bbcfb ._facgg };func (_ffg *PdfReader )newPdfActionSoundFromDict (_gcge *_daa .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_gcge .Get ("\u0053\u006f\u0075n\u0064"),Volume :_gcge .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_gcge .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_gcge .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_gcge .Get ("\u004d\u0069\u0078")},nil ;
};

// Add appends an outline item as a child of the current outline item.
func (_gaeb *OutlineItem )Add (item *OutlineItem ){_gaeb .Entries =append (_gaeb .Entries ,item )};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_daa .PdfObjectStream ;Data []byte ;_ggaf *_daa .PdfIndirectObject ;_ecbf *_daa .PdfObjectStream ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_acfgb *LTV )EnableChain (chain []*_e .Certificate )error {return _acfgb .enable (nil ,chain ,"")};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_cbag _daa .ParserMetadata ;};func _dfgac (_fcfff *_daa .PdfObjectArray )(float64 ,error ){_ccgbac ,_gaedef :=_fcfff .ToFloat64Array ();if _gaedef !=nil {_ae .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fcfff ,_gaedef );
};switch len (_ccgbac ){case 1:return _ccgbac [0],nil ;case 3:_fafafg :=PdfColorspaceDeviceRGB {};_gegc ,_dccdd :=_fafafg .ColorFromFloats (_ccgbac );if _dccdd !=nil {return 0.0,_dccdd ;};return _gegc .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_bagce :=PdfColorspaceDeviceCMYK {};
_fcecd ,_gcacf :=_bagce .ColorFromFloats (_ccgbac );if _gcacf !=nil {return 0.0,_gcacf ;};_cdfdgc ,_gcacf :=_bagce .ColorToRGB (_fcecd .(*PdfColorDeviceCMYK ));if _gcacf !=nil {return 0.0,_gcacf ;};return _cdfdgc .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_gaedef =_ff .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_ae .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fcfff ,_gaedef );
return 0.0,_gaedef ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_fafef *PdfPage )GetContainingPdfObject ()_daa .PdfObject {return _fafef ._cfgb };

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_gegba *PdfPage )GetPageAsIndirectObject ()*_daa .PdfIndirectObject {return _gegba ._cfgb };

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_fddae *PdfAcroForm ,_eefe *PdfField ,_gacef *PdfAnnotationWidget )(*_daa .PdfObjectDictionary ,error );};

// Initialize initializes the PdfSignature.
func (_bfddd *PdfSignature )Initialize ()error {if _bfddd .Handler ==nil {return _ff .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _bfddd .Handler .InitSignature (_bfddd );};

// SetShadingByName sets a shading resource specified by keyName.
func (_gedaf *PdfPageResources )SetShadingByName (keyName _daa .PdfObjectName ,shadingObj _daa .PdfObject )error {if _gedaf .Shading ==nil {_gedaf .Shading =_daa .MakeDict ();};_gdedb ,_gbffd :=_daa .GetDict (_gedaf .Shading );if !_gbffd {return _daa .ErrTypeError ;
};_gdedb .Set (keyName ,shadingObj );return nil ;};var _ pdfFont =(*pdfFontSimple )(nil );

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_abgfc int ,_bebcg *PdfPage )error ;

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_cfdd :=&PdfOutlineItem {_begdg :_daa .MakeIndirectObject (_daa .MakeDict ())};_cfdd ._eabde =_cfdd ;return _cfdd ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_bcdee PdfModel ;_degd _daa .PdfObject ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_gcebd *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_cage *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ff .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_eba ,_fege :=_ac .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bbcf ,img ._bfdc );if _fege !=nil {return img ,_fege ;};_gcde ,_fege :=_ac .GrayConverter .Convert (_eba );if _fege !=nil {return img ,_fege ;
};return _geda (_gcde .Base ()),nil ;};func (_eggfe *PdfReader )lookupPageByObject (_gaga _daa .PdfObject )(*PdfPage ,error ){return nil ,_ff .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// ToPdfObject implements interface PdfModel.
func (_cbef *PdfAnnotationInk )ToPdfObject ()_daa .PdfObject {_cbef .PdfAnnotation .ToPdfObject ();_dfbf :=_cbef ._gbf ;_ebdb :=_dfbf .PdfObject .(*_daa .PdfObjectDictionary );_cbef .PdfAnnotationMarkup .appendToPdfDictionary (_ebdb );_ebdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0049\u006e\u006b"));
_ebdb .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_cbef .InkList );_ebdb .SetIfNotNil ("\u0042\u0053",_cbef .BS );return _dfbf ;};

// ToPdfObject implements interface PdfModel.
func (_cceg *PdfActionLaunch )ToPdfObject ()_daa .PdfObject {_cceg .PdfAction .ToPdfObject ();_dcg :=_cceg ._ad ;_agg :=_dcg .PdfObject .(*_daa .PdfObjectDictionary );_agg .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeLaunch )));if _cceg .F !=nil {_agg .Set ("\u0046",_cceg .F .ToPdfObject ());
};_agg .SetIfNotNil ("\u0057\u0069\u006e",_cceg .Win );_agg .SetIfNotNil ("\u004d\u0061\u0063",_cceg .Mac );_agg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_cceg .Unix );_agg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cceg .NewWindow );
return _dcg ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};func _aafg (_eacf *_daa .PdfObjectDictionary )(*PdfShadingType4 ,error ){_bebda :=PdfShadingType4 {};_bcgbef :=_eacf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _bcgbef ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ggcga ,_fdfec :=_bcgbef .(*_daa .PdfObjectInteger );if !_fdfec {_ae .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bcgbef );
return nil ,_daa .ErrTypeError ;};_bebda .BitsPerCoordinate =_ggcga ;_bcgbef =_eacf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bcgbef ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ggcga ,_fdfec =_bcgbef .(*_daa .PdfObjectInteger );if !_fdfec {_ae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bcgbef );
return nil ,_daa .ErrTypeError ;};_bebda .BitsPerComponent =_ggcga ;_bcgbef =_eacf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bcgbef ==nil {_ae .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ggcga ,_fdfec =_bcgbef .(*_daa .PdfObjectInteger );if !_fdfec {_ae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bcgbef );
return nil ,_daa .ErrTypeError ;};_bebda .BitsPerComponent =_ggcga ;_bcgbef =_eacf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bcgbef ==nil {_ae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ggaeg ,_fdfec :=_bcgbef .(*_daa .PdfObjectArray );if !_fdfec {_ae .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bcgbef );
return nil ,_daa .ErrTypeError ;};_bebda .Decode =_ggaeg ;_bcgbef =_eacf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bcgbef ==nil {_ae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bebda .Function =[]PdfFunction {};if _bbcaa ,_abfa :=_bcgbef .(*_daa .PdfObjectArray );_abfa {for _ ,_cgcdb :=range _bbcaa .Elements (){_fdfeb ,_gebc :=_bcec (_cgcdb );if _gebc !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gebc );
return nil ,_gebc ;};_bebda .Function =append (_bebda .Function ,_fdfeb );};}else {_dbegd ,_fgebd :=_bcec (_bcgbef );if _fgebd !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgebd );
return nil ,_fgebd ;};_bebda .Function =append (_bebda .Function ,_dbegd );};return &_bebda ,nil ;};func (_fafge *PdfWriter )setCatalogVersion (){_fafge ._dbae .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_daa .MakeName (_c .Sprintf ("\u0025\u0064\u002e%\u0064",_fafge ._abfcb .Major ,_fafge ._abfcb .Minor )));
};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_daa .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _daa .PdfObject ;A _daa .PdfObject ;SE _daa .PdfObject ;C _daa .PdfObject ;F _daa .PdfObject ;
_begdg *_daa .PdfIndirectObject ;};func _fbgee (_cgegd _daa .PdfObject )(*_daa .PdfObjectDictionary ,*fontCommon ,error ){_aaff :=&fontCommon {};if _dfefb ,_gdaa :=_cgegd .(*_daa .PdfIndirectObject );_gdaa {_aaff ._decda =_dfefb .ObjectNumber ;};_ddcg ,_faab :=_daa .GetDict (_cgegd );
if !_faab {_ae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cgegd );
return nil ,nil ,ErrFontNotSupported ;};_bdac ,_faab :=_daa .GetNameVal (_ddcg .Get ("\u0054\u0079\u0070\u0065"));if !_faab {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _bdac !="\u0046\u006f\u006e\u0074"{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_bdac ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_daa .ErrTypeError ;};_fcbg ,_faab :=_daa .GetNameVal (_ddcg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_faab {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_aaff ._fbafe =_fcbg ;_caafg ,_faab :=_daa .GetNameVal (_ddcg .Get ("\u004e\u0061\u006d\u0065"));if _faab {_aaff ._cddg =_caafg ;};_cgaa :=_ddcg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _cgaa !=nil {_aaff ._fbeba =_daa .TraceToDirectObject (_cgaa );
_fffa ,_fefg :=_gcda (_aaff ._fbeba ,_aaff );if _fefg !=nil {return _ddcg ,_aaff ,_fefg ;};_aaff ._efedc =_fffa ;}else if _fcbg =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_fcbg =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_efff ,_gcgc :=_cbg .NewCIDSystemInfo (_ddcg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _gcgc !=nil {return _ddcg ,_aaff ,_gcgc ;};_fbca :=_c .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_efff .Registry ,_efff .Ordering );if _cbg .IsPredefinedCMap (_fbca ){_aaff ._efedc ,_gcgc =_cbg .LoadPredefinedCMap (_fbca );
if _gcgc !=nil {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_fbca ,_gcgc );
};};};_bbdb :=_ddcg .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _bbdb !=nil {_gdceb ,_abfc :=_dbadc (_bbdb );if _abfc !=nil {_ae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abfc );
return _ddcg ,_aaff ,_abfc ;};_aaff ._eccc =_gdceb ;};if _fcbg !="\u0054\u0079\u0070e\u0033"{_agdga ,_egfb :=_daa .GetNameVal (_ddcg .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_egfb {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _ddcg ,_aaff ,ErrRequiredAttributeMissing ;};_aaff ._agfd =_agdga ;};return _ddcg ,_aaff ,nil ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_eddfd *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_cbccc :=_eddfd ._adgcg .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _cbccc {return nil ,_ff .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_cbccc {return _eddfd ,nil ;};if _eddfd ._dcfgcf [revisionNumber ]!=nil {return _eddfd ._dcfgcf [revisionNumber ],nil ;};_eecd :=_eddfd ;for _dfeee :=_cbccc -1;_dfeee >=revisionNumber ;_dfeee --{_dgaag ,_fgge :=_eecd .GetPreviousRevision ();
if _fgge !=nil {return nil ,_fgge ;};_eddfd ._dcfgcf [_dfeee ]=_dgaag ;_eecd =_dgaag ;};return _eecd ,nil ;};var _aggde =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_abbggb *PdfPage )GetContentStreamObjs ()[]_daa .PdfObject {if _abbggb .Contents ==nil {return nil ;};_cebb :=_daa .TraceToDirectObject (_abbggb .Contents );if _ddaac ,_caabg :=_cebb .(*_daa .PdfObjectArray );_caabg {return _ddaac .Elements ();};
return []_daa .PdfObject {_cebb };};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_bfgaf pdfFontSimple )GetCharMetrics (code _df .CharCode )(_ec .CharMetrics ,bool ){if _eebef ,_adaba :=_bfgaf ._aaef [code ];_adaba {return _ec .CharMetrics {Wx :_eebef },true ;};if _ec .IsStdFont (_ec .StdFontName (_bfgaf ._agfd )){return _ec .CharMetrics {Wx :250},true ;
};return _ec .CharMetrics {},false ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _daa .PdfObjectName ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cdee *PdfShadingType1 )ToPdfObject ()_daa .PdfObject {_cdee .PdfShading .ToPdfObject ();_gadde ,_ddada :=_cdee .getShadingDict ();if _ddada !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cdee .Domain !=nil {_gadde .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cdee .Domain );};if _cdee .Matrix !=nil {_gadde .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cdee .Matrix );};if _cdee .Function !=nil {if len (_cdee .Function )==1{_gadde .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdee .Function [0].ToPdfObject ());
}else {_ecgfc :=_daa .MakeArray ();for _ ,_fbaac :=range _cdee .Function {_ecgfc .Append (_fbaac .ToPdfObject ());};_gadde .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecgfc );};};return _cdee ._facgg ;};func (_eea *PdfReader )newPdfActionJavaScriptFromDict (_beb *_daa .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_beb .Get ("\u004a\u0053")},nil ;
};func (_gebf *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};func _aaddf ()*modelManager {_gdcaca :=modelManager {};_gdcaca ._befce =map[PdfModel ]_daa .PdfObject {};_gdcaca ._cfdfd =map[_daa .PdfObject ]PdfModel {};return &_gdcaca ;};
func _dacd ()string {_bcee :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _gbdb _ag .Buffer ;for _adbba :=0;_adbba < 6;_adbba ++{_gbdb .WriteRune (rune (_bcee [_dd .Intn (len (_bcee ))]));
};return _gbdb .String ();};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_ccacc *PdfWriter )AddPage (page *PdfPage )error {const _baaea ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_cfeg (page );_adbbf :=page .ToPdfObject ();_ae .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_ae .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_adbbf );_gcdbf ,_baca :=_daa .GetIndirect (_adbbf );if !_baca {return _ff .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_ae .Log .Trace ("\u0025\u0073",_gcdbf );_ae .Log .Trace ("\u0025\u0073",_gcdbf .PdfObject );_dddgc ,_baca :=_daa .GetDict (_gcdbf .PdfObject );if !_baca {return _ff .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cbgfc ,_baca :=_daa .GetName (_dddgc .Get ("\u0054\u0079\u0070\u0065"));if !_baca {return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_dddgc .Get ("\u0054\u0079\u0070\u0065"));
};if _cbgfc .String ()!="\u0050\u0061\u0067\u0065"{return _ff .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_gfdag :=[]_daa .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_aefda ,_befea :=_daa .GetIndirect (_dddgc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ae .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_dddgc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_befea );
for _befea {_ae .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_aefda );_gbdbf ,_gcbce :=_daa .GetDict (_aefda .PdfObject );if !_gcbce {return _ff .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_fggf :=range _gfdag {_ae .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fggf );if _dddgc .Get (_fggf )!=nil {_ae .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _gbbc :=_gbdbf .Get (_fggf );_gbbc !=nil {_ae .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fggf );_dddgc .Set (_fggf ,_gbbc );};};_aefda ,_befea =_daa .GetIndirect (_gbdbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_ae .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gbdbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ae .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_dddgc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ccacc ._deafc );_gcdbf .PdfObject =_dddgc ;_ebdba ,_baca :=_daa .GetDict (_ccacc ._deafc .PdfObject );if !_baca {return _ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_gbaed ,_baca :=_daa .GetArray (_ebdba .Get ("\u004b\u0069\u0064\u0073"));if !_baca {return _ff .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_gbaed .Append (_gcdbf );_ccacc ._dgaggb [_dddgc ]=struct{}{};_ebaca ,_baca :=_daa .GetInt (_ebdba .Get ("\u0043\u006f\u0075n\u0074"));if !_baca {return _ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_ebaca =*_ebaca +1;if page ._badgb ==nil {_faac :=_agc .Track (_ccacc ._fdef ,_baaea );if _faac !=nil {return _faac ;};}else {_aggec :=_agc .Track (page ._badgb ._dgdc ,_baaea );if _aggec !=nil {return _aggec ;};};_ccacc .addObject (_gcdbf );_ecegff :=_ccacc .addObjects (_dddgc );
if _ecegff !=nil {return _ecegff ;};return nil ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_efcfb *PdfWriter )SetRotation (rotate int64 )error {_caace ,_fbedf :=_daa .GetDict (_efcfb ._deafc );if !_fbedf {return ErrTypeCheck ;};_caace .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_daa .MakeInteger (rotate ));return nil ;};func _bgbb (_bccc *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_ccfcb ,_edgg :=_daa .GetDict (_bccc .AP );
if !_edgg {return nil ,nil ,_ff .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _ccfcb ==nil {return nil ,nil ,nil ;};_fceb ,_edgg :=_daa .GetArray (_bccc .Rect );
if !_edgg ||_fceb .Len ()!=4{return nil ,nil ,_ff .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_eafgc ,_beeee :=NewPdfRectangle (*_fceb );if _beeee !=nil {return nil ,nil ,_beeee ;};_babd :=_daa .TraceToDirectObject (_ccfcb .Get ("\u004e"));
switch _bcfg :=_babd .(type ){case *_daa .PdfObjectStream :_cfeba :=_bcfg ;_fggb ,_bdfg :=NewXObjectFormFromStream (_cfeba );return _fggb ,_eafgc ,_bdfg ;case *_daa .PdfObjectDictionary :_bbbec :=_bcfg ;_dbeg ,_bcbf :=_daa .GetName (_bccc .AS );if !_bcbf {return nil ,nil ,nil ;
};if _bbbec .Get (*_dbeg )==nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_bfdfd ,_bcbf :=_daa .GetStream (_bbbec .Get (*_dbeg ));if !_bcbf {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_dbeg );
return nil ,nil ,_ff .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_dedga ,_fbff :=NewXObjectFormFromStream (_bfdfd );return _dedga ,_eafgc ,_fbff ;};_ae .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_babd );
return nil ,nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _dgg .ReadSeeker )(*PdfFont ,error ){_bfdfe ,_gcgfcd :=_ca .ReadAll (r );if _gcgfcd !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gcgfcd );
return nil ,_gcgfcd ;};_dfae ,_gcgfcd :=_ec .TtfParse (_ag .NewReader (_bfdfe ));if _gcgfcd !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_gcgfcd );
return nil ,_gcgfcd ;};_afeg :=&pdfCIDFontType2 {fontCommon :fontCommon {_fbafe :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_daa .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_dfae .Widths )<=0{return nil ,_ff .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_dafdbb :=1000.0/float64 (_dfae .UnitsPerEm );_bfgab :=_dafdbb *float64 (_dfae .Widths [0]);_bfcbg :=make (map[rune ]int );_cdfag :=make (map[_ec .GID ]int );_fafg :=_ec .GID (len (_dfae .Widths ));for _ccabg ,_bddg :=range _dfae .Chars {if _bddg > _fafg -1{continue ;
};_defdc :=int (_dafdbb *float64 (_dfae .Widths [_bddg ]));_bfcbg [_ccabg ]=_defdc ;_cdfag [_bddg ]=_defdc ;};_afeg ._agcac =_bfcbg ;_afeg .DW =_daa .MakeInteger (int64 (_bfgab ));_gbafb :=_fgee (_cdfag ,uint16 (_fafg ));_afeg .W =_daa .MakeIndirectObject (_gbafb );
_fagea :=_daa .MakeDict ();_fagea .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_daa .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_fagea .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_daa .MakeString ("\u0041\u0064\u006fb\u0065"));
_fagea .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_daa .MakeInteger (0));_afeg .CIDSystemInfo =_fagea ;_adag :=&PdfFontDescriptor {FontName :_daa .MakeName (_dfae .PostScriptName ),Ascent :_daa .MakeFloat (_dafdbb *float64 (_dfae .TypoAscender )),Descent :_daa .MakeFloat (_dafdbb *float64 (_dfae .TypoDescender )),CapHeight :_daa .MakeFloat (_dafdbb *float64 (_dfae .CapHeight )),FontBBox :_daa .MakeArrayFromFloats ([]float64 {_dafdbb *float64 (_dfae .Xmin ),_dafdbb *float64 (_dfae .Ymin ),_dafdbb *float64 (_dfae .Xmax ),_dafdbb *float64 (_dfae .Ymax )}),ItalicAngle :_daa .MakeFloat (_dfae .ItalicAngle ),MissingWidth :_daa .MakeFloat (_bfgab )};
_egadb ,_gcgfcd :=_daa .MakeStream (_bfdfe ,_daa .NewFlateEncoder ());if _gcgfcd !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_gcgfcd );
return nil ,_gcgfcd ;};_egadb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_daa .MakeInteger (int64 (len (_bfdfe ))));_adag .FontFile2 =_egadb ;if _dfae .Bold {_adag .StemV =_daa .MakeInteger (120);}else {_adag .StemV =_daa .MakeInteger (70);
};_eggb :=_gaed ;if _dfae .IsFixedPitch {_eggb |=_cdfcd ;};if _dfae .ItalicAngle !=0{_eggb |=_afdad ;};_adag .Flags =_daa .MakeInteger (int64 (_eggb ));_afeg ._agfd =_dfae .PostScriptName ;_afeg ._eccc =_adag ;_gdfg :=pdfFontType0 {fontCommon :fontCommon {_fbafe :"\u0054\u0079\u0070e\u0030",_agfd :_dfae .PostScriptName },DescendantFont :&PdfFont {_gbbee :_afeg },Encoding :_daa .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_dfgee :_dfae .NewEncoder ()};
if len (_dfae .Chars )> 0{_dedeg :=make (map[_cbg .CharCode ]rune ,len (_dfae .Chars ));for _dcfbf ,_eggbc :=range _dfae .Chars {_cgfc :=_cbg .CharCode (_eggbc );if _eadae ,_cgcae :=_dedeg [_cgfc ];!_cgcae ||(_cgcae &&_eadae > _dcfbf ){_dedeg [_cgfc ]=_dcfbf ;
};};_gdfg ._efedc =_cbg .NewToUnicodeCMap (_dedeg );};_ccdae :=PdfFont {_gbbee :&_gdfg };return &_ccdae ,nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_addd *PdfPageResources )SetXObjectImageByName (keyName _daa .PdfObjectName ,ximg *XObjectImage )error {_cdagg :=ximg .ToPdfObject ().(*_daa .PdfObjectStream );_bdce :=_addd .SetXObjectByName (keyName ,_cdagg );return _bdce ;};

// WriteString outputs the object as it is to be written to file.
func (_febab *pdfSignDictionary )WriteString ()string {_febab ._cdfad =0;_febab ._bbeb =0;_febab ._bfddf =0;_febab ._bddf =0;_cffef :=_ag .NewBuffer (nil );_cffef .WriteString ("\u003c\u003c");for _ ,_bdfec :=range _febab .Keys (){_ffcag :=_febab .Get (_bdfec );
switch _bdfec {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_cffef .WriteString (_bdfec .WriteString ());_cffef .WriteString ("\u0020");_febab ._bfddf =_cffef .Len ();_cffef .WriteString (_ffcag .WriteString ());_cffef .WriteString ("\u0020");_febab ._bddf =_cffef .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_cffef .WriteString (_bdfec .WriteString ());_cffef .WriteString ("\u0020");_febab ._cdfad =_cffef .Len ();_cffef .WriteString (_ffcag .WriteString ());_cffef .WriteString ("\u0020");_febab ._bbeb =_cffef .Len ()-1;
default:_cffef .WriteString (_bdfec .WriteString ());_cffef .WriteString ("\u0020");_cffef .WriteString (_ffcag .WriteString ());};};_cffef .WriteString ("\u003e\u003e");return _cffef .String ();};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_bade *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_ceac :=_bade .actualFont ();if _ceac ==nil {_ae .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_bade ._gbbee );
return _ec .CharMetrics {},false ;};if _bdaa ,_ecac :=_ceac .GetRuneMetrics (r );_ecac {return _bdaa ,true ;};if _ddag ,_acbe :=_bade .GetFontDescriptor ();_acbe ==nil &&_ddag !=nil {return _ec .CharMetrics {Wx :_ddag ._bcae },true ;};_ae .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bade );
return _ec .CharMetrics {},false ;};func _cdbge (_ceaf *XObjectImage )error {if _ceaf .SMask ==nil {return nil ;};_bdcca ,_gdgea :=_ceaf .SMask .(*_daa .PdfObjectStream );if !_gdgea {_ae .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _daa .ErrTypeError ;};_decbd :=_bdcca .PdfObjectDictionary ;_gdgaa :=_decbd .Get ("\u004d\u0061\u0074t\u0065");if _gdgaa ==nil {return nil ;};_fbgdd ,_gfcce :=_dfgac (_gdgaa .(*_daa .PdfObjectArray ));if _gfcce !=nil {return _gfcce ;};_gcfbb :=_daa .MakeArrayFromFloats ([]float64 {_fbgdd });
_decbd .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gcfbb );return nil ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_fcg *PdfAction )GetContext ()PdfModel {if _fcg ==nil {return nil ;};return _fcg ._gfc ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_ebaa *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dacg :=vals [0];if _dacg < 0.0||_dacg > 1.0{_ae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dacg );
return nil ,ErrColorOutOfRange ;};_fab :=vals [1];if _fab < 0.0||_fab > 1.0{_ae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fab );return nil ,ErrColorOutOfRange ;
};_gbad :=vals [2];if _gbad < 0.0||_gbad > 1.0{_ae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gbad );return nil ,ErrColorOutOfRange ;};_fegc :=vals [3];
if _fegc < 0.0||_fegc > 1.0{_ae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fegc );return nil ,ErrColorOutOfRange ;};_eeaa :=NewPdfColorDeviceCMYK (_dacg ,_fab ,_gbad ,_fegc );
return _eeaa ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_fecfc *PdfSignature )SetLocation (location string ){_fecfc .Location =_daa .MakeString (location )};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_bfge *PdfAppender )Write (w _dgg .Writer )error {if _bfge ._gfbf {return _ff .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_ebbg :=NewPdfWriter ();_gacf ,_geef :=_daa .GetDict (_ebbg ._deafc );if !_geef {return _ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_gbaf ,_geef :=_gacf .Get ("\u004b\u0069\u0064\u0073").(*_daa .PdfObjectArray );if !_geef {return _ff .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_cgcf ,_geef :=_gacf .Get ("\u0043\u006f\u0075n\u0074").(*_daa .PdfObjectInteger );if !_geef {return _ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_bcde :=_bfge ._egaf ._adgcg ;_agab :=_bcde .GetTrailer ();if _agab ==nil {return _ff .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_daefc ,_geef :=_daa .GetIndirect (_agab .Get ("\u0052\u006f\u006f\u0074"));
if !_geef {return _ff .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_aebe ,_geef :=_daa .GetDict (_daefc );if !_geef {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_daefc ,*_agab );
return _ff .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_gada :=range _aebe .Keys (){if _ebbg ._dbae .Get (_gada )==nil {_dcd :=_aebe .Get (_gada );_ebbg ._dbae .Set (_gada ,_dcd );};};if _bfge ._bgcb !=nil {if _bfge ._bgcb ._caade {if _eefc :=_daa .TraceToDirectObject (_bfge ._bgcb .ToPdfObject ());
!_daa .IsNullObject (_eefc ){_ebbg ._dbae .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_eefc );_bfge .updateObjectsDeep (_eefc ,nil );}else {_ae .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_ebbg ._dbae .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_bfge ._bgcb .ToPdfObject ());_bfge .updateObjectsDeep (_bfge ._bgcb .ToPdfObject (),nil );};};if _bfge ._cfbe !=nil {_bfge .updateObjectsDeep (_bfge ._cfbe .ToPdfObject (),nil );
_ebbg ._dbae .Set ("\u0044\u0053\u0053",_bfge ._cfbe .GetContainingPdfObject ());};if _bfge ._ddda !=nil {_ebbg ._dbae .Set ("\u0050\u0065\u0072m\u0073",_bfge ._ddda .ToPdfObject ());_bfge .updateObjectsDeep (_bfge ._ddda .ToPdfObject (),nil );};if _ebbg ._abfcb .Major < 2{_ebbg .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_ebbg .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _eebe ,_bdfb :=_daa .GetDict (_agab .Get ("\u0049\u006e\u0066\u006f"));_bdfb {if _cfggf ,_eece :=_daa .GetDict (_ebbg ._badb );_eece {for _ ,_begf :=range _eebe .Keys (){if _cfggf .Get (_begf )==nil {_cfggf .Set (_begf ,_eebe .Get (_begf ));
};};};};if _bfge ._eagb !=nil {_ebbg ._badb =_daa .MakeIndirectObject (_bfge ._eagb .ToPdfObject ());};_bfge .addNewObject (_ebbg ._badb );_bfge .addNewObject (_ebbg ._gcdee );_daca :=false ;if len (_bfge ._egaf .PageList )!=len (_bfge ._ffda ){_daca =true ;
}else {for _dcda :=range _bfge ._egaf .PageList {switch {case _bfge ._ffda [_dcda ]==_bfge ._egaf .PageList [_dcda ]:case _bfge ._ffda [_dcda ]==_bfge .Reader .PageList [_dcda ]:default:_daca =true ;};if _daca {break ;};};};if _daca {_bfge .updateObjectsDeep (_ebbg ._deafc ,nil );
}else {_bfge ._dabd [_ebbg ._deafc ]=struct{}{};};_ebbg ._deafc .ObjectNumber =_bfge .Reader ._gefdea .ObjectNumber ;_bfge ._fedb [_ebbg ._deafc ]=_bfge .Reader ._gefdea .ObjectNumber ;_ffcd :=[]_daa .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_gbbf :=range _bfge ._ffda {_gfbfd :=_gbbf .ToPdfObject ();*_cgcf =*_cgcf +1;if _dggb ,_febae :=_gfbfd .(*_daa .PdfIndirectObject );_febae &&_dggb .GetParser ()==_bfge ._egaf ._adgcg {_gbaf .Append (&_dggb .PdfObjectReference );continue ;};if _dfce ,_bfea :=_daa .GetDict (_gfbfd );
_bfea {_bfdb ,_ceab :=_dfce .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_daa .PdfIndirectObject );for _ceab {_ae .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bfdb );_daaa ,_gfcad :=_bfdb .PdfObject .(*_daa .PdfObjectDictionary );
if !_gfcad {return _ff .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_faeg :=range _ffcd {_ae .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_faeg );if _gged :=_dfce .Get (_faeg );
_gged !=nil {_ae .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_gbbf ._cdef .Keys ())> 0&&!_daca {_feab :=_gbbf ._cdef ;if _abbd :=_feab .Get (_faeg );_abbd !=nil {if _gged !=_abbd {_ae .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_faeg ,_abbd );
_dfce .Set (_faeg ,_abbd );};};};continue ;};if _bgca :=_daaa .Get (_faeg );_bgca !=nil {_ae .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_faeg );_dfce .Set (_faeg ,_bgca );};};
_bfdb ,_ceab =_daaa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_daa .PdfIndirectObject );_ae .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_daaa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};if _daca {_dfce .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ebbg ._deafc );
};};_bfge .updateObjectsDeep (_gfbfd ,nil );_gbaf .Append (_gfbfd );};if _ ,_gdae :=_bfge ._ecec .Seek (0,_dgg .SeekStart );_gdae !=nil {return _gdae ;};_cefe :=make (map[SignatureHandler ]_dgg .Writer );_ffcdd :=_daa .MakeArray ();for _ ,_adcb :=range _bfge ._eccf {if _ggba ,_bcgf :=_daa .GetIndirect (_adcb );
_bcgf {if _ceed ,_fdc :=_ggba .PdfObject .(*pdfSignDictionary );_fdc {_geab :=*_ceed ._ebebc ;var _cgec error ;_cefe [_geab ],_cgec =_geab .NewDigest (_ceed ._ebeaa );if _cgec !=nil {return _cgec ;};_ffcdd .Append (_daa .MakeInteger (0xfffff),_daa .MakeInteger (0xfffff));
};};};if _ffcdd .Len ()> 0{_ffcdd .Append (_daa .MakeInteger (0xfffff),_daa .MakeInteger (0xfffff));};for _ ,_ddbb :=range _bfge ._eccf {if _bbaa ,_efgb :=_daa .GetIndirect (_ddbb );_efgb {if _cfad ,_cdd :=_bbaa .PdfObject .(*pdfSignDictionary );_cdd {_cfad .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_ffcdd );
};};};_cggb :=len (_cefe )> 0;var _ddad _dgg .Reader =_bfge ._ecec ;if _cggb {_feda :=make ([]_dgg .Writer ,0,len (_cefe ));for _ ,_fcdd :=range _cefe {_feda =append (_feda ,_fcdd );};_ddad =_dgg .TeeReader (_bfge ._ecec ,_dgg .MultiWriter (_feda ...));
};_ecebg ,_ffe :=_dgg .Copy (w ,_ddad );if _ffe !=nil {return _ffe ;};if len (_bfge ._eccf )==0{return nil ;};_ebbg ._acgfc =_ecebg ;_ebbg .ObjNumOffset =_bfge ._ddga ;_ebbg ._ffde =true ;_ebbg ._ccee =_bfge ._eccg ;_ebbg ._aeafe =_bfge ._egfa ;_ebbg ._dcbfe =_bfge ._acf ;
_ebbg ._abfcb =_bfge ._egaf .PdfVersion ();_ebbg ._faabf =_bfge ._fedb ;_ebbg ._bcce =_bfge ._cbadc .GetCrypter ();_ebbg ._efea =_bfge ._cbadc .GetEncryptObj ();_befc :=_bfge ._cbadc .GetXrefType ();if _befc !=nil {_edgb :=*_befc ==_daa .XrefTypeObjectStream ;
_ebbg ._ggab =&_edgb ;};_ebbg ._egfgg =map[_daa .PdfObject ]struct{}{};_ebbg ._aaaae =[]_daa .PdfObject {};for _ ,_bbgg :=range _bfge ._eccf {if _ ,_gff :=_bfge ._dabd [_bbgg ];_gff {continue ;};_ebbg .addObject (_bbgg );};_gacbg :=w ;if _cggb {_gacbg =_ag .NewBuffer (nil );
};if _bfge ._eefb !=""&&_ebbg ._bcce ==nil {_ebbg .Encrypt ([]byte (_bfge ._eefb ),[]byte (_bfge ._eefb ),_bfge ._fcfb );};if _cdced :=_agab .Get ("\u0049\u0044");_cdced !=nil {if _dagg ,_acdd :=_daa .GetArray (_cdced );_acdd {_ebbg ._fabed =_dagg ;};};
if _edac :=_ebbg .Write (_gacbg );_edac !=nil {return _edac ;};if _cggb {_edeb :=_gacbg .(*_ag .Buffer ).Bytes ();_efcad :=_daa .MakeArray ();var _fffd []*pdfSignDictionary ;var _eaac int64 ;for _ ,_baad :=range _ebbg ._aaaae {if _dccga ,_cagg :=_daa .GetIndirect (_baad );
_cagg {if _aeeeb ,_bad :=_dccga .PdfObject .(*pdfSignDictionary );_bad {_fffd =append (_fffd ,_aeeeb );_efcb :=_aeeeb ._gfcge +int64 (_aeeeb ._cdfad );_efcad .Append (_daa .MakeInteger (_eaac ),_daa .MakeInteger (_efcb -_eaac ));_eaac =_aeeeb ._gfcge +int64 (_aeeeb ._bbeb );
};};};_efcad .Append (_daa .MakeInteger (_eaac ),_daa .MakeInteger (_ecebg +int64 (len (_edeb ))-_eaac ));_cffda :=[]byte (_efcad .WriteString ());for _ ,_dcgb :=range _fffd {_agag :=int (_dcgb ._gfcge -_ecebg );for _bdaf :=_dcgb ._bfddf ;_bdaf < _dcgb ._bddf ;
_bdaf ++{_edeb [_agag +_bdaf ]=' ';};_bbfa :=_edeb [_agag +_dcgb ._bfddf :_agag +_dcgb ._bddf ];copy (_bbfa ,_cffda );};var _fgb int ;for _ ,_dfa :=range _fffd {_bedg :=int (_dfa ._gfcge -_ecebg );_dgga :=_edeb [_fgb :_bedg +_dfa ._cdfad ];_deedb :=*_dfa ._ebebc ;
_cefe [_deedb ].Write (_dgga );_fgb =_bedg +_dfa ._bbeb ;};for _ ,_eafbd :=range _fffd {_cffg :=_edeb [_fgb :];_ebea :=*_eafbd ._ebebc ;_cefe [_ebea ].Write (_cffg );};for _ ,_bccf :=range _fffd {_gcbe :=int (_bccf ._gfcge -_ecebg );_ccedd :=*_bccf ._ebebc ;
_aebf :=_cefe [_ccedd ];if _ffed :=_ccedd .Sign (_bccf ._ebeaa ,_aebf );_ffed !=nil {return _ffed ;};_bccf ._ebeaa .ByteRange =_efcad ;_bgeg :=[]byte (_bccf ._ebeaa .Contents .WriteString ());for _aaaa :=_bccf ._bfddf ;_aaaa < _bccf ._bddf ;_aaaa ++{_edeb [_gcbe +_aaaa ]=' ';
};for _ecfe :=_bccf ._cdfad ;_ecfe < _bccf ._bbeb ;_ecfe ++{_edeb [_gcbe +_ecfe ]=' ';};_eefd :=_edeb [_gcbe +_bccf ._bfddf :_gcbe +_bccf ._bddf ];copy (_eefd ,_cffda );_eefd =_edeb [_gcbe +_bccf ._cdfad :_gcbe +_bccf ._bbeb ];copy (_eefd ,_bgeg );};_fegaf :=_ag .NewBuffer (_edeb );
_ ,_ffe =_dgg .Copy (w ,_fegaf );if _ffe !=nil {return _ffe ;};};_bfge ._gfbf =true ;return nil ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_abgba *PdfColorspaceCalRGB )ToPdfObject ()_daa .PdfObject {_fagc :=&_daa .PdfObjectArray {};_fagc .Append (_daa .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_bceg :=_daa .MakeDict ();if _abgba .WhitePoint !=nil {_babe :=_daa .MakeArray (_daa .MakeFloat (_abgba .WhitePoint [0]),_daa .MakeFloat (_abgba .WhitePoint [1]),_daa .MakeFloat (_abgba .WhitePoint [2]));
_bceg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_babe );}else {_ae .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _abgba .BlackPoint !=nil {_bfebc :=_daa .MakeArray (_daa .MakeFloat (_abgba .BlackPoint [0]),_daa .MakeFloat (_abgba .BlackPoint [1]),_daa .MakeFloat (_abgba .BlackPoint [2]));_bceg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bfebc );
};if _abgba .Gamma !=nil {_cdea :=_daa .MakeArray (_daa .MakeFloat (_abgba .Gamma [0]),_daa .MakeFloat (_abgba .Gamma [1]),_daa .MakeFloat (_abgba .Gamma [2]));_bceg .Set ("\u0047\u0061\u006dm\u0061",_cdea );};if _abgba .Matrix !=nil {_fffe :=_daa .MakeArray (_daa .MakeFloat (_abgba .Matrix [0]),_daa .MakeFloat (_abgba .Matrix [1]),_daa .MakeFloat (_abgba .Matrix [2]),_daa .MakeFloat (_abgba .Matrix [3]),_daa .MakeFloat (_abgba .Matrix [4]),_daa .MakeFloat (_abgba .Matrix [5]),_daa .MakeFloat (_abgba .Matrix [6]),_daa .MakeFloat (_abgba .Matrix [7]),_daa .MakeFloat (_abgba .Matrix [8]));
_bceg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fffe );};_fagc .Append (_bceg );if _abgba ._ddbec !=nil {_abgba ._ddbec .PdfObject =_fagc ;return _abgba ._ddbec ;};return _fagc ;};

// GetVersion gets the document version.
func (_abdf *PdfWriter )GetVersion ()_daa .Version {return _abdf ._abfcb };

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_afa :=NewPdfAction ();_dc :=&PdfActionMovie {};_dc .PdfAction =_afa ;_afa .SetContext (_dc );return _dc ;};func (_gbdggg *pdfFontSimple )baseFields ()*fontCommon {return &_gbdggg .fontCommon };func (_dedfa *DSS )addCRLs (_afca [][]byte )([]*_daa .PdfObjectStream ,error ){return _dedfa .add (&_dedfa .CRLs ,_dedfa ._fafe ,_afca );
};func (_ggad *Image )samplesAddPadding (_deedbe []uint32 )[]uint32 {_ecdfb :=_ac .BytesPerLine (int (_ggad .Width ),int (_ggad .BitsPerComponent ),_ggad .ColorComponents )*(8/int (_ggad .BitsPerComponent ));_adgac :=_ecdfb *int (_ggad .Height );if len (_deedbe )==_adgac {return _deedbe ;
};_acfb :=make ([]uint32 ,_adgac );_decf :=int (_ggad .Width )*_ggad .ColorComponents ;for _befgb :=0;_befgb < int (_ggad .Height );_befgb ++{_cebc :=_befgb *int (_ggad .Width );_fegca :=_befgb *_ecdfb ;for _fdeab :=0;_fdeab < _decf ;_fdeab ++{_acfb [_fegca +_fdeab ]=_deedbe [_cebc +_fdeab ];
};};return _acfb ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_cdeee *PdfWriter )GetPdfVersion ()string {return _cdeee .getPdfVersion ()};func (_dadae *pdfCIDFontType0 )baseFields ()*fontCommon {return &_dadae .fontCommon };func (_fbaaf *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_fageae *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_bcfde :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_eede ,_gceec :=_fageae .GetNumPages ();if _gceec !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gceec );
return nil ,_gceec ;};for _bbfgf :=1;_bbfgf <=_eede ;_bbfgf ++{_fedff ,_bgafe :=_fageae .GetPage (_bbfgf );if _bgafe !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgafe );return nil ,_bgafe ;};if opts .PageProcessCallback !=nil {_bgafe =opts .PageProcessCallback (_bbfgf ,_fedff );
if _bgafe !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgafe );return nil ,_bgafe ;};}else if opts .PageCallback !=nil {opts .PageCallback (_bbfgf ,_fedff );};_bgafe =_bcfde .AddPage (_fedff );if _bgafe !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgafe );
return nil ,_bgafe ;};};_bcfde ._abfcb =_fageae .PdfVersion ();if !opts .SkipInfo {_ecbgb ,_geegc :=_fageae .GetPdfInfo ();if _geegc !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_geegc );}else {_bcfde ._badb .PdfObject =_ecbgb .ToPdfObject ();
};};if !opts .SkipMetadata {if _efggc :=_fageae ._cgace .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_efggc !=nil {if _dfdfeb :=_bcfde .SetCatalogMetadata (_efggc );_dfdfeb !=nil {return nil ,_dfdfeb ;};};};if !opts .SkipAcroForm {_daee :=_bcfde .SetForms (_fageae .AcroForm );
if _daee !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_daee );return nil ,_daee ;};};if !opts .SkipOutlines {_bcfde .AddOutlineTree (_fageae .GetOutlineTree ());};if !opts .SkipOCProperties {_baagd ,_fgfgd :=_fageae .GetOCProperties ();
if _fgfgd !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fgfgd );}else {_fgfgd =_bcfde .SetOCProperties (_baagd );if _fgfgd !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fgfgd );};};};if !opts .SkipPageLabels {_fbbeg ,_abfeea :=_fageae .GetPageLabels ();
if _abfeea !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abfeea );}else {_abfeea =_bcfde .SetPageLabels (_fbbeg );if _abfeea !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_abfeea );};};};if !opts .SkipNamedDests {_gfbda ,_ddfd :=_fageae .GetNamedDestinations ();
if _ddfd !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddfd );}else {_ddfd =_bcfde .SetNamedDestinations (_gfbda );if _ddfd !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddfd );};};};if !opts .SkipNameDictionary {_gfgbd ,_ebcea :=_fageae .GetNameDictionary ();
if _ebcea !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebcea );}else {_ebcea =_bcfde .SetNameDictionary (_gfgbd );if _ebcea !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebcea );};};};if !opts .SkipRotation &&_fageae .Rotate !=nil {if _ddfff :=_bcfde .SetRotation (*_fageae .Rotate );
_ddfff !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddfff );};};return &_bcfde ,nil ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_dddb *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dddb .Base ==nil {return nil ,_ff .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _dddb .Base .ColorToRGB (color );};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_abab *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_aaecd :=0.3*_abab .R ()+0.59*_abab .G ()+0.11*_abab .B ();_aaecd =_ce .Min (_ce .Max (_aaecd ,0.0),1.0);return NewPdfColorDeviceGray (_aaecd );};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _daa .PdfObject ;Sy _daa .PdfObject ;};func (_cdc *PdfReader )newPdfAnnotationPrinterMarkFromDict (_caef *_daa .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_gfa :=PdfAnnotationPrinterMark {};
_gfa .MN =_caef .Get ("\u004d\u004e");return &_gfa ,nil ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_gcdee *_daa .PdfIndirectObject ;_deafc *_daa .PdfIndirectObject ;_dgaggb map[_daa .PdfObject ]struct{};_aaaae []_daa .PdfObject ;_egfgg map[_daa .PdfObject ]struct{};_ggddcc []*_daa .PdfIndirectObject ;_fgefg *PdfOutlineTreeNode ;
_dbae *_daa .PdfObjectDictionary ;_abfaf []_daa .PdfObject ;_badb *_daa .PdfIndirectObject ;_ccbbdb *_fc .Writer ;_badfb int64 ;_ccfbf error ;_bcce *_daa .PdfCrypt ;_bagfc *_daa .PdfObjectDictionary ;_efea *_daa .PdfIndirectObject ;_fabed *_daa .PdfObjectArray ;
_abfcb _daa .Version ;_ggab *bool ;_ffacb map[_daa .PdfObject ][]*_daa .PdfObjectDictionary ;_fcgff *PdfAcroForm ;_dfffab Optimizer ;_bbfad StandardApplier ;_agfc map[int ]crossReference ;_acgfc int64 ;ObjNumOffset int ;_ffde bool ;_ccee _daa .XrefTable ;
_aeafe int64 ;_dcbfe int64 ;_faabf map[_daa .PdfObject ]int64 ;_dbgf map[_daa .PdfObject ]struct{};_fdef string ;_dabce []*PdfOutputIntent ;_gbcf bool ;_adcff ,_cgfaa string ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_gee :=NewPdfAction ();_bbb :=&PdfActionImportData {};_bbb .PdfAction =_gee ;_gee .SetContext (_bbb );return _bbb ;};func (_efagf *PdfWriter )setDocumentIDs (_aebfd ,_gcafc string ){_efagf ._fabed =_daa .MakeArray (_daa .MakeHexString (_aebfd ),_daa .MakeHexString (_gcafc ));
};

// WriteToFile writes the Appender output to file specified by path.
func (_baf *PdfAppender )WriteToFile (outputPath string )error {_fdfd ,_fbea :=_dga .Create (outputPath );if _fbea !=nil {return _fbea ;};defer _fdfd .Close ();return _baf .Write (_fdfd );};

// StdFontName represents name of a standard font.
type StdFontName =_ec .StdFontName ;type pdfCIDFontType0 struct{fontCommon ;_abbgg *_daa .PdfIndirectObject ;_ggbg _df .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_daa .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _daa .PdfObject ;W _daa .PdfObject ;DW2 _daa .PdfObject ;W2 _daa .PdfObject ;_dfca map[_df .CharCode ]float64 ;_bgcca float64 ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_aead *modelManager )GetPrimitiveFromModel (model PdfModel )_daa .PdfObject {_bgedf ,_bedd :=_aead ._befce [model ];if !_bedd {return nil ;};return _bgedf ;};func (_badag *PdfReader )buildPageList (_eggbg *_daa .PdfIndirectObject ,_ddcfg *_daa .PdfIndirectObject ,_cddc map[_daa .PdfObject ]struct{})error {if _eggbg ==nil {return nil ;
};if _ ,_eddab :=_cddc [_eggbg ];_eddab {_ae .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_eggbg .ObjectNumber );
return nil ;};_cddc [_eggbg ]=struct{}{};_ffffa ,_afbaa :=_eggbg .PdfObject .(*_daa .PdfObjectDictionary );if !_afbaa {return _ff .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_eaaafc ,_afbaa :=(*_ffffa ).Get ("\u0054\u0079\u0070\u0065").(*_daa .PdfObjectName );
if !_afbaa {if _ffffa .Get ("\u004b\u0069\u0064\u0073")==nil {return _ff .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_ae .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_eaaafc =_daa .MakeName ("\u0050\u0061\u0067e\u0073");_ffffa .Set ("\u0054\u0079\u0070\u0065",_eaaafc );};_ae .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_eaaafc ,_eggbg );
if *_eaaafc =="\u0050\u0061\u0067\u0065"{_dfdbb ,_faccg :=_badag .newPdfPageFromDict (_ffffa );if _faccg !=nil {return _faccg ;};_dfdbb .setContainer (_eggbg );if _ddcfg !=nil {_ffffa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ddcfg );};_badag ._eefcbf =append (_badag ._eefcbf ,_eggbg );
_badag .PageList =append (_badag .PageList ,_dfdbb );return nil ;};if *_eaaafc !="\u0050\u0061\u0067e\u0073"{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_eaaafc );
return _ff .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _ddcfg !=nil {_ffffa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ddcfg );};if !_badag ._gagec {_fcebge :=_badag .traverseObjectData (_eggbg );if _fcebge !=nil {return _fcebge ;};};_ecdb ,_cefba :=_badag ._adgcg .Resolve (_ffffa .Get ("\u004b\u0069\u0064\u0073"));
if _cefba !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _cefba ;};var _bdgg *_daa .PdfObjectArray ;
_bdgg ,_afbaa =_ecdb .(*_daa .PdfObjectArray );if !_afbaa {_eedd ,_aaacfe :=_ecdb .(*_daa .PdfIndirectObject );if !_aaacfe {return _ff .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bdgg ,_afbaa =_eedd .PdfObject .(*_daa .PdfObjectArray );
if !_afbaa {return _ff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_ae .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_bdgg );
for _bagf ,_abgbf :=range _bdgg .Elements (){_afgff ,_gbaba :=_daa .GetIndirect (_abgbf );if !_gbaba {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_afgff );
return _ff .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bdgg .Set (_bagf ,_afgff );_cefba =_badag .buildPageList (_afgff ,_eggbg ,_cddc );if _cefba !=nil {return _cefba ;
};};return nil ;};

// GetPerms returns the Permissions dictionary
func (_fcda *PdfReader )GetPerms ()*Permissions {return _fcda ._cdefg };

// ToPdfObject returns a PDF object representation of the outline destination.
func (_ggeg OutlineDest )ToPdfObject ()_daa .PdfObject {if (_ggeg .PageObj ==nil &&_ggeg .Page < 0)||_ggeg .Mode ==""{return _daa .MakeNull ();};_gcdag :=_daa .MakeArray ();if _ggeg .PageObj !=nil {_gcdag .Append (_ggeg .PageObj );}else {_gcdag .Append (_daa .MakeInteger (_ggeg .Page ));
};_gcdag .Append (_daa .MakeName (_ggeg .Mode ));switch _ggeg .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_gcdag .Append (_daa .MakeFloat (_ggeg .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_gcdag .Append (_daa .MakeFloat (_ggeg .X ));
case "\u0058\u0059\u005a":_gcdag .Append (_daa .MakeFloat (_ggeg .X ));_gcdag .Append (_daa .MakeFloat (_ggeg .Y ));_gcdag .Append (_daa .MakeFloat (_ggeg .Zoom ));default:_gcdag .Set (1,_daa .MakeName ("\u0046\u0069\u0074"));};return _gcdag ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_edfe ,_faee :=_ec .NewStdFontByName (HelveticaName );if !_faee {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_gfgeb :=_cafb (_edfe );return &PdfFont {_gbbee :&_gfgeb };};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_dgfa FieldFlag )Has (fl FieldFlag )bool {return (_dgfa .Mask ()&fl .Mask ())> 0};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_effbd :_daa .MakeDict ()};
};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_cfc :=NewPdfAction ();_ffb :=&PdfActionGoToE {};_ffb .PdfAction =_cfc ;_cfc .SetContext (_ffb );return _ffb ;};func _dgdfbe (_bfba _daa .PdfObject )[]*_daa .PdfObjectStream {if _bfba ==nil {return nil ;};_cfaec ,_ccfea :=_daa .GetArray (_bfba );
if !_ccfea ||_cfaec .Len ()==0{return nil ;};_gead :=make ([]*_daa .PdfObjectStream ,0,_cfaec .Len ());for _ ,_ddbdf :=range _cfaec .Elements (){if _aadc ,_edca :=_daa .GetStream (_ddbdf );_edca {_gead =append (_gead ,_aadc );};};return _gead ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_cgbg *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcde :=vals [0];_cdeg :=[]float64 {_dcde };_ecea ,_bcga :=_cgbg .TintTransform .Evaluate (_cdeg );
if _bcga !=nil {_ae .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_bcga );_ae .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cgbg .TintTransform );
return nil ,_bcga ;};_ae .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_ecea ,_cgbg .AlternateSpace );
_agde ,_bcga :=_cgbg .AlternateSpace .ColorFromFloats (_ecea );if _bcga !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_bcga );
return nil ,_bcga ;};return _agde ,nil ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_fcbb :_daa .MakeIndirectObject (_daa .MakeDict ()),VRI :map[string ]*VRI {}};};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_dfdfe *pdfFontSimple )SetEncoder (encoder _df .TextEncoder ){_dfdfe ._face =encoder };

// SetReason sets the `Reason` field of the signature.
func (_cdfb *PdfSignature )SetReason (reason string ){_cdfb .Reason =_daa .MakeString (reason )};

// GetStructRoot gets the StructTreeRoot object
func (_abedc *PdfPage )GetStructTreeRoot ()(*_daa .PdfObject ,bool ){_agedg ,_dbfbb :=_abedc ._badgb .GetCatalogStructTreeRoot ();return &_agedg ,_dbfbb ;};func _cggga (_eefa _daa .PdfObject ,_babfc *PdfReader )(*OutlineDest ,error ){_edfbb ,_dddgf :=_daa .GetArray (_eefa );
if !_dddgf {return nil ,_ff .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_agdf :=_edfbb .Len ();if _agdf < 2{return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_agdf );
};_cfaa :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_fdae :=_edfbb .Get (0);if _ecaf ,_dadc :=_daa .GetIndirect (_fdae );_dadc {if _ ,_egfg ,_caacb :=_babfc .PageFromIndirectObject (_ecaf );_caacb ==nil {_cfaa .Page =int64 (_egfg -1);}else {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_ecaf );
};_cfaa .PageObj =_ecaf ;}else if _gadad ,_dafcg :=_daa .GetIntVal (_fdae );_dafcg {if _gadad >=0&&_gadad < len (_babfc .PageList ){_cfaa .PageObj =_babfc .PageList [_gadad ].GetPageAsIndirectObject ();}else {_ae .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_gadad );
};_cfaa .Page =int64 (_gadad );}else {return nil ,_c .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_fdae );};_dabaa ,_dddgf :=_daa .GetNameVal (_edfbb .Get (1));
if !_dddgf {_ae .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_edfbb .Get (1));
return _cfaa ,nil ;};switch _dabaa {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _agdf > 2{_cfaa .Y ,_ =_daa .GetNumberAsFloat (_daa .TraceToDirectObject (_edfbb .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _agdf > 2{_cfaa .X ,_ =_daa .GetNumberAsFloat (_daa .TraceToDirectObject (_edfbb .Get (2)));
};case "\u0058\u0059\u005a":if _agdf > 4{_cfaa .X ,_ =_daa .GetNumberAsFloat (_daa .TraceToDirectObject (_edfbb .Get (2)));_cfaa .Y ,_ =_daa .GetNumberAsFloat (_daa .TraceToDirectObject (_edfbb .Get (3)));_cfaa .Zoom ,_ =_daa .GetNumberAsFloat (_daa .TraceToDirectObject (_edfbb .Get (4)));
};default:_dabaa ="\u0046\u0069\u0074";};_cfaa .Mode =_dabaa ;return _cfaa ,nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_affce *PdfShading )GetContext ()PdfModel {return _affce ._fbega };

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};func (_cgbef *PdfPage )setContainer (_cafdg *_daa .PdfIndirectObject ){_cafdg .PdfObject =_cgbef ._bbcff ;_cgbef ._cfgb =_cafdg ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_cffb *PdfColorspaceDeviceNAttributes )ToPdfObject ()_daa .PdfObject {_ffdg :=_daa .MakeDict ();if _cffb .Subtype !=nil {_ffdg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cffb .Subtype );};_ffdg .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_cffb .Colorants );
_ffdg .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_cffb .Process );_ffdg .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_cffb .MixingHints );if _cffb ._fged !=nil {_cffb ._fged .PdfObject =_ffdg ;return _cffb ._fged ;
};return _ffdg ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _daa .PdfObject ;FontFamily _daa .PdfObject ;FontStretch _daa .PdfObject ;FontWeight _daa .PdfObject ;Flags _daa .PdfObject ;FontBBox _daa .PdfObject ;ItalicAngle _daa .PdfObject ;Ascent _daa .PdfObject ;Descent _daa .PdfObject ;
Leading _daa .PdfObject ;CapHeight _daa .PdfObject ;XHeight _daa .PdfObject ;StemV _daa .PdfObject ;StemH _daa .PdfObject ;AvgWidth _daa .PdfObject ;MaxWidth _daa .PdfObject ;MissingWidth _daa .PdfObject ;FontFile _daa .PdfObject ;FontFile2 _daa .PdfObject ;
FontFile3 _daa .PdfObject ;CharSet _daa .PdfObject ;_edff int ;_bcae float64 ;*fontFile ;_aafbe *_ec .TtfType ;

// Additional entries for CIDFonts
Style _daa .PdfObject ;Lang _daa .PdfObject ;FD _daa .PdfObject ;CIDSet _daa .PdfObject ;_dacb *_daa .PdfIndirectObject ;};func _eadgd ()_d .Time {_gdggd .Lock ();defer _gdggd .Unlock ();return _gebce };func _bdgdf (_cgff *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_cgff }};


// GetRevisionNumber returns the version of the current Pdf document
func (_gcbd *PdfReader )GetRevisionNumber ()int {return _gcbd ._adgcg .GetRevisionNumber ()};

// ToPdfObject returns the PDF representation of the function.
func (_bebgd *PdfFunctionType2 )ToPdfObject ()_daa .PdfObject {_bgbde :=_daa .MakeDict ();_bgbde .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_daa .MakeInteger (2));_fgfaf :=&_daa .PdfObjectArray {};for _ ,_eaefb :=range _bebgd .Domain {_fgfaf .Append (_daa .MakeFloat (_eaefb ));
};_bgbde .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fgfaf );if _bebgd .Range !=nil {_dacdf :=&_daa .PdfObjectArray {};for _ ,_deddd :=range _bebgd .Range {_dacdf .Append (_daa .MakeFloat (_deddd ));};_bgbde .Set ("\u0052\u0061\u006eg\u0065",_dacdf );
};if _bebgd .C0 !=nil {_gadg :=&_daa .PdfObjectArray {};for _ ,_ecebd :=range _bebgd .C0 {_gadg .Append (_daa .MakeFloat (_ecebd ));};_bgbde .Set ("\u0043\u0030",_gadg );};if _bebgd .C1 !=nil {_bgffdd :=&_daa .PdfObjectArray {};for _ ,_bagcd :=range _bebgd .C1 {_bgffdd .Append (_daa .MakeFloat (_bagcd ));
};_bgbde .Set ("\u0043\u0031",_bgffdd );};_bgbde .Set ("\u004e",_daa .MakeFloat (_bebgd .N ));if _bebgd ._accb !=nil {_bebgd ._accb .PdfObject =_bgbde ;return _bebgd ._accb ;};return _bgbde ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_cbge *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_cefgeb :=NewPdfOutlineItem ();_cefgeb .Title =_daa .MakeEncodedString (_cbge .Title ,true );_cefgeb .Dest =_cbge .Dest .ToPdfObject ();var _afafae []*PdfOutlineItem ;var _gedfcf int64 ;
var _agbdb *PdfOutlineItem ;for _ ,_begcg :=range _cbge .Entries {_bccbce ,_acec :=_begcg .ToPdfOutlineItem ();_bccbce .Parent =&_cefgeb .PdfOutlineTreeNode ;if _agbdb !=nil {_agbdb .Next =&_bccbce .PdfOutlineTreeNode ;_bccbce .Prev =&_agbdb .PdfOutlineTreeNode ;
};_afafae =append (_afafae ,_bccbce );_gedfcf +=_acec ;_agbdb =_bccbce ;};_bgggb :=len (_afafae );_gedfcf +=int64 (_bgggb );if _bgggb > 0{_cefgeb .First =&_afafae [0].PdfOutlineTreeNode ;_cefgeb .Last =&_afafae [_bgggb -1].PdfOutlineTreeNode ;_cefgeb .Count =&_gedfcf ;
};return _cefgeb ,_gedfcf ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_aefad *PdfReader )GetOutlines ()(*Outline ,error ){if _aefad ==nil {return nil ,_ff .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_bdddd :=_aefad .GetOutlineTree ();if _bdddd ==nil {return nil ,_ff .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _gbbfb func (_dgdfc *PdfOutlineTreeNode ,_ebac *[]*OutlineItem );_gbbfb =func (_eadfc *PdfOutlineTreeNode ,_adfec *[]*OutlineItem ){if _eadfc ==nil {return ;};if _eadfc ._eabde ==nil {_ae .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _dbaae *OutlineItem ;if _eaebb ,_gbdab :=_eadfc ._eabde .(*PdfOutlineItem );_gbdab {_gfedca :=_eaebb .Dest ;if (_gfedca ==nil ||_daa .IsNullObject (_gfedca ))&&_eaebb .A !=nil {if _deee ,_ecgad :=_daa .GetDict (_eaebb .A );_ecgad {if _cfbfa ,_dfegeg :=_daa .GetArray (_deee .Get ("\u0044"));
_dfegeg {_gfedca =_cfbfa ;}else {_fffcf ,_dbebb :=_daa .GetString (_deee .Get ("\u0044"));if !_dbebb {return ;};_caefc ,_dbebb :=_aefad ._cgace .Get ("\u004e\u0061\u006de\u0073").(*_daa .PdfObjectReference );if !_dbebb {return ;};_cdddb ,_fbbc :=_aefad ._adgcg .LookupByReference (*_caefc );
if _fbbc !=nil {_ae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_fbbc .Error ());
return ;};_ceffd ,_dbebb :=_cdddb .(*_daa .PdfIndirectObject );if !_dbebb {return ;};_beeeb :=map[_daa .PdfObject ]struct{}{};_fbbc =_aefad .buildNameNodes (_ceffd ,_beeeb );if _fbbc !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_fbbc .Error ());
return ;};for _ccfa :=range _beeeb {_ebfgda ,_fdcbce :=_daa .GetDict (_ccfa );if !_fdcbce {continue ;};_dbge ,_fdcbce :=_daa .GetArray (_ebfgda .Get ("\u004e\u0061\u006de\u0073"));if !_fdcbce {continue ;};for _eabbea ,_bgdeg :=range _dbge .Elements (){switch _bgdeg .(type ){case *_daa .PdfObjectString :if _bgdeg .String ()==_fffcf .String (){if _gbab :=_dbge .Get (_eabbea +1);
_gbab !=nil {if _gcdaga ,_ggaed :=_daa .GetDict (_gbab );_ggaed {_gfedca =_gcdaga .Get ("\u0044");break ;};};};};};};};};};var _eagec OutlineDest ;if _gfedca !=nil &&!_daa .IsNullObject (_gfedca ){if _dcgbc ,_faccf :=_cggga (_gfedca ,_aefad );_faccf ==nil {_eagec =*_dcgbc ;
}else {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_gfedca ,_faccf );
};};_dbaae =NewOutlineItem (_eaebb .Title .Decoded (),_eagec );*_adfec =append (*_adfec ,_dbaae );if _eaebb .Next !=nil {_gbbfb (_eaebb .Next ,_adfec );};};if _eadfc .First !=nil {if _dbaae !=nil {_adfec =&_dbaae .Entries ;};_gbbfb (_eadfc .First ,_adfec );
};};_gbabg :=NewOutline ();_gbbfb (_bdddd ,&_gbabg .Entries );return _gbabg ,nil ;};

// String returns a string representation of the field.
func (_eegb *PdfField )String ()string {if _dbbab ,_bcdab :=_eegb .ToPdfObject ().(*_daa .PdfIndirectObject );_bcdab {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_eegb ._afaec ,_dbbab .PdfObject .String ());};return "";};

// GetContainingPdfObject implements interface PdfModel.
func (_ebbc *PdfAnnotation )GetContainingPdfObject ()_daa .PdfObject {return _ebbc ._gbf };func (_cbfe *LTV )enable (_cbabb ,_bfcbca []*_e .Certificate ,_cgdbeb string )error {_ebfaa ,_eaage ,_gabb :=_cbfe .buildCertChain (_cbabb ,_bfcbca );if _gabb !=nil {return _gabb ;
};_afef ,_gabb :=_cbfe .getCerts (_ebfaa );if _gabb !=nil {return _gabb ;};var _adcac ,_cdggf [][]byte ;if _cbfe .OCSPClient !=nil {_adcac ,_gabb =_cbfe .getOCSPs (_ebfaa ,_eaage );if _gabb !=nil {return _gabb ;};};if _cbfe .CRLClient !=nil {_cdggf ,_gabb =_cbfe .getCRLs (_ebfaa );
if _gabb !=nil {return _gabb ;};};_decee :=_cbfe ._eccgb ;_caegce ,_gabb :=_decee .addCerts (_afef );if _gabb !=nil {return _gabb ;};_fedfc ,_gabb :=_decee .addOCSPs (_adcac );if _gabb !=nil {return _gabb ;};_cfeca ,_gabb :=_decee .addCRLs (_cdggf );if _gabb !=nil {return _gabb ;
};if _cgdbeb !=""{_decee .VRI [_cgdbeb ]=&VRI {Cert :_caegce ,OCSP :_fedfc ,CRL :_cfeca };};_cbfe ._ceaa .SetDSS (_decee );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bcad *PdfAnnotationFreeText )ToPdfObject ()_daa .PdfObject {_bcad .PdfAnnotation .ToPdfObject ();_ebfea :=_bcad ._gbf ;_dab :=_ebfea .PdfObject .(*_daa .PdfObjectDictionary );_bcad .PdfAnnotationMarkup .appendToPdfDictionary (_dab );_dab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_dab .SetIfNotNil ("\u0044\u0041",_bcad .DA );_dab .SetIfNotNil ("\u0051",_bcad .Q );_dab .SetIfNotNil ("\u0052\u0043",_bcad .RC );_dab .SetIfNotNil ("\u0044\u0053",_bcad .DS );_dab .SetIfNotNil ("\u0043\u004c",_bcad .CL );_dab .SetIfNotNil ("\u0049\u0054",_bcad .IT );
_dab .SetIfNotNil ("\u0042\u0045",_bcad .BE );_dab .SetIfNotNil ("\u0052\u0044",_bcad .RD );_dab .SetIfNotNil ("\u0042\u0053",_bcad .BS );_dab .SetIfNotNil ("\u004c\u0045",_bcad .LE );return _ebfea ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_febd FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_febd .Mask ()|fl .Mask ())};func (_feef *DSS )add (_babb *[]*_daa .PdfObjectStream ,_afbf map[string ]*_daa .PdfObjectStream ,_baed [][]byte )([]*_daa .PdfObjectStream ,error ){_bdgb :=make ([]*_daa .PdfObjectStream ,0,len (_baed ));
for _ ,_fabg :=range _baed {_abbgd ,_gaaf :=_bdbbg (_fabg );if _gaaf !=nil {return nil ,_gaaf ;};_ebfcg ,_eceg :=_afbf [string (_abbgd )];if !_eceg {_ebfcg ,_gaaf =_daa .MakeStream (_fabg ,_daa .NewRawEncoder ());if _gaaf !=nil {return nil ,_gaaf ;};_afbf [string (_abbgd )]=_ebfcg ;
*_babb =append (*_babb ,_ebfcg );};_bdgb =append (_bdgb ,_ebfcg );};return _bdgb ,nil ;};func _cddgd ()string {_gdggd .Lock ();defer _gdggd .Unlock ();return _fbcec };type pdfFontType0 struct{fontCommon ;_dbffb *_daa .PdfIndirectObject ;_dfgee _df .TextEncoder ;
Encoding _daa .PdfObject ;DescendantFont *PdfFont ;_faca *_cbg .CMap ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _daa .PdfObject ;FS _daa .PdfObject ;F _daa .PdfObject ;UF _daa .PdfObject ;DOS _daa .PdfObject ;Mac _daa .PdfObject ;Unix _daa .PdfObject ;ID _daa .PdfObject ;V _daa .PdfObject ;EF _daa .PdfObject ;RF _daa .PdfObject ;Desc _daa .PdfObject ;
CI _daa .PdfObject ;_ccde _daa .PdfObject ;};func (_gbeef *PdfReader )resolveReference (_bdcfcc *_daa .PdfObjectReference )(_daa .PdfObject ,bool ,error ){_bbfc ,_ddbfe :=_gbeef ._adgcg .ObjCache [int (_bdcfcc .ObjectNumber )];if !_ddbfe {_ae .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_bdcfcc );
_ecdag ,_cdgff :=_gbeef ._adgcg .LookupByReference (*_bdcfcc );if _cdgff !=nil {return nil ,false ,_cdgff ;};_gbeef ._adgcg .ObjCache [int (_bdcfcc .ObjectNumber )]=_ecdag ;return _ecdag ,false ,nil ;};return _bbfc ,true ,nil ;};func (_fccb *fontFile )loadFromSegments (_cfdce ,_gffe []byte )error {_ae .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_cfdce ),len (_gffe ));
_cbffd :=_fccb .parseASCIIPart (_cfdce );if _cbffd !=nil {return _cbffd ;};_ae .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_fccb );if len (_gffe )==0{return nil ;};_ae .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_fccb );
return nil ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_fece *PdfFont )SubsetRegistered ()error {switch _fefeb :=_fece ._gbbee .(type ){case *pdfFontType0 :_cbdf :=_fefeb .subsetRegistered ();if _cbdf !=nil {_ae .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cbdf );
return _cbdf ;};if _fefeb ._dbffb !=nil {if _fefeb ._dfgee !=nil {_fefeb ._dfgee .ToPdfObject ();};_fefeb .ToPdfObject ();};default:_ae .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_fefeb );
};return nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fcea *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ae .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_ff .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _daa .PdfObject ;NewWindow _daa .PdfObject ;T _daa .PdfObject ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_gbeae *PdfFieldButton )IsPush ()bool {return _gbeae .GetType ()==ButtonTypePush };

// ToPdfObject converts the font to a PDF representation.
func (_ggcb *pdfFontType3 )ToPdfObject ()_daa .PdfObject {if _ggcb ._cgdbe ==nil {_ggcb ._cgdbe =&_daa .PdfIndirectObject {};};_fadbf :=_ggcb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_ggcb ._cgdbe .PdfObject =_fadbf ;if _ggcb .FirstChar !=nil {_fadbf .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_ggcb .FirstChar );
};if _ggcb .LastChar !=nil {_fadbf .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_ggcb .LastChar );};if _ggcb .Widths !=nil {_fadbf .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_ggcb .Widths );};if _ggcb .Encoding !=nil {_fadbf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ggcb .Encoding );
}else if _ggcb ._bcgac !=nil {_efbe :=_ggcb ._bcgac .ToPdfObject ();if _efbe !=nil {_fadbf .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_efbe );};};if _ggcb .FontBBox !=nil {_fadbf .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ggcb .FontBBox );
};if _ggcb .FontMatrix !=nil {_fadbf .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_ggcb .FontMatrix );};if _ggcb .CharProcs !=nil {_fadbf .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_ggcb .CharProcs );};if _ggcb .Resources !=nil {_fadbf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ggcb .Resources );
};return _ggcb ._cgdbe ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_bbef *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bbef .AlternateSpace ==nil {return nil ,_ff .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _bbef .AlternateSpace .ColorToRGB (color );};func _cdaf (_bfcbc *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_bfcbc }};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_caffc *DSS )GetContainingPdfObject ()_daa .PdfObject {return _caffc ._fcbb };

// ToPdfObject implements interface PdfModel.
func (_dee *PdfActionSetOCGState )ToPdfObject ()_daa .PdfObject {_dee .PdfAction .ToPdfObject ();_geb :=_dee ._ad ;_gdg :=_geb .PdfObject .(*_daa .PdfObjectDictionary );_gdg .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeSetOCGState )));_gdg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_dee .State );
_gdg .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_dee .PreserveRB );return _geb ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_gd :=NewPdfAction ();_dbb :=&PdfActionJavaScript {};_dbb .PdfAction =_gd ;_gd .SetContext (_dbb );return _dbb ;};

// String returns the name of the colorspace (DeviceN).
func (_caaff *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _daa .PdfObject ;IC _daa .PdfObject ;BE _daa .PdfObject ;RD _daa .PdfObject ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_ecg :=NewPdfAnnotation ();_cea :=&PdfAnnotationLink {};_cea .PdfAnnotation =_ecg ;_ecg .SetContext (_cea );return _cea ;};func (_cbf *DSS )generateHashMap (_ccgg []*_daa .PdfObjectStream )(map[string ]*_daa .PdfObjectStream ,error ){_gaege :=map[string ]*_daa .PdfObjectStream {};
for _ ,_cdcaa :=range _ccgg {_cbcfa ,_cgbf :=_daa .DecodeStream (_cdcaa );if _cgbf !=nil {return nil ,_cgbf ;};_cegc ,_cgbf :=_bdbbg (_cbcfa );if _cgbf !=nil {return nil ,_cgbf ;};_gaege [string (_cegc )]=_cdcaa ;};return _gaege ,nil ;};

// HasExtGState checks if ExtGState name is available.
func (_cafdda *PdfPage )HasExtGState (name _daa .PdfObjectName )bool {if _cafdda .Resources ==nil {return false ;};if _cafdda .Resources .ExtGState ==nil {return false ;};_cdcafe ,_aecaf :=_daa .TraceToDirectObject (_cafdda .Resources .ExtGState ).(*_daa .PdfObjectDictionary );
if !_aecaf {_ae .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_daa .TraceToDirectObject (_cafdda .Resources .ExtGState ));
return false ;};_faffad :=_cdcafe .Get (name );_dfcae :=_faffad !=nil ;return _dfcae ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_cacg *PdfInfo )ToPdfObject ()_daa .PdfObject {_eaae :=_daa .MakeDict ();_eaae .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_cacg .Title );_eaae .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_cacg .Author );_eaae .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_cacg .Subject );
_eaae .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_cacg .Keywords );_eaae .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_cacg .Creator );_eaae .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_cacg .Producer );
_eaae .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_cacg .Trapped );if _cacg .CreationDate !=nil {_eaae .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cacg .CreationDate .ToPdfObject ());};if _cacg .ModifiedDate !=nil {_eaae .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_cacg .ModifiedDate .ToPdfObject ());
};for _ ,_caafe :=range _cacg ._agbg .Keys (){_eaae .SetIfNotNil (_caafe ,_cacg ._agbg .Get (_caafe ));};return _eaae ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_ddffe *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _ddffe ._gcdde !=nil {return _ddffe ._gcdde ,nil ;};if _ddffe .ColorSpace ==nil {return nil ,nil ;};_gccbc ,_eaedg :=_cfcbd (_ddffe .ColorSpace );if _eaedg !=nil {return nil ,_eaedg ;
};_ddffe ._gcdde =_gccbc ;return _ddffe ._gcdde ,nil ;};func (_gdcad *PdfWriter )flushWriter ()error {if _gdcad ._ccfbf ==nil {_gdcad ._ccfbf =_gdcad ._ccbbdb .Flush ();};return _gdcad ._ccfbf ;};

// Transform rectangle with the supplied matrix.
func (_fbabbdb *PdfRectangle )Transform (transformMatrix _bg .Matrix ){_fbabbdb .Llx ,_fbabbdb .Lly =transformMatrix .Transform (_fbabbdb .Llx ,_fbabbdb .Lly );_fbabbdb .Urx ,_fbabbdb .Ury =transformMatrix .Transform (_fbabbdb .Urx ,_fbabbdb .Ury );_fbabbdb .Normalize ();
};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _daa .PdfObject ;Open _daa .PdfObject ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _daa .PdfObject ;};func _gdca (_eaec *_daa .PdfObjectDictionary )bool {for _ ,_fcdb :=range _eaec .Keys (){if _ ,_abafc :=_feefg [_fcdb .String ()];_abafc {return true ;};};return false ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_agggc *PdfField )Flags ()FieldFlag {var _fcecg FieldFlag ;_dcdab ,_edbg :=_agggc .inherit (func (_dace *PdfField )bool {if _dace .Ff !=nil {_fcecg =FieldFlag (*_dace .Ff );return true ;};return false ;});if _edbg !=nil {_ae .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_edbg );
};if !_dcdab {_ae .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _fcecg ;};

// ToPdfObject returns the PDF representation of the function.
func (_eefdc *PdfFunctionType0 )ToPdfObject ()_daa .PdfObject {if _eefdc ._ggbgd ==nil {_eefdc ._ggbgd =&_daa .PdfObjectStream {};};_fbddc :=_daa .MakeDict ();_fbddc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_daa .MakeInteger (0));
_cgfba :=&_daa .PdfObjectArray {};for _ ,_fbabbd :=range _eefdc .Domain {_cgfba .Append (_daa .MakeFloat (_fbabbd ));};_fbddc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cgfba );_fdbgg :=&_daa .PdfObjectArray {};for _ ,_ffec :=range _eefdc .Range {_fdbgg .Append (_daa .MakeFloat (_ffec ));
};_fbddc .Set ("\u0052\u0061\u006eg\u0065",_fdbgg );_fgdad :=&_daa .PdfObjectArray {};for _ ,_dbggb :=range _eefdc .Size {_fgdad .Append (_daa .MakeInteger (int64 (_dbggb )));};_fbddc .Set ("\u0053\u0069\u007a\u0065",_fgdad );_fbddc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_daa .MakeInteger (int64 (_eefdc .BitsPerSample )));
if _eefdc .Order !=1{_fbddc .Set ("\u004f\u0072\u0064e\u0072",_daa .MakeInteger (int64 (_eefdc .Order )));};_fbddc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_daa .MakeInteger (int64 (len (_eefdc ._bgeef ))));_eefdc ._ggbgd .Stream =_eefdc ._bgeef ;_eefdc ._ggbgd .PdfObjectDictionary =_fbddc ;
return _eefdc ._ggbgd ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_cfecc *PdfReader )GetNamedDestinations ()(_daa .PdfObject ,error ){_eccdd :=_daa .ResolveReference (_cfecc ._cgace .Get ("\u0044\u0065\u0073t\u0073"));if _eccdd ==nil {return nil ,nil ;};if !_cfecc ._gagec {_bcfbe :=_cfecc .traverseObjectData (_eccdd );
if _bcfbe !=nil {return nil ,_bcfbe ;};};return _eccdd ,nil ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_gfaa *PdfField )GetContainingPdfObject ()_daa .PdfObject {return _gfaa ._caaee };func _afba (_fgade []byte )bool {if len (_fgade )< 4{return true ;};for _edgbe :=range _fgade [:4]{_debef :=rune (_edgbe );if !_fe .Is (_fe .ASCII_Hex_Digit ,_debef )&&!_fe .IsSpace (_debef ){return true ;
};};return false ;};

// ParserMetadata gets the parser  metadata.
func (_gbcbg *CompliancePdfReader )ParserMetadata ()_daa .ParserMetadata {if _gbcbg ._cbag ==(_daa .ParserMetadata {}){_gbcbg ._cbag ,_ =_gbcbg ._adgcg .ParserMetadata ();};return _gbcbg ._cbag ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dcfee *PdfShadingType7 )ToPdfObject ()_daa .PdfObject {_dcfee .PdfShading .ToPdfObject ();_gabdf ,_beada :=_dcfee .getShadingDict ();if _beada !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dcfee .BitsPerCoordinate !=nil {_gabdf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dcfee .BitsPerCoordinate );};if _dcfee .BitsPerComponent !=nil {_gabdf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dcfee .BitsPerComponent );
};if _dcfee .BitsPerFlag !=nil {_gabdf .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dcfee .BitsPerFlag );};if _dcfee .Decode !=nil {_gabdf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dcfee .Decode );};if _dcfee .Function !=nil {if len (_dcfee .Function )==1{_gabdf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcfee .Function [0].ToPdfObject ());
}else {_cbfcg :=_daa .MakeArray ();for _ ,_egeg :=range _dcfee .Function {_cbfcg .Append (_egeg .ToPdfObject ());};_gabdf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbfcg );};};return _dcfee ._facgg ;};func (_fdg *PdfReader )newPdfAnnotationSquareFromDict (_egaba *_daa .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_fbfe :=PdfAnnotationSquare {};
_dgag ,_faa :=_fdg .newPdfAnnotationMarkupFromDict (_egaba );if _faa !=nil {return nil ,_faa ;};_fbfe .PdfAnnotationMarkup =_dgag ;_fbfe .BS =_egaba .Get ("\u0042\u0053");_fbfe .IC =_egaba .Get ("\u0049\u0043");_fbfe .BE =_egaba .Get ("\u0042\u0045");_fbfe .RD =_egaba .Get ("\u0052\u0044");
return &_fbfe ,nil ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_aaagb *PdfField )FullName ()(string ,error ){var _fefe _ag .Buffer ;_cfggfd :=[]string {};if _aaagb .T !=nil {_cfggfd =append (_cfggfd ,_aaagb .T .Decoded ());};_dccfg :=map[*PdfField ]bool {};_dccfg [_aaagb ]=true ;_eaacd :=_aaagb .Parent ;for _eaacd !=nil {if _ ,_ebdg :=_dccfg [_eaacd ];
_ebdg {return _fefe .String (),_ff .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _eaacd .T ==nil {return _fefe .String (),_ff .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_cfggfd =append (_cfggfd ,_eaacd .T .Decoded ());_dccfg [_eaacd ]=true ;_eaacd =_eaacd .Parent ;};for _cdeb :=len (_cfggfd )-1;_cdeb >=0;_cdeb --{_fefe .WriteString (_cfggfd [_cdeb ]);if _cdeb > 0{_fefe .WriteString ("\u002e");};};return _fefe .String (),nil ;
};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_dcff *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _ecbd []*PdfOutlineTreeNode ;var _gacc []string ;var _faeb func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_faeb =func (_edead *PdfOutlineTreeNode ,_ecgd *[]*PdfOutlineTreeNode ,_bffe *[]string ,_edcef int ){if _edead ==nil {return ;
};if _edead ._eabde ==nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_adagb ,_begbe :=_edead ._eabde .(*PdfOutlineItem );if _begbe {*_ecgd =append (*_ecgd ,&_adagb .PdfOutlineTreeNode );
_ceccc :=_db .Repeat ("\u0020",_edcef *2)+_adagb .Title .Decoded ();*_bffe =append (*_bffe ,_ceccc );};if _edead .First !=nil {_egfdgd :=_db .Repeat ("\u0020",_edcef *2)+"\u002b";*_bffe =append (*_bffe ,_egfdgd );_faeb (_edead .First ,_ecgd ,_bffe ,_edcef +1);
};if _begbe &&_adagb .Next !=nil {_faeb (_adagb .Next ,_ecgd ,_bffe ,_edcef );};};_faeb (_dcff ._bgceg ,&_ecbd ,&_gacc ,0);return _ecbd ,_gacc ,nil ;};func _bgcdc (_deddc *_daa .PdfObjectDictionary )(*PdfShadingPattern ,error ){_fadd :=&PdfShadingPattern {};
_afcaf :=_deddc .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _afcaf ==nil {_ae .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fdgff ,_dfeged :=_ecgfa (_afcaf );
if _dfeged !=nil {_ae .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_dfeged );return nil ,_dfeged ;};_fadd .Shading =_fdgff ;if _efaeb :=_deddc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_efaeb !=nil {_cfgeb ,_acccc :=_efaeb .(*_daa .PdfObjectArray );if !_acccc {_ae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efaeb );
return nil ,_daa .ErrTypeError ;};_fadd .Matrix =_cfgeb ;};if _adage :=_deddc .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_adage !=nil {_fadd .ExtGState =_adage ;};return _fadd ,nil ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_acccf *PdfField )IsTerminal ()bool {return len (_acccf .Kids )==0};

// Evaluate runs the function on the passed in slice and returns the results.
func (_dbef *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_dbef .NumInputs {_ae .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_ff .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _dbef ._bgacd ==nil {_efcff :=_dbef .processSamples ();if _efcff !=nil {return nil ,_efcff ;};};_cbgb :=_dbef .Encode ;if _cbgb ==nil {_cbgb =[]float64 {};
for _daegc :=0;_daegc < len (_dbef .Size );_daegc ++{_cbgb =append (_cbgb ,0);_cbgb =append (_cbgb ,float64 (_dbef .Size [_daegc ]-1));};};_eebcb :=_dbef .Decode ;if _eebcb ==nil {_eebcb =_dbef .Range ;};_dabac :=make ([]int ,len (x ));for _ddaaf :=0;_ddaaf < len (x );
_ddaaf ++{_gccf :=x [_ddaaf ];_bdda :=_ce .Min (_ce .Max (_gccf ,_dbef .Domain [2*_ddaaf ]),_dbef .Domain [2*_ddaaf +1]);_bdag :=_ac .LinearInterpolate (_bdda ,_dbef .Domain [2*_ddaaf ],_dbef .Domain [2*_ddaaf +1],_cbgb [2*_ddaaf ],_cbgb [2*_ddaaf +1]);
_ebcba :=_ce .Min (_ce .Max (_bdag ,0),float64 (_dbef .Size [_ddaaf ]-1));_efeb :=int (_ce .Floor (_ebcba +0.5));if _efeb < 0{_efeb =0;}else if _efeb > _dbef .Size [_ddaaf ]{_efeb =_dbef .Size [_ddaaf ]-1;};_dabac [_ddaaf ]=_efeb ;};_cgcdff :=_dabac [0];
for _dfgfb :=1;_dfgfb < _dbef .NumInputs ;_dfgfb ++{_becg :=_dabac [_dfgfb ];for _caagg :=0;_caagg < _dfgfb ;_caagg ++{_becg *=_dbef .Size [_caagg ];};_cgcdff +=_becg ;};_cgcdff *=_dbef .NumOutputs ;var _bgbba []float64 ;for _dbfeg :=0;_dbfeg < _dbef .NumOutputs ;
_dbfeg ++{_gece :=_cgcdff +_dbfeg ;if _gece >=len (_dbef ._bgacd ){_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_gdbfb :=_dbef ._bgacd [_gece ];_cbgfe :=_ac .LinearInterpolate (float64 (_gdbfb ),0,_ce .Pow (2,float64 (_dbef .BitsPerSample )),_eebcb [2*_dbfeg ],_eebcb [2*_dbfeg +1]);_fgcde :=_ce .Min (_ce .Max (_cbgfe ,_dbef .Range [2*_dbfeg ]),_dbef .Range [2*_dbfeg +1]);
_bgbba =append (_bgbba ,_fgcde );};return _bgbba ,nil ;};func (_bgef *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};func (_gdbgf *fontFile )parseASCIIPart (_defgb []byte )error {if len (_defgb )< 2||string (_defgb [:2])!="\u0025\u0021"{return _ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_cefeg ,_edcfd ,_agbdc :=_afce (_defgb );if _agbdc !=nil {return _agbdc ;};_fdfda :=_ecefd (_cefeg );_gdbgf ._edde =_fdfda ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _gdbgf ._edde ==""{_ae .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _edcfd !=""{_fbfae ,_ccfd :=_ggbaa (_edcfd );if _ccfd !=nil {return _ccfd ;};_fegdde ,_ccfd :=_df .NewCustomSimpleTextEncoder (_fbfae ,nil );if _ccfd !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_ccfd );
return nil ;};_gdbgf ._dgfad =_fegdde ;};return nil ;};func (_fdedc *PdfReader )newPdfOutlineItemFromIndirectObject (_eefdf *_daa .PdfIndirectObject )(*PdfOutlineItem ,error ){_edfbe ,_adae :=_eefdf .PdfObject .(*_daa .PdfObjectDictionary );if !_adae {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_adbc :=NewPdfOutlineItem ();_abcb :=_edfbe .Get ("\u0054\u0069\u0074l\u0065");if _abcb ==nil {return nil ,_c .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_adbdfg ,_ffdb :=_daa .GetString (_abcb );if !_ffdb {return nil ,_c .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_abcb );};_adbc .Title =_adbdfg ;if _gaagg :=_edfbe .Get ("\u0043\u006f\u0075n\u0074");
_gaagg !=nil {_bfecc ,_eaafb :=_gaagg .(*_daa .PdfObjectInteger );if !_eaafb {return nil ,_c .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_gaagg );};_efgc :=int64 (*_bfecc );
_adbc .Count =&_efgc ;};if _geea :=_edfbe .Get ("\u0044\u0065\u0073\u0074");_geea !=nil {_adbc .Dest =_daa .ResolveReference (_geea );if !_fdedc ._gagec {_bdde :=_fdedc .traverseObjectData (_adbc .Dest );if _bdde !=nil {return nil ,_bdde ;};};};if _afgd :=_edfbe .Get ("\u0041");
_afgd !=nil {_adbc .A =_daa .ResolveReference (_afgd );if !_fdedc ._gagec {_egec :=_fdedc .traverseObjectData (_adbc .A );if _egec !=nil {return nil ,_egec ;};};};if _bgbf :=_edfbe .Get ("\u0053\u0045");_bgbf !=nil {_adbc .SE =nil ;};if _caaa :=_edfbe .Get ("\u0043");
_caaa !=nil {_adbc .C =_daa .ResolveReference (_caaa );};if _cedaf :=_edfbe .Get ("\u0046");_cedaf !=nil {_adbc .F =_daa .ResolveReference (_cedaf );};return _adbc ,nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _daa .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cfe *PdfAnnotationWidget )ToPdfObject ()_daa .PdfObject {_cfe .PdfAnnotation .ToPdfObject ();_feba :=_cfe ._gbf ;_ffge :=_feba .PdfObject .(*_daa .PdfObjectDictionary );if _cfe ._ebd {return _feba ;};_cfe ._ebd =true ;_ffge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_ffge .SetIfNotNil ("\u0048",_cfe .H );_ffge .SetIfNotNil ("\u004d\u004b",_cfe .MK );_ffge .SetIfNotNil ("\u0041",_cfe .A );_ffge .SetIfNotNil ("\u0041\u0041",_cfe .AA );_ffge .SetIfNotNil ("\u0042\u0053",_cfe .BS );_caffd :=_cfe .Parent ;if _cfe ._gad !=nil {if _cfe ._gad ._caaee ==_cfe ._gbf {_cfe ._gad .ToPdfObject ();
};_caffd =_cfe ._gad .GetContainingPdfObject ();};if _caffd !=_feba {_ffge .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_caffd );};_cfe ._ebd =false ;return _feba ;};func (_ceg *PdfReader )newPdfActionNamedFromDict (_gega *_daa .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_gega .Get ("\u004e")},nil ;
};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_daa .PdfIndirectObject )*PdfOutlineItem {_egcdf :=PdfOutlineItem {};_egcdf ._eabde =&_egcdf ;_egcdf .Title =_daa .MakeString (title );_gfab :=_daa .MakeArray ();_gfab .Append (page );_gfab .Append (_daa .MakeName ("\u0046\u0069\u0074"));
_egcdf .Dest =_gfab ;return &_egcdf ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_effbd *_daa .PdfObjectDictionary ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _daa .PdfObject ;MK _daa .PdfObject ;A _daa .PdfObject ;AA _daa .PdfObject ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_bbegb *_daa .PdfObjectDictionary ;Type *_daa .PdfObjectName ;TransformMethod *_daa .PdfObjectName ;TransformParams _daa .PdfObject ;Data _daa .PdfObject ;DigestMethod *_daa .PdfObjectName ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _daa .PdfObject )(*PdfInfo ,error ){var _cacc PdfInfo ;_begb ,_bcab :=obj .(*_daa .PdfObjectDictionary );if !_bcab {return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_ecbb :=range _begb .Keys (){switch _ecbb {case "\u0054\u0069\u0074l\u0065":_cacc .Title ,_ =_daa .GetString (_begb .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_cacc .Author ,_ =_daa .GetString (_begb .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_cacc .Subject ,_ =_daa .GetString (_begb .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_cacc .Keywords ,_ =_daa .GetString (_begb .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_cacc .Creator ,_ =_daa .GetString (_begb .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_cacc .Producer ,_ =_daa .GetString (_begb .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_cacc .Trapped ,_ =_daa .GetName (_begb .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _fdgdg ,_ddbd :=_daa .GetString (_begb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_ddbd &&_fdgdg .String ()!=""{_fgfgc ,_gdga :=NewPdfDate (_fdgdg .String ());if _gdga !=nil {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_gdga );
};_cacc .CreationDate =&_fgfgc ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _eedb ,_fbeb :=_daa .GetString (_begb .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_fbeb &&_eedb .String ()!=""{_daagb ,_bfecg :=NewPdfDate (_eedb .String ());if _bfecg !=nil {return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_bfecg );
};_cacc .ModifiedDate =&_daagb ;};default:_deaa ,_ :=_daa .GetString (_begb .Get (_ecbb ));if _cacc ._agbg ==nil {_cacc ._agbg =_daa .MakeDict ();};_cacc ._agbg .Set (_ecbb ,_deaa );};};return &_cacc ,nil ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _daa .PdfObject ;BS _daa .PdfObject ;LE _daa .PdfObject ;IC _daa .PdfObject ;LL _daa .PdfObject ;LLE _daa .PdfObject ;Cap _daa .PdfObject ;IT _daa .PdfObject ;LLO _daa .PdfObject ;CP _daa .PdfObject ;
Measure _daa .PdfObject ;CO _daa .PdfObject ;};

// ToPdfObject implements model.PdfModel interface.
func (_fbcgb *PdfOutputIntent )ToPdfObject ()_daa .PdfObject {if _fbcgb ._effbd ==nil {_fbcgb ._effbd =_daa .MakeDict ();};_efbcd :=_fbcgb ._effbd ;if _fbcgb .Type !=""{_efbcd .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName (_fbcgb .Type ));};_efbcd .Set ("\u0053",_daa .MakeName (_fbcgb .S .String ()));
if _fbcgb .OutputCondition !=""{_efbcd .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_daa .MakeString (_fbcgb .OutputCondition ));};_efbcd .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_daa .MakeString (_fbcgb .OutputConditionIdentifier ));
_efbcd .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_daa .MakeString (_fbcgb .RegistryName ));if _fbcgb .Info !=""{_efbcd .Set ("\u0049\u006e\u0066\u006f",_daa .MakeString (_fbcgb .Info ));};if len (_fbcgb .DestOutputProfile )!=0{_dfecf ,_fegcb :=_daa .MakeStream (_fbcgb .DestOutputProfile ,_daa .NewFlateEncoder ());
if _fegcb !=nil {_ae .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fegcb );
};_dfecf .PdfObjectDictionary .Set ("\u004e",_daa .MakeInteger (int64 (_fbcgb .ColorComponents )));_dagdd :=make ([]float64 ,_fbcgb .ColorComponents *2);for _gagdc :=0;_gagdc < _fbcgb .ColorComponents *2;_gagdc ++{_gdgdc :=0.0;if _gagdc %2!=0{_gdgdc =1.0;
};_dagdd [_gagdc ]=_gdgdc ;};_dfecf .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_daa .MakeArrayFromFloats (_dagdd ));_efbcd .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_dfecf );};
return _efbcd ;};func (_bfcbcg *PdfReader )loadPerms ()(*Permissions ,error ){if _gadc :=_bfcbcg ._cgace .Get ("\u0050\u0065\u0072m\u0073");_gadc !=nil {if _agdfe ,_cdefgg :=_daa .GetDict (_gadc );_cdefgg {_ffbc :=_agdfe .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");
if _ffbc ==nil {return nil ,nil ;};if _dbdfe ,_fbbae :=_daa .GetIndirect (_ffbc );_fbbae {_gggac ,_dfdd :=_bfcbcg .newPdfSignatureFromIndirect (_dbdfe );if _dfdd !=nil {return nil ,_dfdd ;};return NewPermissions (_gggac ),nil ;};return nil ,_c .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");
};return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");};return nil ,nil ;};

// R returns the value of the red component of the color.
func (_bdcc *PdfColorDeviceRGB )R ()float64 {return _bdcc [0]};

// GetPageDict converts the Page to a PDF object dictionary.
func (_gffg *PdfPage )GetPageDict ()*_daa .PdfObjectDictionary {_cfbaf :=_gffg ._bbcff ;_cfbaf .Clear ();_cfbaf .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName ("\u0050\u0061\u0067\u0065"));_cfbaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gffg .Parent );
if _gffg .LastModified !=nil {_cfbaf .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gffg .LastModified .ToPdfObject ());};if _gffg .Resources !=nil {_cfbaf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gffg .Resources .ToPdfObject ());
};if _gffg .CropBox !=nil {_cfbaf .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_gffg .CropBox .ToPdfObject ());};if _gffg .MediaBox !=nil {_cfbaf .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_gffg .MediaBox .ToPdfObject ());};if _gffg .BleedBox !=nil {_cfbaf .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_gffg .BleedBox .ToPdfObject ());
};if _gffg .TrimBox !=nil {_cfbaf .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_gffg .TrimBox .ToPdfObject ());};if _gffg .ArtBox !=nil {_cfbaf .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_gffg .ArtBox .ToPdfObject ());};_cfbaf .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_gffg .BoxColorInfo );
_cfbaf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gffg .Contents );if _gffg .Rotate !=nil {_cfbaf .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_daa .MakeInteger (*_gffg .Rotate ));};_cfbaf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gffg .Group );
_cfbaf .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_gffg .Thumb );_cfbaf .SetIfNotNil ("\u0042",_gffg .B );_cfbaf .SetIfNotNil ("\u0044\u0075\u0072",_gffg .Dur );_cfbaf .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gffg .Trans );_cfbaf .SetIfNotNil ("\u0041\u0041",_gffg .AA );
_cfbaf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gffg .Metadata );_cfbaf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gffg .PieceInfo );_cfbaf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gffg .StructParents );
_cfbaf .SetIfNotNil ("\u0049\u0044",_gffg .ID );_cfbaf .SetIfNotNil ("\u0050\u005a",_gffg .PZ );_cfbaf .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_gffg .SeparationInfo );_cfbaf .SetIfNotNil ("\u0054\u0061\u0062\u0073",_gffg .Tabs );
_cfbaf .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_gffg .TemplateInstantiated );_cfbaf .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_gffg .PresSteps );_cfbaf .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_gffg .UserUnit );
_cfbaf .SetIfNotNil ("\u0056\u0050",_gffg .VP );if _gffg ._febda !=nil {_ggead :=_daa .MakeArray ();for _ ,_dgagf :=range _gffg ._febda {if _dagbf :=_dgagf .GetContext ();_dagbf !=nil {_ggead .Append (_dagbf .ToPdfObject ());}else {_ggead .Append (_dgagf .ToPdfObject ());
};};if _ggead .Len ()> 0{_cfbaf .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_ggead );};}else if _gffg .Annots !=nil {_cfbaf .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_gffg .Annots );};return _cfbaf ;};func (_fafff *PdfWriter )addObjects (_cebe _daa .PdfObject )error {_ae .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _cadeb ,_befdaa :=_cebe .(*_daa .PdfIndirectObject );_befdaa {_ae .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_ae .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_cebe ,_cadeb );_ae .Log .Trace ("\u002d\u0020\u0025\u0073",_cadeb .PdfObject );
if _fafff .addObject (_cadeb ){_afdaa :=_fafff .addObjects (_cadeb .PdfObject );if _afdaa !=nil {return _afdaa ;};};return nil ;};if _ffccaa ,_beafd :=_cebe .(*_daa .PdfObjectStream );_beafd {_ae .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_ae .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_cebe ,_cebe );
if _fafff .addObject (_ffccaa ){_aeef :=_fafff .addObjects (_ffccaa .PdfObjectDictionary );if _aeef !=nil {return _aeef ;};};return nil ;};if _bcff ,_ddccf :=_cebe .(*_daa .PdfObjectDictionary );_ddccf {_ae .Log .Trace ("\u0044\u0069\u0063\u0074");_ae .Log .Trace ("\u002d\u0020\u0025\u0073",_cebe );
for _ ,_eggad :=range _bcff .Keys (){_cdcafeb :=_bcff .Get (_eggad );if _bdfba ,_ccddc :=_cdcafeb .(*_daa .PdfObjectReference );_ccddc {_cdcafeb =_bdfba .Resolve ();_bcff .Set (_eggad ,_cdcafeb );};if _eggad !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _adaaa :=_fafff .addObjects (_cdcafeb );
_adaaa !=nil {return _adaaa ;};}else {if _ ,_fbdbb :=_cdcafeb .(*_daa .PdfObjectNull );_fbdbb {continue ;};if _gddd :=_fafff .hasObject (_cdcafeb );!_gddd {_ae .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_cdcafeb ,_cdcafeb ,_cdcafeb );
_fafff ._ffacb [_cdcafeb ]=append (_fafff ._ffacb [_cdcafeb ],_bcff );};};};return nil ;};if _aegbg ,_dccdc :=_cebe .(*_daa .PdfObjectArray );_dccdc {_ae .Log .Trace ("\u0041\u0072\u0072a\u0079");_ae .Log .Trace ("\u002d\u0020\u0025\u0073",_cebe );if _aegbg ==nil {return _ff .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _cdcg ,_egaab :=range _aegbg .Elements (){if _eafad ,_bcbed :=_egaab .(*_daa .PdfObjectReference );_bcbed {_egaab =_eafad .Resolve ();_aegbg .Set (_cdcg ,_egaab );};if _febcd :=_fafff .addObjects (_egaab );_febcd !=nil {return _febcd ;};};return nil ;
};if _ ,_bbebc :=_cebe .(*_daa .PdfObjectReference );_bbebc {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_cebe );
return _ff .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bdefg pdfFontSimple )GetRuneMetrics (r rune )(_ec .CharMetrics ,bool ){if _bdefg ._cgdf !=nil {_fgcdc ,_egcfb :=_bdefg ._cgdf .Read (r );if _egcfb {return _fgcdc ,true ;};};_cfdfc :=_bdefg .Encoder ();if _cfdfc ==nil {_ae .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_bdefg );
return _ec .CharMetrics {},false ;};_gdfed ,_abdaa :=_cfdfc .RuneToCharcode (r );if !_abdaa {if r !=' '{_ae .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_bdefg );
};return _ec .CharMetrics {},false ;};_ffbgf ,_eadgc :=_bdefg .GetCharMetrics (_gdfed );return _ffbgf ,_eadgc ;};func (_efaa *PdfReader )newPdfActionGotoFromDict (_edf *_daa .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_edf .Get ("\u0044")},nil ;
};var _feefg =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func (_ebggc *pdfCIDFontType2 )baseFields ()*fontCommon {return &_ebggc .fontCommon };

// Subtype returns the font's "Subtype" field.
func (_fcgca *PdfFont )Subtype ()string {_gage :=_fcgca .baseFields ()._fbafe ;if _affag ,_bccda :=_fcgca ._gbbee .(*pdfFontType0 );_bccda {_gage =_gage +"\u003a"+_affag .DescendantFont .Subtype ();};return _gage ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_gfgee *PdfReader )CheckAccessRights (password []byte )(bool ,_eef .Permissions ,error ){return _gfgee ._adgcg .CheckAccessRights (password );};func _afce (_cbgfg []byte )(_edcca ,_ddgab string ,_acdbb error ){_ae .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_cbgfg ));
_fbcac :=_dabc .FindIndex (_cbgfg );if _fbcac ==nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_daa .ErrTypeError ;};_edda :=_fbcac [1];_bdabc :=_db .Index (string (_cbgfg [_edda :]),_dfdgf );if _bdabc < 0{_edcca =string (_cbgfg [_edda :]);return _edcca ,"",nil ;};_gccg :=_edda +_bdabc ;_edcca =string (_cbgfg [_edda :_gccg ]);_cgfbb :=_gccg ;
_bdabc =_db .Index (string (_cbgfg [_cgfbb :]),_bdddf );if _bdabc < 0{_ae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_acdbb );
return "","",_daa .ErrTypeError ;};_afgfb :=_cgfbb +_bdabc ;_ddgab =string (_cbgfg [_cgfbb :_afgfb ]);return _edcca ,_ddgab ,nil ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_abaf *PdfAppender )UpdatePage (page *PdfPage ){_abaf .updateObjectsDeep (page .ToPdfObject (),nil )};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_gedf *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cebg :=vals [0];if _cebg < 0.0||_cebg > 1.0{_ae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cebg );
return nil ,ErrColorOutOfRange ;};_daac :=NewPdfColorCalGray (_cebg );return _daac ,nil ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_aacdab *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _acecg []*PdfField ;_gdfb :=map[*_daa .PdfIndirectObject ]struct{}{};for _ ,_gfef :=range _aacdab .PageList {_cdab ,_afccc :=_gfef .GetAnnotations ();if _afccc !=nil {return _afccc ;
};for _ ,_gbded :=range _cdab {var _ddace *PdfField ;switch _ecace :=_gbded .GetContext ().(type ){case *PdfAnnotationWidget :if _ecace ._gad !=nil {_ddace =_ecace ._gad ;break ;};if _edcdg ,_cegde :=_daa .GetIndirect (_ecace .Parent );_cegde {_ddace ,_afccc =_aacdab .newPdfFieldFromIndirectObject (_edcdg ,nil );
if _afccc ==nil {break ;};_ae .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_edcdg ,_afccc );
};if _ecace ._gbf !=nil {_ddace ,_afccc =_aacdab .newPdfFieldFromIndirectObject (_ecace ._gbf ,nil );if _afccc ==nil {break ;};_ae .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ecace ._gbf ,_afccc );
};};if _ddace ==nil {continue ;};if _ ,_faaa :=_gdfb [_ddace ._caaee ];_faaa {continue ;};_gdfb [_ddace ._caaee ]=struct{}{};_acecg =append (_acecg ,_ddace );};};if len (_acecg )==0{return nil ;};if _aacdab .AcroForm ==nil {_aacdab .AcroForm =NewPdfAcroForm ();
};_aacdab .AcroForm .Fields =&_acecg ;return nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _daa .PdfObject ;T3DV _daa .PdfObject ;T3DA _daa .PdfObject ;T3DI _daa .PdfObject ;T3DB _daa .PdfObject ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_daeb *PdfFontDescriptor )ToPdfObject ()_daa .PdfObject {_acbb :=_daa .MakeDict ();if _daeb ._dacb ==nil {_daeb ._dacb =&_daa .PdfIndirectObject {};};_daeb ._dacb .PdfObject =_acbb ;_acbb .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _daeb .FontName !=nil {_acbb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_daeb .FontName );};if _daeb .FontFamily !=nil {_acbb .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_daeb .FontFamily );};if _daeb .FontStretch !=nil {_acbb .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_daeb .FontStretch );
};if _daeb .FontWeight !=nil {_acbb .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_daeb .FontWeight );};if _daeb .Flags !=nil {_acbb .Set ("\u0046\u006c\u0061g\u0073",_daeb .Flags );};if _daeb .FontBBox !=nil {_acbb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_daeb .FontBBox );
};if _daeb .ItalicAngle !=nil {_acbb .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_daeb .ItalicAngle );};if _daeb .Ascent !=nil {_acbb .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_daeb .Ascent );};if _daeb .Descent !=nil {_acbb .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_daeb .Descent );
};if _daeb .Leading !=nil {_acbb .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_daeb .Leading );};if _daeb .CapHeight !=nil {_acbb .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_daeb .CapHeight );};if _daeb .XHeight !=nil {_acbb .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_daeb .XHeight );
};if _daeb .StemV !=nil {_acbb .Set ("\u0053\u0074\u0065m\u0056",_daeb .StemV );};if _daeb .StemH !=nil {_acbb .Set ("\u0053\u0074\u0065m\u0048",_daeb .StemH );};if _daeb .AvgWidth !=nil {_acbb .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_daeb .AvgWidth );
};if _daeb .MaxWidth !=nil {_acbb .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_daeb .MaxWidth );};if _daeb .MissingWidth !=nil {_acbb .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_daeb .MissingWidth );};if _daeb .FontFile !=nil {_acbb .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_daeb .FontFile );
};if _daeb .FontFile2 !=nil {_acbb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_daeb .FontFile2 );};if _daeb .FontFile3 !=nil {_acbb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_daeb .FontFile3 );};if _daeb .CharSet !=nil {_acbb .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_daeb .CharSet );
};if _daeb .Style !=nil {_acbb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_daeb .FontName );};if _daeb .Lang !=nil {_acbb .Set ("\u004c\u0061\u006e\u0067",_daeb .Lang );};if _daeb .FD !=nil {_acbb .Set ("\u0046\u0044",_daeb .FD );};if _daeb .CIDSet !=nil {_acbb .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_daeb .CIDSet );
};return _daeb ._dacb ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_ceca *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_bedaf ,_ccce :=color .(*PdfColorDeviceCMYK );if !_ccce {_ae .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_caeg :=_bedaf .C ();_aeab :=_bedaf .M ();_gefd :=_bedaf .Y ();_ceea :=_bedaf .K ();_caeg =_caeg *(1-_ceea )+_ceea ;_aeab =_aeab *(1-_ceea )+_ceea ;
_gefd =_gefd *(1-_ceea )+_ceea ;_aeff :=1-_caeg ;_adbd :=1-_aeab ;_bccdd :=1-_gefd ;return NewPdfColorDeviceRGB (_aeff ,_adbd ,_bccdd ),nil ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _daa .PdfObject ;IsMap _daa .PdfObject ;};func _fgee (_bggb map[_ec .GID ]int ,_aaegg uint16 )*_daa .PdfObjectArray {_ecedd :=&_daa .PdfObjectArray {};_bdcgg :=_ec .GID (_aaegg );for _gbgfg :=_ec .GID (0);_gbgfg < _bdcgg ;
{_fdec ,_bbec :=_bggb [_gbgfg ];if !_bbec {_gbgfg ++;continue ;};_dcceb :=_gbgfg ;for _dcgaa :=_dcceb +1;_dcgaa < _bdcgg ;_dcgaa ++{if _ffcb ,_ffgbe :=_bggb [_dcgaa ];!_ffgbe ||_fdec !=_ffcb {break ;};_dcceb =_dcgaa ;};_ecedd .Append (_daa .MakeInteger (int64 (_gbgfg )));
_ecedd .Append (_daa .MakeInteger (int64 (_dcceb )));_ecedd .Append (_daa .MakeInteger (int64 (_fdec )));_gbgfg =_dcceb +1;};return _ecedd ;};func _bbfegb (_aafba *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_aafba }};func (_cab *PdfReader )newPdfAnnotationInkFromDict (_bbbg *_daa .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_deb :=PdfAnnotationInk {};
_geba ,_cfd :=_cab .newPdfAnnotationMarkupFromDict (_bbbg );if _cfd !=nil {return nil ,_cfd ;};_deb .PdfAnnotationMarkup =_geba ;_deb .InkList =_bbbg .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_deb .BS =_bbbg .Get ("\u0042\u0053");return &_deb ,nil ;
};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_bfeba *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _bfeba .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// String returns a string that describes `font`.
func (_gafcb *PdfFont )String ()string {_badf :="";if _gafcb ._gbbee .Encoder ()!=nil {_badf =_gafcb ._gbbee .Encoder ().String ();};return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_gafcb ._gbbee ,_gafcb .baseFields ().coreString (),_badf );
};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _daa .PdfObject )(*PdfFont ,error ){return _fegag (fontObj ,true )};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_daa .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_bgea *_daa .PdfIndirectObject ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_afafa *PdfFont )BytesToCharcodes (data []byte )[]_df .CharCode {_ae .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _cfcf ,_bfcbe :=_afafa ._gbbee .(*pdfFontType0 );_bfcbe &&_cfcf ._faca !=nil {if _eeba ,_ecgca :=_cfcf .bytesToCharcodes (data );_ecgca {return _eeba ;};};var (_dafb =make ([]_df .CharCode ,0,len (data )+len (data )%2);_cedb =_afafa .baseFields (););
if _cedb ._efedc !=nil {if _dfcf ,_bdcf :=_cedb ._efedc .BytesToCharcodes (data );_bdcf {for _ ,_dddda :=range _dfcf {_dafb =append (_dafb ,_df .CharCode (_dddda ));};return _dafb ;};};if _cedb .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _dcabf :=0;_dcabf < len (data );_dcabf +=2{_dgeff :=uint16 (data [_dcabf ])<<8|uint16 (data [_dcabf +1]);_dafb =append (_dafb ,_df .CharCode (_dgeff ));};}else {for _ ,_cabf :=range data {_dafb =append (_dafb ,_df .CharCode (_cabf ));
};};return _dafb ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_aega *PdfOutlineTreeNode )GetContext ()PdfModel {if _cdgfc ,_bgcg :=_aega ._eabde .(*PdfOutline );_bgcg {return _cdgfc ;};if _agda ,_efbce :=_aega ._eabde .(*PdfOutlineItem );_efbce {return _agda ;};_ae .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_feaf *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ff .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_gbea :=field .V ;if _gbea ==nil {return _ff .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_eafc :=pageNum -1;
if _eafc < 0||_eafc > len (_feaf ._ffda )-1{return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_bfec :=_feaf .Reader .PageList [_eafc ];field .P =_bfec .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_daa .MakeString (_c .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_bfec .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _feaf ._bgcb ==_feaf ._egaf .AcroForm {_feaf ._bgcb =_feaf .Reader .AcroForm ;};_adgc :=_feaf ._bgcb ;if _adgc ==nil {_adgc =NewPdfAcroForm ();};_adgc .SigFlags =_daa .MakeInteger (3);
_begc :=append (_adgc .AllFields (),field .PdfField );_adgc .Fields =&_begc ;_feaf .ReplaceAcroForm (_adgc );_feaf .UpdatePage (_bfec );_feaf ._ffda [_eafc ]=_bfec ;if _ ,_deac :=field .V .GetDocMDPPermission ();_deac {_feaf ._ddda =NewPermissions (field .V );
};return nil ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_eedbg *OutlineItem )ToPdfObject ()_daa .PdfObject {_gfce ,_ :=_eedbg .ToPdfOutlineItem ();return _gfce .ToPdfObject ();};func (_gcbbf *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _gcbbf ._eccc ==nil &&_gcbbf .DescendantFont !=nil {return _gcbbf .DescendantFont .FontDescriptor ();
};return _gcbbf ._eccc ;};

// ToPdfObject implements interface PdfModel.
func (_bcc *PdfActionRendition )ToPdfObject ()_daa .PdfObject {_bcc .PdfAction .ToPdfObject ();_dbbc :=_bcc ._ad ;_efe :=_dbbc .PdfObject .(*_daa .PdfObjectDictionary );_efe .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeRendition )));_efe .SetIfNotNil ("\u0052",_bcc .R );
_efe .SetIfNotNil ("\u0041\u004e",_bcc .AN );_efe .SetIfNotNil ("\u004f\u0050",_bcc .OP );_efe .SetIfNotNil ("\u004a\u0053",_bcc .JS );return _dbbc ;};

// ToPdfObject implements interface PdfModel.
func (_faffe *PdfAnnotationPolyLine )ToPdfObject ()_daa .PdfObject {_faffe .PdfAnnotation .ToPdfObject ();_bcefe :=_faffe ._gbf ;_abe :=_bcefe .PdfObject .(*_daa .PdfObjectDictionary );_faffe .PdfAnnotationMarkup .appendToPdfDictionary (_abe );_abe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_abe .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_faffe .Vertices );_abe .SetIfNotNil ("\u004c\u0045",_faffe .LE );_abe .SetIfNotNil ("\u0042\u0053",_faffe .BS );_abe .SetIfNotNil ("\u0049\u0043",_faffe .IC );_abe .SetIfNotNil ("\u0042\u0045",_faffe .BE );
_abe .SetIfNotNil ("\u0049\u0054",_faffe .IT );_abe .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_faffe .Measure );return _bcefe ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _d .Time ){_gdggd .Lock ();defer _gdggd .Unlock ();_bbcbe =modifiedDate ;};func (_deada *PdfSignature )extractChainFromPKCS7 ()([]*_e .Certificate ,error ){_gbecf ,_adbgb :=_ee .Parse (_deada .Contents .Bytes ());if _adbgb !=nil {return nil ,_adbgb ;
};return _gbecf .Certificates ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_begcf pdfCIDFontType2 )GetCharMetrics (code _df .CharCode )(_ec .CharMetrics ,bool ){if _aefdb ,_aabg :=_begcf ._gfagb [code ];_aabg {return _ec .CharMetrics {Wx :_aefdb },true ;};_bffba :=rune (code );_dcfg ,_dbffbc :=_begcf ._agcac [_bffba ];if !_dbffbc {_dcfg =int (_begcf ._gggg );
};return _ec .CharMetrics {Wx :float64 (_dcfg )},true ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_daa .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_daa .PdfObjectBool ;SigFlags *_daa .PdfObjectInteger ;CO *_daa .PdfObjectArray ;DR *PdfPageResources ;DA *_daa .PdfObjectString ;Q *_daa .PdfObjectInteger ;XFA _daa .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _daa .PdfObject ;_bdcag *_daa .PdfIndirectObject ;_caade bool ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_bebbg *PdfPage )AppendContentStream (contentStr string )error {_fgca ,_gefb :=_bebbg .GetContentStreams ();if _gefb !=nil {return _gefb ;};if len (_fgca )==0{_fgca =[]string {contentStr };return _bebbg .SetContentStreams (_fgca ,_daa .NewFlateEncoder ());
};var _bede _ag .Buffer ;_bede .WriteString (_fgca [len (_fgca )-1]);_bede .WriteString ("\u000a");_bede .WriteString (contentStr );_fgca [len (_fgca )-1]=_bede .String ();return _bebbg .SetContentStreams (_fgca ,_daa .NewFlateEncoder ());};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_bcgc []_daa .PdfObject )([]_daa .PdfObject ,error );};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// GetNumComponents returns the number of color components (3 for Lab).
func (_adcbg *PdfColorLab )GetNumComponents ()int {return 3};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_gbfbcc *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_cgbgc *pdfCIDFontType2 )ToPdfObject ()_daa .PdfObject {if _cgbgc ._bfdbg ==nil {_cgbgc ._bfdbg =&_daa .PdfIndirectObject {};};_fage :=_cgbgc .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_cgbgc ._bfdbg .PdfObject =_fage ;if _cgbgc .CIDSystemInfo !=nil {_fage .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_cgbgc .CIDSystemInfo );};if _cgbgc .DW !=nil {_fage .Set ("\u0044\u0057",_cgbgc .DW );};if _cgbgc .DW2 !=nil {_fage .Set ("\u0044\u0057\u0032",_cgbgc .DW2 );
};if _cgbgc .W !=nil {_fage .Set ("\u0057",_cgbgc .W );};if _cgbgc .W2 !=nil {_fage .Set ("\u0057\u0032",_cgbgc .W2 );};if _cgbgc .CIDToGIDMap !=nil {_fage .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_cgbgc .CIDToGIDMap );};return _cgbgc ._bfdbg ;
};func (_afgea *PdfWriter )writeOutputIntents ()error {if len (_afgea ._dabce )==0{return nil ;};_cfcaa :=make ([]_daa .PdfObject ,len (_afgea ._dabce ));for _cgada ,_aagdec :=range _afgea ._dabce {_fddba :=_aagdec .ToPdfObject ();_cfcaa [_cgada ]=_daa .MakeIndirectObject (_fddba );
};_cdcddc :=_daa .MakeIndirectObject (_daa .MakeArray (_cfcaa ...));_afgea ._dbae .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_cdcddc );if _fbbebf :=_afgea .addObjects (_cdcddc );_fbbebf !=nil {return _fbbebf ;
};return nil ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_fccg *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _fccg ._adgcg .GetRevisionNumber ()==0{return nil ,_ff .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _gbdabf ,_ebebg :=_fccg ._dagbb [_fccg ];_ebebg {return _gbdabf ,nil ;};_gfgbe ,_fdbdb :=_fccg ._adgcg .GetPreviousRevisionReadSeeker ();if _fdbdb !=nil {return nil ,_fdbdb ;};_ecgee ,_fdbdb :=_ccac (_gfgbe ,_fccg ._dffec ,_fccg ._edecf ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _fdbdb !=nil {return nil ,_fdbdb ;};_fccg ._dcfgcf [_fccg ._adgcg .GetRevisionNumber ()-1]=_ecgee ;_fccg ._dagbb [_fccg ]=_ecgee ;_ecgee ._dagbb =_fccg ._dagbb ;return _ecgee ,nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;
FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);
FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);
FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););type pdfCIDFontType2 struct{fontCommon ;_bfdbg *_daa .PdfIndirectObject ;_bbbd _df .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_daa .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _daa .PdfObject ;W _daa .PdfObject ;DW2 _daa .PdfObject ;W2 _daa .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _daa .PdfObject ;_gfagb map[_df .CharCode ]float64 ;_gggg float64 ;_agcac map[rune ]int ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_egcef *PdfPageResources )ToPdfObject ()_daa .PdfObject {_begdge :=_egcef ._faeeg ;_begdge .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_egcef .ExtGState );if _egcef ._gcdde !=nil {_egcef .ColorSpace =_egcef ._gcdde .ToPdfObject ();
};_begdge .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_egcef .ColorSpace );_begdge .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_egcef .Pattern );_begdge .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_egcef .Shading );
_begdge .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_egcef .XObject );_begdge .SetIfNotNil ("\u0046\u006f\u006e\u0074",_egcef .Font );_begdge .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_egcef .ProcSet );_begdge .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_egcef .Properties );
return _begdge ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_daa .PdfIndirectObject ;SV *_daa .PdfIndirectObject ;};func (_ccgge *LTV )buildCertChain (_ffcfb ,_fdcc []*_e .Certificate )([]*_e .Certificate ,map[string ]*_e .Certificate ,error ){_gdagd :=map[string ]*_e .Certificate {};
for _ ,_egead :=range _ffcfb {_gdagd [_egead .Subject .CommonName ]=_egead ;};_edgc :=_ffcfb ;for _ ,_bebf :=range _fdcc {_bggf :=_bebf .Subject .CommonName ;if _ ,_bbfgc :=_gdagd [_bggf ];_bbfgc {continue ;};_gdagd [_bggf ]=_bebf ;_edgc =append (_edgc ,_bebf );
};if len (_edgc )==0{return nil ,nil ,ErrSignNoCertificates ;};var _gdbbf error ;for _bdcaa :=_edgc [0];_bdcaa !=nil &&!_ccgge .CertClient .IsCA (_bdcaa );{_dbaf ,_dfda :=_gdagd [_bdcaa .Issuer .CommonName ];if !_dfda {if _dbaf ,_gdbbf =_ccgge .CertClient .GetIssuer (_bdcaa );
_gdbbf !=nil {_ae .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_gdbbf );
break ;};_gdagd [_bdcaa .Issuer .CommonName ]=_dbaf ;_edgc =append (_edgc ,_dbaf );};_bdcaa =_dbaf ;};return _edgc ,_gdagd ,nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_fd :=NewPdfAction ();_fcba :=&PdfActionGoTo {};_fcba .PdfAction =_fd ;_fd .SetContext (_fcba );return _fcba ;};func _dbadc (_cgca _daa .PdfObject )(*PdfFontDescriptor ,error ){_fgace :=&PdfFontDescriptor {};_cgca =_daa .ResolveReference (_cgca );
if _egea ,_decb :=_cgca .(*_daa .PdfIndirectObject );_decb {_fgace ._dacb =_egea ;_cgca =_egea .PdfObject ;};_ecbffc ,_egabf :=_daa .GetDict (_cgca );if !_egabf {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cgca );
return nil ,_daa .ErrTypeError ;};if _feggf :=_ecbffc .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_feggf !=nil {_fgace .FontName =_feggf ;}else {_ae .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_aafeb ,_ :=_daa .GetName (_fgace .FontName );if _ddeca :=_ecbffc .Get ("\u0054\u0079\u0070\u0065");_ddeca !=nil {_dcbc ,_bccbda :=_ddeca .(*_daa .PdfObjectName );if !_bccbda ||string (*_dcbc )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_ae .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ddeca ,_aafeb ,_fgace .FontName );
};}else {_ae .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_aafeb ,_fgace .FontName );
};_fgace .FontFamily =_ecbffc .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_fgace .FontStretch =_ecbffc .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_fgace .FontWeight =_ecbffc .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_fgace .Flags =_ecbffc .Get ("\u0046\u006c\u0061g\u0073");_fgace .FontBBox =_ecbffc .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_fgace .ItalicAngle =_ecbffc .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_fgace .Ascent =_ecbffc .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_fgace .Descent =_ecbffc .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_fgace .Leading =_ecbffc .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_fgace .CapHeight =_ecbffc .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_fgace .XHeight =_ecbffc .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_fgace .StemV =_ecbffc .Get ("\u0053\u0074\u0065m\u0056");_fgace .StemH =_ecbffc .Get ("\u0053\u0074\u0065m\u0048");_fgace .AvgWidth =_ecbffc .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_fgace .MaxWidth =_ecbffc .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_fgace .MissingWidth =_ecbffc .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_fgace .FontFile =_ecbffc .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_fgace .FontFile2 =_ecbffc .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_fgace .FontFile3 =_ecbffc .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_fgace .CharSet =_ecbffc .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_fgace .Style =_ecbffc .Get ("\u0053\u0074\u0079l\u0065");_fgace .Lang =_ecbffc .Get ("\u004c\u0061\u006e\u0067");
_fgace .FD =_ecbffc .Get ("\u0046\u0044");_fgace .CIDSet =_ecbffc .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _fgace .Flags !=nil {if _bacea ,_affga :=_daa .GetIntVal (_fgace .Flags );_affga {_fgace ._edff =_bacea ;};};if _fgace .MissingWidth !=nil {if _edcgg ,_cadd :=_daa .GetNumberAsFloat (_fgace .MissingWidth );
_cadd ==nil {_fgace ._bcae =_edcgg ;};};if _fgace .FontFile !=nil {_ggbaf ,_caba :=_abeag (_fgace .FontFile );if _caba !=nil {return _fgace ,_caba ;};_ae .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_ggbaf );_fgace .fontFile =_ggbaf ;
};if _fgace .FontFile2 !=nil {_dfged ,_daga :=_ec .NewFontFile2FromPdfObject (_fgace .FontFile2 );if _daga !=nil {return _fgace ,_daga ;};_ae .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_dfged .String ());_fgace ._aafbe =&_dfged ;
};return _fgace ,nil ;};func (_bfbb *PdfWriter )seekByName (_bece _daa .PdfObject ,_acbef []string ,_cefec string )([]_daa .PdfObject ,error ){_ae .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_bece );
var _caeed []_daa .PdfObject ;if _ffbad ,_cddfb :=_bece .(*_daa .PdfIndirectObject );_cddfb {return _bfbb .seekByName (_ffbad .PdfObject ,_acbef ,_cefec );};if _fecd ,_caacg :=_bece .(*_daa .PdfObjectStream );_caacg {return _bfbb .seekByName (_fecd .PdfObjectDictionary ,_acbef ,_cefec );
};if _gcafgd ,_geegf :=_bece .(*_daa .PdfObjectDictionary );_geegf {_ae .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_efdba :=range _gcafgd .Keys (){_faddd :=_gcafgd .Get (_efdba );if string (_efdba )==_cefec {_caeed =append (_caeed ,_faddd );};for _ ,_fcgad :=range _acbef {if string (_efdba )==_fcgad {_ae .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_fcgad );
_fdedf ,_gdebf :=_bfbb .seekByName (_faddd ,_acbef ,_cefec );if _gdebf !=nil {return _caeed ,_gdebf ;};_caeed =append (_caeed ,_fdedf ...);break ;};};};return _caeed ,nil ;};return _caeed ,nil ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_ccfc *DSS )ToPdfObject ()_daa .PdfObject {_egaa :=_ccfc ._fcbb .PdfObject .(*_daa .PdfObjectDictionary );_egaa .Clear ();_geedg :=_daa .MakeDict ();for _gbbb ,_edad :=range _ccfc .VRI {_geedg .Set (*_daa .MakeName (_gbbb ),_edad .ToPdfObject ());
};_egaa .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_bdacf (_ccfc .Certs ));_egaa .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_bdacf (_ccfc .OCSPs ));_egaa .SetIfNotNil ("\u0043\u0052\u004c\u0073",_bdacf (_ccfc .CRLs ));_egaa .Set ("\u0056\u0052\u0049",_geedg );
return _ccfc ._fcbb ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _daa .PdfObject ;T _daa .PdfObject ;Operation _daa .PdfObject ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_dddce *PdfReader )PageFromIndirectObject (ind *_daa .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_dddce .PageList )!=len (_dddce ._eefcbf ){return nil ,0,_ff .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _dacc ,_dcbbf :=range _dddce ._eefcbf {if _dcbbf ==ind {return _dddce .PageList [_dacc ],_dacc +1,nil ;};};return nil ,0,_ff .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _daa .PdfObject ;ColorSpace _daa .PdfObject ;Pattern _daa .PdfObject ;Shading _daa .PdfObject ;XObject _daa .PdfObject ;Font _daa .PdfObject ;ProcSet _daa .PdfObject ;Properties _daa .PdfObject ;_faeeg *_daa .PdfObjectDictionary ;
_gcdde *PdfPageResourcesColorspaces ;};func (_aeacc *PdfAcroForm )fillImageWithAppearance (_dbbcg FieldImageProvider ,_cegcb FieldAppearanceGenerator )error {if _aeacc ==nil {return nil ;};_ecbg ,_eccge :=_dbbcg .FieldImageValues ();if _eccge !=nil {return _eccge ;
};for _ ,_ecab :=range _aeacc .AllFields (){_bebcf :=_ecab .PartialName ();_bcbfa ,_baedc :=_ecbg [_bebcf ];if !_baedc {if _geeed ,_gdedg :=_ecab .FullName ();_gdedg ==nil {_bcbfa ,_baedc =_ecbg [_geeed ];};};if !_baedc {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_bebcf );
continue ;};switch _ggfa :=_ecab .GetContext ().(type ){case *PdfFieldButton :if _ggfa .IsPush (){_ggfa .SetFillImage (_bcbfa );};};if _cegcb ==nil {continue ;};for _ ,_effe :=range _ecab .Annotations {_ceeecb ,_ebbcg :=_cegcb .GenerateAppearanceDict (_aeacc ,_ecab ,_effe );
if _ebbcg !=nil {return _ebbcg ;};_effe .AP =_ceeecb ;_effe .ToPdfObject ();};};return nil ;};

// IsValid checks if the given pdf output intent type is valid.
func (_daaeg PdfOutputIntentType )IsValid ()bool {return _daaeg >=PdfOutputIntentTypeA1 &&_daaeg <=PdfOutputIntentTypeX ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_daa .PdfObjectString ;Q *_daa .PdfObjectInteger ;DS *_daa .PdfObjectString ;RV _daa .PdfObject ;MaxLen *_daa .PdfObjectInteger ;};func (_cgefgc *LTV )getCerts (_ccgfa []*_e .Certificate )([][]byte ,error ){_fcbgf :=make ([][]byte ,0,len (_ccgfa ));
for _ ,_edcd :=range _ccgfa {_fcbgf =append (_fcbgf ,_edcd .Raw );};return _fcbgf ,nil ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_gcgac byte )byte ;func (_aaacfc SignatureValidationResult )String ()string {var _afgeec _ag .Buffer ;_afgeec .WriteString (_c .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_aaacfc .Name ));if _aaacfc .Date ._agdgd > 0{_afgeec .WriteString (_c .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_aaacfc .Date .ToGoTime ().String ()));
}else {_afgeec .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_aaacfc .Reason )> 0{_afgeec .WriteString (_c .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_aaacfc .Reason ));
}else {_afgeec .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_aaacfc .Location )> 0{_afgeec .WriteString (_c .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_aaacfc .Location ));
}else {_afgeec .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_aaacfc .ContactInfo )> 0{_afgeec .WriteString (_c .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_aaacfc .ContactInfo ));
}else {_afgeec .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_afgeec .WriteString (_c .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_aaacfc .Fields )));
if _aaacfc .IsSigned {_afgeec .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_afgeec .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _aaacfc .IsVerified {_afgeec .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_afgeec .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _aaacfc .IsTrusted {_afgeec .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_afgeec .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_aaacfc .GeneralizedTime .IsZero (){_afgeec .WriteString (_c .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_aaacfc .GeneralizedTime .String ()));};if _aaacfc .DiffResults !=nil {_afgeec .WriteString (_c .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_aaacfc .DiffResults .IsPermitted ()));
if len (_aaacfc .DiffResults .Warnings )> 0{_afgeec .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");for _ ,_ddacgd :=range _aaacfc .DiffResults .Warnings {_afgeec .WriteString (_c .Sprintf ("\u0009\u0025\u0073\u000a",_ddacgd ));
};};if len (_aaacfc .DiffResults .Errors )> 0{_afgeec .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");for _ ,_bdbd :=range _aaacfc .DiffResults .Errors {_afgeec .WriteString (_c .Sprintf ("\u0009\u0025\u0073\u000a",_bdbd ));
};};};return _afgeec .String ();};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func (_efdage *PdfWriter )writeOutlines ()error {if _efdage ._fgefg ==nil {return nil ;};_ae .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_efdage ._fgefg );_gebda :=_efdage ._fgefg .ToPdfObject ();
_ae .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_gebda ,_gebda ,_gebda );_efdage ._dbae .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_gebda );
_cdgbf :=_efdage .addObjects (_gebda );if _cdgbf !=nil {return _cdgbf ;};return nil ;};

// String returns a human readable description of `fontfile`.
func (_ecca *fontFile )String ()string {_acee :="\u005b\u004e\u006f\u006e\u0065\u005d";if _ecca ._dgfad !=nil {_acee =_ecca ._dgfad .String ();};return _c .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_ecca ._edde ,_acee );
};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_cefgd :=NewPdfAnnotation ();_acda :=&PdfAnnotationSquiggly {};_acda .PdfAnnotation =_cefgd ;_acda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cefgd .SetContext (_acda );return _acda ;};func _daagbe (_bfbf *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_bfbf }};


// ToPdfObject implements interface PdfModel.
func (_add *PdfAnnotationProjection )ToPdfObject ()_daa .PdfObject {_add .PdfAnnotation .ToPdfObject ();_cbdc :=_add ._gbf ;_eca :=_cbdc .PdfObject .(*_daa .PdfObjectDictionary );_add .PdfAnnotationMarkup .appendToPdfDictionary (_eca );return _cbdc ;};


// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_facd :=NewPdfAnnotation ();_ageg :=&PdfAnnotationPopup {};_ageg .PdfAnnotation =_facd ;_facd .SetContext (_ageg );return _ageg ;};func (_bacg fontCommon )coreString ()string {_eadad :="";if _bacg ._eccc !=nil {_eadad =_bacg ._eccc .String ();
};return _c .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_bacg ._fbafe ,_bacg ._agfd ,_bacg ._cddg ,_bacg ._decda ,_bacg ._fbeba !=nil ,_bacg .fontFlags (),_eadad );
};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_gfceb *PdfWriter )ApplyStandard (optimizer StandardApplier ){_gfceb ._bbfad =optimizer };func (_bgc *PdfAnnotationMarkup )appendToPdfDictionary (_daec *_daa .PdfObjectDictionary ){_daec .SetIfNotNil ("\u0054",_bgc .T );if _bgc .Popup !=nil {_daec .Set ("\u0050\u006f\u0070u\u0070",_bgc .Popup .ToPdfObject ());
};_daec .SetIfNotNil ("\u0043\u0041",_bgc .CA );_daec .SetIfNotNil ("\u0052\u0043",_bgc .RC );_daec .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bgc .CreationDate );_daec .SetIfNotNil ("\u0049\u0052\u0054",_bgc .IRT );
_daec .SetIfNotNil ("\u0053\u0075\u0062\u006a",_bgc .Subj );_daec .SetIfNotNil ("\u0052\u0054",_bgc .RT );_daec .SetIfNotNil ("\u0049\u0054",_bgc .IT );_daec .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_bgc .ExData );};

// ToPdfObject implements interface PdfModel.
func (_aca *PdfAction )ToPdfObject ()_daa .PdfObject {_cf :=_aca ._ad ;_feb :=_cf .PdfObject .(*_daa .PdfObjectDictionary );_feb .Clear ();_feb .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_feb .SetIfNotNil ("\u0053",_aca .S );
_feb .SetIfNotNil ("\u004e\u0065\u0078\u0074",_aca .Next );return _cf ;};

// String returns a string representation of what flags are set.
func (_geaf FieldFlag )String ()string {_eaff :="";if _geaf ==FieldFlagClear {_eaff ="\u0043\u006c\u0065a\u0072";return _eaff ;};if _geaf &FieldFlagReadOnly > 0{_eaff +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _geaf &FieldFlagRequired > 0{_eaff +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _geaf &FieldFlagNoExport > 0{_eaff +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _geaf &FieldFlagNoToggleToOff > 0{_eaff +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _geaf &FieldFlagRadio > 0{_eaff +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _geaf &FieldFlagPushbutton > 0{_eaff +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _geaf &FieldFlagRadiosInUnision > 0{_eaff +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _geaf &FieldFlagMultiline > 0{_eaff +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _geaf &FieldFlagPassword > 0{_eaff +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _geaf &FieldFlagFileSelect > 0{_eaff +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _geaf &FieldFlagDoNotScroll > 0{_eaff +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _geaf &FieldFlagComb > 0{_eaff +="\u007c\u0043\u006fm\u0062";};if _geaf &FieldFlagRichText > 0{_eaff +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _geaf &FieldFlagDoNotSpellCheck > 0{_eaff +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _geaf &FieldFlagCombo > 0{_eaff +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _geaf &FieldFlagEdit > 0{_eaff +="\u007c\u0045\u0064i\u0074";};if _geaf &FieldFlagSort > 0{_eaff +="\u007c\u0053\u006fr\u0074";};if _geaf &FieldFlagMultiSelect > 0{_eaff +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _geaf &FieldFlagCommitOnSelChange > 0{_eaff +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _db .Trim (_eaff ,"\u007c");};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_fgec *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _daa .GetNumberAsFloat (_fgec .CapHeight );};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_gb :=NewPdfAction ();_cgg :=&PdfActionGoTo3DView {};_cgg .PdfAction =_gb ;_gb .SetContext (_cgg );return _cgg ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};func (_gced *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_daa .PdfObjectArray ;ExtGState _daa .PdfObject ;};

// GetContentStream returns the XObject Form's content stream.
func (_gefad *XObjectForm )GetContentStream ()([]byte ,error ){_ddeae ,_daff :=_daa .DecodeStream (_gefad ._ebedbd );if _daff !=nil {return nil ,_daff ;};return _ddeae ,nil ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_fcaae :=&PdfAppender {_ecec :reader ._befda ,Reader :reader ,_cbadc :reader ._adgcg ,_dbff :reader ._gcefb };_dccg ,_cdce :=_fcaae ._ecec .Seek (0,_dgg .SeekEnd );
if _cdce !=nil {return nil ,_cdce ;};_fcaae ._acf =_dccg ;if _ ,_cdce =_fcaae ._ecec .Seek (0,_dgg .SeekStart );_cdce !=nil {return nil ,_cdce ;};_fcaae ._egaf ,_cdce =NewPdfReaderWithOpts (_fcaae ._ecec ,opts );if _cdce !=nil {return nil ,_cdce ;};for _ ,_dff :=range _fcaae .Reader .GetObjectNums (){if _fcaae ._ddga < _dff {_fcaae ._ddga =_dff ;
};};_fcaae ._eccg =_fcaae ._cbadc .GetXrefTable ();_fcaae ._egfa =_fcaae ._cbadc .GetXrefOffset ();_fcaae ._ffda =append (_fcaae ._ffda ,_fcaae ._egaf .PageList ...);_fcaae ._bbgd =make (map[_daa .PdfObject ]struct{});_fcaae ._fedb =make (map[_daa .PdfObject ]int64 );
_fcaae ._dabd =make (map[_daa .PdfObject ]struct{});_fcaae ._bgcb =_fcaae ._egaf .AcroForm ;_fcaae ._cfbe =_fcaae ._egaf .DSS ;if opts !=nil {_fcaae ._eefb =opts .Password ;};if encryptOptions !=nil {_fcaae ._fcfb =encryptOptions ;};return _fcaae ,nil ;
};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_gbaa :=PdfColorLab {l ,a ,b };return &_gbaa };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_bcadd *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dccd :=vals [0];if _dccd < 0.0||_dccd > 1.0{_ae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dccd );
return nil ,ErrColorOutOfRange ;};_gdecc :=vals [1];if _gdecc < 0.0||_gdecc > 1.0{_ae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gdecc );return nil ,ErrColorOutOfRange ;
};_bccbd :=vals [2];if _bccbd < 0.0||_bccbd > 1.0{_ae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bccbd );return nil ,ErrColorOutOfRange ;};_abbg :=NewPdfColorCalRGB (_dccd ,_gdecc ,_bccbd );
return _abbg ,nil ;};

// SetDate sets the `M` field of the signature.
func (_gaecb *PdfSignature )SetDate (date _d .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_gaecb .M =_daa .MakeString (date .Format (format ));
};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_ebfgf ,_fgebf :=_bcbdg (basefont );if _fgebf !=nil {return nil ,_fgebf ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_ebfgf ._face =_df .NewWinAnsiEncoder ();};return &PdfFont {_gbbee :&_ebfgf },nil ;
};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_gfcg *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_daa .StreamEncoder ,error ){_bfbe ,_feabd :=_gfcg ._degd .(*_daa .PdfObjectStream );if !_feabd {_ae .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gfcg ._degd );
return nil ,nil ,_daa .ErrTypeError ;};_fgbf ,_ebcac :=_daa .DecodeStream (_bfbe );if _ebcac !=nil {_ae .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_ebcac );
return nil ,nil ,_ebcac ;};_gbdba ,_ebcac :=_daa .NewEncoderFromStream (_bfbe );if _ebcac !=nil {_ae .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_ebcac );
return nil ,nil ,_ebcac ;};return _fgbf ,_gbdba ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_aceba *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_daa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adef ,_cddd :=_daa .GetNumbersAsFloat (objects );
if _cddd !=nil {return nil ,_cddd ;};return _aceba .ColorFromFloats (_adef );};func _adebe (_bbgdc string )(string ,error ){var _fbcdc _ag .Buffer ;_fbcdc .WriteString (_bbgdc );_gegaf :=make ([]byte ,8+16);_ggecg :=_d .Now ().UTC ().UnixNano ();_ge .BigEndian .PutUint64 (_gegaf ,uint64 (_ggecg ));
_ ,_efadf :=_da .Read (_gegaf [8:]);if _efadf !=nil {return "",_efadf ;};_fbcdc .WriteString (_b .EncodeToString (_gegaf ));return _fbcdc .String (),nil ;};var _ pdfFont =(*pdfFontType3 )(nil );

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_bcccd *PdfPage )Size ()(float64 ,float64 ,error ){_cdege ,_abfba :=_bcccd .GetMediaBox ();if _abfba !=nil {return 0,0,_abfba ;};_dfbca ,_egada :=_cdege .Width (),_cdege .Height ();_gddcc ,_abfba :=_bcccd .GetRotate ();if _abfba !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_abfba .Error ());
};if _gbggg :=_gddcc ;_gbggg %360!=0&&_gbggg %90==0{if _fbdgb :=(360+_gbggg %360)%360;_fbdgb ==90||_fbdgb ==270{_dfbca ,_egada =_egada ,_dfbca ;};};return _dfbca ,_egada ,nil ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_fgde DefaultImageHandler )Read (reader _dgg .Reader )(*Image ,error ){_dcdcd ,_ ,_afcf :=_baa .Decode (reader );if _afcf !=nil {_ae .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_afcf );
return nil ,_afcf ;};return _fgde .NewImageFromGoImage (_dcdcd );};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_aagf *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_daa .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bada ,_eeaea :=_daa .GetNumbersAsFloat (objects );
if _eeaea !=nil {return nil ,_eeaea ;};return _aagf .ColorFromFloats (_bada );};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_fagga :=&PdfFieldSignature {};_fagga .PdfField =NewPdfField ();_fagga .PdfField .SetContext (_fagga );_fagga .PdfAnnotationWidget =NewPdfAnnotationWidget ();_fagga .PdfAnnotationWidget .SetContext (_fagga );
_fagga .PdfAnnotationWidget ._gbf =_fagga .PdfField ._caaee ;_fagga .T =_daa .MakeString ("");_fagga .F =_daa .MakeInteger (132);_fagga .V =signature ;return _fagga ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_afda :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_afda ;};

// ToPdfObject implements interface PdfModel.
func (_accc *PdfActionGoTo3DView )ToPdfObject ()_daa .PdfObject {_accc .PdfAction .ToPdfObject ();_cdb :=_accc ._ad ;_eag :=_cdb .PdfObject .(*_daa .PdfObjectDictionary );_eag .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeGoTo3DView )));_eag .SetIfNotNil ("\u0054\u0041",_accc .TA );
_eag .SetIfNotNil ("\u0056",_accc .V );return _cdb ;};func _eaea (_gecdf []byte )[]byte {const _eggfa =52845;const _cedfg =22719;_gcfd :=55665;for _ ,_cegd :=range _gecdf [:4]{_gcfd =(int (_cegd )+_gcfd )*_eggfa +_cedfg ;};_ddff :=make ([]byte ,len (_gecdf )-4);
for _fbfbb ,_cgea :=range _gecdf [4:]{_ddff [_fbfbb ]=byte (int (_cgea )^_gcfd >>8);_gcfd =(int (_cgea )+_gcfd )*_eggfa +_cedfg ;};return _ddff ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_cc :=NewPdfAction ();_abd :=&PdfActionThread {};_abd .PdfAction =_cc ;_cc .SetContext (_abd );return _abd ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_aefba :=PdfColorDeviceRGB {r ,g ,b };return &_aefba ;};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_daa .PdfObjectArray ;ExtGState _daa .PdfObject ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_bgaad *PdfSignature ,_fdggd Hasher ,_bfdcd SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};func _fdfa (_ccae *_daa .PdfObjectStream )(*PdfFunctionType4 ,error ){_ceeeg :=&PdfFunctionType4 {};_ceeeg ._ddbf =_ccae ;
_ebcag :=_ccae .PdfObjectDictionary ;_bbgfg ,_cefdg :=_daa .TraceToDirectObject (_ebcag .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_daa .PdfObjectArray );if !_cefdg {_ae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bbgfg .Len ()%2!=0{_ae .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_ff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_eabbe ,_aefea :=_bbgfg .ToFloat64Array ();if _aefea !=nil {return nil ,_aefea ;};_ceeeg .Domain =_eabbe ;_bbgfg ,_cefdg =_daa .TraceToDirectObject (_ebcag .Get ("\u0052\u0061\u006eg\u0065")).(*_daa .PdfObjectArray );
if _cefdg {if _bbgfg .Len ()< 0||_bbgfg .Len ()%2!=0{return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dbbd ,_cgedg :=_bbgfg .ToFloat64Array ();if _cgedg !=nil {return nil ,_cgedg ;};_ceeeg .Range =_dbbd ;
};_dadef ,_aefea :=_daa .DecodeStream (_ccae );if _aefea !=nil {return nil ,_aefea ;};_ceeeg ._gcefg =_dadef ;_facf :=_aa .NewPSParser (_dadef );_bcaa ,_aefea :=_facf .Parse ();if _aefea !=nil {return nil ,_aefea ;};_ceeeg .Program =_bcaa ;return _ceeeg ,nil ;
};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _daa .PdfObject ;Popup *PdfAnnotationPopup ;CA _daa .PdfObject ;RC _daa .PdfObject ;CreationDate _daa .PdfObject ;IRT _daa .PdfObject ;Subj _daa .PdfObject ;RT _daa .PdfObject ;IT _daa .PdfObject ;ExData _daa .PdfObject ;
};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_effbd :_daa .MakeDict (),ColorComponents :colorComponents };
};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_cdcae *PdfPageResources )GetXObjectImageByName (keyName _daa .PdfObjectName )(*XObjectImage ,error ){_agafc ,_gaaab :=_cdcae .GetXObjectByName (keyName );if _agafc ==nil {return nil ,nil ;};if _gaaab !=XObjectTypeImage {return nil ,_ff .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_ebedf ,_bfgbd :=NewXObjectImageFromStream (_agafc );if _bfgbd !=nil {return nil ,_bfgbd ;};return _ebedf ,nil ;};

// SetContext sets the sub action (context).
func (_bb *PdfAction )SetContext (ctx PdfModel ){_bb ._gfc =ctx };

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_gdggd .Lock ();defer _gdggd .Unlock ();_cdcfe =creator };

// GetContentStreams returns the content stream as an array of strings.
func (_bfed *PdfPage )GetContentStreams ()([]string ,error ){_ffgfd :=_bfed .GetContentStreamObjs ();var _aabgc []string ;for _ ,_aceea :=range _ffgfd {_bddgd ,_ffgaee :=_bgdfa (_aceea );if _ffgaee !=nil {return nil ,_ffgaee ;};_aabgc =append (_aabgc ,_bddgd );
};return _aabgc ,nil ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_adgcg *_daa .PdfParser ;_eedgb _daa .PdfObject ;_gefdea *_daa .PdfIndirectObject ;_bdeac *_daa .PdfObjectDictionary ;_eefcbf []*_daa .PdfIndirectObject ;PageList []*PdfPage ;_fccad int ;_cgace *_daa .PdfObjectDictionary ;_bgceg *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_cdefg *Permissions ;_dagbb map[*PdfReader ]*PdfReader ;_dcfgcf []*PdfReader ;_beaec *modelManager ;_gagec bool ;_gcefb map[_daa .PdfObject ]struct{};_befda _dgg .ReadSeeker ;_dgdc string ;_ggbfb bool ;_dffec *ReaderOpts ;
_edecf bool ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// ToPdfObject implements interface PdfModel.
func (_eaaaf *PdfAnnotationScreen )ToPdfObject ()_daa .PdfObject {_eaaaf .PdfAnnotation .ToPdfObject ();_gbc :=_eaaaf ._gbf ;_gea :=_gbc .PdfObject .(*_daa .PdfObjectDictionary );_gea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_gea .SetIfNotNil ("\u0054",_eaaaf .T );_gea .SetIfNotNil ("\u004d\u004b",_eaaaf .MK );_gea .SetIfNotNil ("\u0041",_eaaaf .A );_gea .SetIfNotNil ("\u0041\u0041",_eaaaf .AA );return _gbc ;};func _ffafa (_fgcd _daa .PdfObject )(map[_df .CharCode ]float64 ,error ){if _fgcd ==nil {return nil ,nil ;
};_ccbbd ,_eceeb :=_daa .GetArray (_fgcd );if !_eceeb {return nil ,nil ;};_dcbcg :=map[_df .CharCode ]float64 {};_baff :=_ccbbd .Len ();for _dcdd :=0;_dcdd < _baff -1;_dcdd ++{_bccbc :=_daa .TraceToDirectObject (_ccbbd .Get (_dcdd ));_ddde ,_efbgd :=_daa .GetIntVal (_bccbc );
if !_efbgd {return nil ,_c .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_dcdd ,_bccbc );};_dcdd ++;if _dcdd > _baff -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_ccbbd );
};_acbba :=_daa .TraceToDirectObject (_ccbbd .Get (_dcdd ));switch _acbba .(type ){case *_daa .PdfObjectArray :_dbfff ,_ :=_daa .GetArray (_acbba );if _bbeaa ,_abacb :=_dbfff .ToFloat64Array ();_abacb ==nil {for _gdgda :=0;_gdgda < len (_bbeaa );_gdgda ++{_dcbcg [_df .CharCode (_ddde +_gdgda )]=_bbeaa [_gdgda ];
};}else {return nil ,_c .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dcdd ,_acbba );};case *_daa .PdfObjectInteger :_ggdc ,_dcgdd :=_daa .GetIntVal (_acbba );
if !_dcgdd {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dcdd ,_acbba );};_dcdd ++;if _dcdd > _baff -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_ccbbd );
};_cbeg :=_ccbbd .Get (_dcdd );_fgfcd ,_eefec :=_daa .GetNumberAsFloat (_cbeg );if _eefec !=nil {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_dcdd ,_cbeg );
};for _ecefc :=_ddde ;_ecefc <=_ggdc ;_ecefc ++{_dcbcg [_df .CharCode (_ecefc )]=_fgfcd ;};default:return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_dcdd ,_acbba );
};};return _dcbcg ,nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_dbfffg *PdfReader )GetPageLabels ()(_daa .PdfObject ,error ){_bgdbg :=_daa .ResolveReference (_dbfffg ._cgace .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _bgdbg ==nil {return nil ,nil ;};if !_dbfffg ._gagec {_egabd :=_dbfffg .traverseObjectData (_bgdbg );
if _egabd !=nil {return nil ,_egabd ;};};return _bgdbg ,nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_daa .PdfObjectInteger ;BitsPerComponent *_daa .PdfObjectInteger ;BitsPerFlag *_daa .PdfObjectInteger ;Decode *_daa .PdfObjectArray ;Function []PdfFunction ;};func (_acgba *PdfReader )newPdfSignatureReferenceFromDict (_dggge *_daa .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _accaf ,_bbcad :=_acgba ._beaec .GetModelFromPrimitive (_dggge ).(*PdfSignatureReference );
_bbcad {return _accaf ,nil ;};_fagb :=&PdfSignatureReference {_bbegb :_dggge ,Data :_dggge .Get ("\u0044\u0061\u0074\u0061")};var _cfef bool ;_fagb .Type ,_ =_daa .GetName (_dggge .Get ("\u0054\u0079\u0070\u0065"));_fagb .TransformMethod ,_cfef =_daa .GetName (_dggge .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_cfef {_ae .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_fagb .TransformParams ,_ =_daa .GetDict (_dggge .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_fagb .DigestMethod ,_ =_daa .GetName (_dggge .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _fagb ,nil ;};func (_adfb *PdfReader )newPdfAnnotationCaretFromDict (_fcd *_daa .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_cbaf :=PdfAnnotationCaret {};_ddaf ,_dbda :=_adfb .newPdfAnnotationMarkupFromDict (_fcd );if _dbda !=nil {return nil ,_dbda ;
};_cbaf .PdfAnnotationMarkup =_ddaf ;_cbaf .RD =_fcd .Get ("\u0052\u0044");_cbaf .Sy =_fcd .Get ("\u0053\u0079");return &_cbaf ,nil ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_bceb :=NewPdfAnnotation ();_egc :=&PdfAnnotationLine {};_egc .PdfAnnotation =_bceb ;_egc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bceb .SetContext (_egc );return _egc ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _daa .PdfObject ;};

// PartialName returns the partial name of the field.
func (_cdcaf *PdfField )PartialName ()string {_gbgf :="";if _cdcaf .T !=nil {_gbgf =_cdcaf .T .Decoded ();}else {_ae .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _gbgf ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_dcefb :=NewPdfAnnotation ();_cec :=&PdfAnnotationTrapNet {};_cec .PdfAnnotation =_dcefb ;_dcefb .SetContext (_cec );return _cec ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_gdaf *PdfWriter )SetNameDictionary (names _daa .PdfObject )error {if names ==nil {return nil ;};_ae .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_gdaf ._dbae .Set ("\u004e\u0061\u006de\u0073",names );return _gdaf .addObjects (names );};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_faad *PdfColorspaceDeviceN )GetNumComponents ()int {return _faad .ColorantNames .Len ()};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_dga .File ,error ){const _fffdb ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_egef ,_dddaf :=_dga .Open (pdfFile );if _dddaf !=nil {return nil ,nil ,_dddaf ;};_facda ,_dddaf :=_ccac (_egef ,opts ,true ,_fffdb );if _dddaf !=nil {_egef .Close ();return nil ,nil ,_dddaf ;};return _facda ,_egef ,nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_bffc *Outline )Insert (index uint ,item *OutlineItem ){_fbeaf :=uint (len (_bffc .Entries ));if index > _fbeaf {index =_fbeaf ;};_bffc .Entries =append (_bffc .Entries [:index ],append ([]*OutlineItem {item },_bffc .Entries [index :]...)...);};func (_faff *PdfReader )newPdfAnnotationPolyLineFromDict (_cbcg *_daa .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_efda :=PdfAnnotationPolyLine {};
_eaaf ,_cefd :=_faff .newPdfAnnotationMarkupFromDict (_cbcg );if _cefd !=nil {return nil ,_cefd ;};_efda .PdfAnnotationMarkup =_eaaf ;_efda .Vertices =_cbcg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_efda .LE =_cbcg .Get ("\u004c\u0045");
_efda .BS =_cbcg .Get ("\u0042\u0053");_efda .IC =_cbcg .Get ("\u0049\u0043");_efda .BE =_cbcg .Get ("\u0042\u0045");_efda .IT =_cbcg .Get ("\u0049\u0054");_efda .Measure =_cbcg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_efda ,nil ;};

// ImageToRGB convert an indexed image to RGB.
func (_addg *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_addg .Base .GetNumComponents ();if N < 1{return Image {},_c .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_geee :=_ac .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._bbcf ,img ._bfdc );_bdecc :=_gf .NewReader (img .getBase ());_dffg :=_gf .NewWriter (_geee );var (_cbgdd uint32 ;_edbea int ;_gfbbe error ;);for {_cbgdd ,_gfbbe =_bdecc .ReadSample ();
if _gfbbe ==_dgg .EOF {break ;}else if _gfbbe !=nil {return img ,_gfbbe ;};_edbea =int (_cbgdd );_ae .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_edbea ,N ,len (_addg ._ffbb ));
if (_edbea +1)*N > len (_addg ._ffbb ){_edbea =len (_addg ._ffbb )/N -1;_ae .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_edbea );if _edbea < 0{_ae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _aaeb :=_edbea *N ;_aaeb < (_edbea +1)*N ;_aaeb ++{if _gfbbe =_dffg .WriteSample (uint32 (_addg ._ffbb [_aaeb ]));_gfbbe !=nil {return img ,_gfbbe ;};};};return _addg .Base .ImageToRGB (_geda (&_geee ));};func (_ddgc *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _ddgc ._adgcg .GetCrypter ()!=nil &&!_ddgc ._adgcg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_eccgd :=_ddgc ._cgace ;_aafbb :=_eccgd .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _aafbb ==nil {return nil ,nil ;};_ae .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_eacde :=_daa .ResolveReference (_aafbb );
_ae .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_eacde );if _aacdbg :=_daa .IsNullObject (_eacde );_aacdbg {_ae .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_gbfa ,_gagg :=_eacde .(*_daa .PdfIndirectObject );if !_gagg {if _ ,_acebb :=_daa .GetDict (_eacde );!_acebb {_ae .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_ae .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_gbfa =_daa .MakeIndirectObject (_eacde );};_bdgbe ,_gagg :=_gbfa .PdfObject .(*_daa .PdfObjectDictionary );if !_gagg {return nil ,_ff .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_ae .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_bdgbe );_gfabd ,_ ,_eggge :=_ddgc .buildOutlineTree (_gbfa ,nil ,nil ,nil );if _eggge !=nil {return nil ,_eggge ;};_ae .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_gfabd );
return _gfabd ,nil ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_aagdc *Image )AlphaMap (mapFunc AlphaMapFunc ){for _bbfd ,_bebga :=range _aagdc ._bbcf {_aagdc ._bbcf [_bbfd ]=mapFunc (_bebga );};};

// IsShading specifies if the pattern is a shading pattern.
func (_cdceb *PdfPattern )IsShading ()bool {return _cdceb .PatternType ==2};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_aag :=NewPdfAnnotation ();_ffbg :=&PdfAnnotationSound {};_ffbg .PdfAnnotation =_aag ;_ffbg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aag .SetContext (_ffbg );return _ffbg ;};func _ggada ()string {_gdggd .Lock ();
defer _gdggd .Unlock ();_afcfd :=_agc .GetLicenseKey ();if len (_gbcd )> 0&&(_afcfd .IsLicensed ()||_afbb ){return _gbcd ;};return _c .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_aaegf (),_afcfd .TypeToString ());
};func _geda (_ceeab *_ac .ImageBase )(_dbcfg Image ){_dbcfg .Width =int64 (_ceeab .Width );_dbcfg .Height =int64 (_ceeab .Height );_dbcfg .BitsPerComponent =int64 (_ceeab .BitsPerComponent );_dbcfg .ColorComponents =_ceeab .ColorComponents ;_dbcfg .Data =_ceeab .Data ;
_dbcfg ._bfdc =_ceeab .Decode ;_dbcfg ._bbcf =_ceeab .Alpha ;return _dbcfg ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_cgbeg *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _daa .GetNumberAsFloat (_cgbeg .Descent );};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _daa .PdfObject ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_ecec _dgg .ReadSeeker ;_cbadc *_daa .PdfParser ;_egaf *PdfReader ;Reader *PdfReader ;_ffda []*PdfPage ;_bgcb *PdfAcroForm ;_cfbe *DSS ;_ddda *Permissions ;_eccg _daa .XrefTable ;_egfa int64 ;_ddga int ;_eccf []_daa .PdfObject ;
_bbgd map[_daa .PdfObject ]struct{};_fedb map[_daa .PdfObject ]int64 ;_dabd map[_daa .PdfObject ]struct{};_dbff map[_daa .PdfObject ]struct{};_acf int64 ;_gfbf bool ;_eefb string ;_fcfb *EncryptOptions ;_eagb *PdfInfo ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_cg .DiffResults ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _d .Time ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_gdbab *PdfOutlineItem )GetContainingPdfObject ()_daa .PdfObject {return _gdbab ._begdg };

// Duplicate creates a duplicate page based on the current one and returns it.
func (_cebga *PdfPage )Duplicate ()*PdfPage {_gcbbee :=*_cebga ;_gcbbee ._bbcff =_daa .MakeDict ();_gcbbee ._cfgb =_daa .MakeIndirectObject (_gcbbee ._bbcff );_gcbbee ._cdef =*_gcbbee ._bbcff ;return &_gcbbee ;};func _aaegf ()string {return _ae .Version };


// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_daa .PdfObjectString ;Author *_daa .PdfObjectString ;Subject *_daa .PdfObjectString ;Keywords *_daa .PdfObjectString ;Creator *_daa .PdfObjectString ;Producer *_daa .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_daa .PdfObjectName ;_agbg *_daa .PdfObjectDictionary ;};

// HasFontByName checks if has font resource by name.
func (_edfdc *PdfPage )HasFontByName (name _daa .PdfObjectName )bool {_acgef ,_geabg :=_edfdc .Resources .Font .(*_daa .PdfObjectDictionary );if !_geabg {return false ;};if _gfcd :=_acgef .Get (name );_gfcd !=nil {return true ;};return false ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_cdacg *PdfOutlineItem )ToPdfObject ()_daa .PdfObject {_eeefd :=_cdacg ._begdg ;_acad :=_eeefd .PdfObject .(*_daa .PdfObjectDictionary );_acad .Set ("\u0054\u0069\u0074l\u0065",_cdacg .Title );if _cdacg .A !=nil {_acad .Set ("\u0041",_cdacg .A );
};if _bgecf :=_acad .Get ("\u0053\u0045");_bgecf !=nil {_acad .Remove ("\u0053\u0045");};if _cdacg .C !=nil {_acad .Set ("\u0043",_cdacg .C );};if _cdacg .Dest !=nil {_acad .Set ("\u0044\u0065\u0073\u0074",_cdacg .Dest );};if _cdacg .F !=nil {_acad .Set ("\u0046",_cdacg .F );
};if _cdacg .Count !=nil {_acad .Set ("\u0043\u006f\u0075n\u0074",_daa .MakeInteger (*_cdacg .Count ));};if _cdacg .Next !=nil {_acad .Set ("\u004e\u0065\u0078\u0074",_cdacg .Next .ToPdfObject ());};if _cdacg .First !=nil {_acad .Set ("\u0046\u0069\u0072s\u0074",_cdacg .First .ToPdfObject ());
};if _cdacg .Prev !=nil {_acad .Set ("\u0050\u0072\u0065\u0076",_cdacg .Prev .GetContext ().GetContainingPdfObject ());};if _cdacg .Last !=nil {_acad .Set ("\u004c\u0061\u0073\u0074",_cdacg .Last .GetContext ().GetContainingPdfObject ());};if _cdacg .Parent !=nil {_acad .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cdacg .Parent .GetContext ().GetContainingPdfObject ());
};return _eeefd ;};

// IsColored specifies if the pattern is colored.
func (_egcfbe *PdfTilingPattern )IsColored ()bool {if _egcfbe .PaintType !=nil &&*_egcfbe .PaintType ==1{return true ;};return false ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_ebedb *Image )GetParamsDict ()*_daa .PdfObjectDictionary {_fgfae :=_daa .MakeDict ();_fgfae .Set ("\u0057\u0069\u0064t\u0068",_daa .MakeInteger (_ebedb .Width ));_fgfae .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_daa .MakeInteger (_ebedb .Height ));
_fgfae .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_daa .MakeInteger (int64 (_ebedb .ColorComponents )));_fgfae .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_daa .MakeInteger (_ebedb .BitsPerComponent ));
return _fgfae ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_adbdb *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _adbdb ._febda ==nil {_adbdb .GetAnnotations ();};_adbdb ._febda =append (_adbdb ._febda ,annot );};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_aedc *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_ggeb :=func (_eebg float64 )float64 {if _eebg >=6.0/29{return _eebg *_eebg *_eebg ;};return 108.0/841*(_eebg -4.0/29.0);};_dbcf :=img ._bfdc ;if len (_dbcf )!=6{_ae .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_dbcf =_aedc .DecodeArray ();};_fccd :=_gf .NewReader (img .getBase ());_beag :=_ac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._bbcf ,img ._bfdc );_defg :=_gf .NewWriter (_beag );_cgece :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;
_cegfb :=make ([]uint32 ,3);var (_abfe error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_aafc ,_bggd ,_cbgf float64 ;);for {_abfe =_fccd .ReadSamples (_cegfb );if _abfe ==_dgg .EOF {break ;}else if _abfe !=nil {return img ,_abfe ;};Ls =float64 (_cegfb [0])/_cgece ;
As =float64 (_cegfb [1])/_cgece ;Bs =float64 (_cegfb [2])/_cgece ;Ls =_ac .LinearInterpolate (Ls ,0.0,1.0,_dbcf [0],_dbcf [1]);As =_ac .LinearInterpolate (As ,0.0,1.0,_dbcf [2],_dbcf [3]);Bs =_ac .LinearInterpolate (Bs ,0.0,1.0,_dbcf [4],_dbcf [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_aedc .WhitePoint [0]*_ggeb (L );Y =_aedc .WhitePoint [1]*_ggeb (M );Z =_aedc .WhitePoint [2]*_ggeb (N );_aafc =3.240479*X +-1.537150*Y +-0.498535*Z ;_bggd =-0.969256*X +1.875992*Y +0.041556*Z ;_cbgf =0.055648*X +-0.204043*Y +1.057311*Z ;
_aafc =_ce .Min (_ce .Max (_aafc ,0),1.0);_bggd =_ce .Min (_ce .Max (_bggd ,0),1.0);_cbgf =_ce .Min (_ce .Max (_cbgf ,0),1.0);_cegfb [0]=uint32 (_aafc *_cgece );_cegfb [1]=uint32 (_bggd *_cgece );_cegfb [2]=uint32 (_cbgf *_cgece );if _abfe =_defg .WriteSamples (_cegfb );
_abfe !=nil {return img ,_abfe ;};};return _geda (&_beag ),nil ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_gdebd *PdfPageResources )GetXObjectByName (keyName _daa .PdfObjectName )(*_daa .PdfObjectStream ,XObjectType ){if _gdebd .XObject ==nil {return nil ,XObjectTypeUndefined ;};_eccef ,_cfbab :=_daa .TraceToDirectObject (_gdebd .XObject ).(*_daa .PdfObjectDictionary );
if !_cfbab {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_daa .TraceToDirectObject (_gdebd .XObject ));
return nil ,XObjectTypeUndefined ;};if _becc :=_eccef .Get (keyName );_becc !=nil {_cdgab ,_aafcg :=_daa .GetStream (_becc );if !_aafcg {_ae .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_becc );
return nil ,XObjectTypeUndefined ;};_gfgbc :=_cdgab .PdfObjectDictionary ;_ffbge ,_aafcg :=_daa .TraceToDirectObject (_gfgbc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_daa .PdfObjectName );if !_aafcg {_ae .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_gfgbc .String ());
return nil ,XObjectTypeUndefined ;};if *_ffbge =="\u0049\u006d\u0061g\u0065"{return _cdgab ,XObjectTypeImage ;}else if *_ffbge =="\u0046\u006f\u0072\u006d"{return _cdgab ,XObjectTypeForm ;}else if *_ffbge =="\u0050\u0053"{return _cdgab ,XObjectTypePS ;
}else {_ae .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_ffbge );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// ToPdfObject implements interface PdfModel.
func (_fedc *PdfAnnotationHighlight )ToPdfObject ()_daa .PdfObject {_fedc .PdfAnnotation .ToPdfObject ();_faag :=_fedc ._gbf ;_agca :=_faag .PdfObject .(*_daa .PdfObjectDictionary );_fedc .PdfAnnotationMarkup .appendToPdfDictionary (_agca );_agca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_agca .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fedc .QuadPoints );return _faag ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_caadeg :=&PdfPageResourcesColorspaces {};_caadeg .Names =[]string {};_caadeg .Colorspaces =map[string ]PdfColorspace {};_caadeg ._cbgge =&_daa .PdfIndirectObject {};return _caadeg ;};
func (_ccfaf *PdfWriter )writeString (_faffb string ){if _ccfaf ._ccfbf !=nil {return ;};_fbgae ,_egdfd :=_ccfaf ._ccbbdb .WriteString (_faffb );_ccfaf ._badfb +=int64 (_fbgae );_ccfaf ._ccfbf =_egdfd ;};func (_ebfgdaf *PdfWriter )checkLicense ()error {_cdcafg :=_agc .GetLicenseKey ();
if (_cdcafg ==nil ||!_cdcafg .IsLicensed ())&&!_afbb {_c .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_c .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ff .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_agdd *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_adcf pdfFontType3 )GetRuneMetrics (r rune )(_ec .CharMetrics ,bool ){_agdb :=_adcf .Encoder ();if _agdb ==nil {_ae .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_adcf );
return _ec .CharMetrics {},false ;};_fabdb ,_fcca :=_agdb .RuneToCharcode (r );if !_fcca {if r !=' '{_ae .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_adcf );
};return _ec .CharMetrics {},false ;};_eedag ,_dcaf :=_adcf .GetCharMetrics (_fabdb );return _eedag ,_dcaf ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bbdcb pdfCIDFontType0 )GetRuneMetrics (r rune )(_ec .CharMetrics ,bool ){return _ec .CharMetrics {Wx :_bbdcb ._bgcca },true ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_dddbe *PdfOutline )GetContainingPdfObject ()_daa .PdfObject {return _dddbe ._agecd };

// AddImageResource adds an image to the XObject resources.
func (_fbfce *PdfPage )AddImageResource (name _daa .PdfObjectName ,ximg *XObjectImage )error {var _fccfba *_daa .PdfObjectDictionary ;if _fbfce .Resources .XObject ==nil {_fccfba =_daa .MakeDict ();_fbfce .Resources .XObject =_fccfba ;}else {var _begca bool ;
_fccfba ,_begca =(_fbfce .Resources .XObject ).(*_daa .PdfObjectDictionary );if !_begca {return _ff .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_fccfba .Set (name ,ximg .ToPdfObject ());
return nil ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_fdbec *PdfWriter )SetCatalogMetadata (meta _daa .PdfObject )error {if meta ==nil {_fdbec ._dbae .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_bgeda ,_cgcdffd :=_daa .GetStream (meta );if !_cgcdffd {return _ff .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_fdbec .addObject (_bgeda );_fdbec ._dbae .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bgeda );return nil ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_cba :=NewPdfAction ();_aaf :=&PdfActionSetOCGState {};_aaf .PdfAction =_cba ;_cba .SetContext (_aaf );return _aaf ;};func (_aeeb *pdfFontType0 )baseFields ()*fontCommon {return &_aeeb .fontCommon };


// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_fagg *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func (_begbf *PdfWriter )copyObject (_gagdg _daa .PdfObject ,_bdacb map[_daa .PdfObject ]_daa .PdfObject ,_dbfga map[_daa .PdfObject ]struct{},_accgc bool )_daa .PdfObject {_fcead :=!_begbf ._ffde &&_dbfga !=nil ;
if _ggbbgbc ,_ddbc :=_bdacb [_gagdg ];_ddbc {if _fcead &&!_accgc {delete (_dbfga ,_gagdg );};return _ggbbgbc ;};if _gagdg ==nil {_faagb :=_daa .MakeNull ();return _faagb ;};_geecg :=_gagdg ;switch _dcfea :=_gagdg .(type ){case *_daa .PdfObjectArray :_acgca :=_daa .MakeArray ();
_geecg =_acgca ;_bdacb [_gagdg ]=_geecg ;for _ ,_gdaeb :=range _dcfea .Elements (){_acgca .Append (_begbf .copyObject (_gdaeb ,_bdacb ,_dbfga ,_accgc ));};case *_daa .PdfObjectStreams :_fgbcb :=&_daa .PdfObjectStreams {PdfObjectReference :_dcfea .PdfObjectReference };
_geecg =_fgbcb ;_bdacb [_gagdg ]=_geecg ;for _ ,_bfefa :=range _dcfea .Elements (){_fgbcb .Append (_begbf .copyObject (_bfefa ,_bdacb ,_dbfga ,_accgc ));};case *_daa .PdfObjectStream :_dgadcf :=&_daa .PdfObjectStream {Stream :_dcfea .Stream ,PdfObjectReference :_dcfea .PdfObjectReference };
_geecg =_dgadcf ;_bdacb [_gagdg ]=_geecg ;_dgadcf .PdfObjectDictionary =_begbf .copyObject (_dcfea .PdfObjectDictionary ,_bdacb ,_dbfga ,_accgc ).(*_daa .PdfObjectDictionary );case *_daa .PdfObjectDictionary :var _cefed bool ;if _fcead &&!_accgc {if _fccc ,_ :=_daa .GetNameVal (_dcfea .Get ("\u0054\u0079\u0070\u0065"));
_fccc =="\u0050\u0061\u0067\u0065"{_ ,_egfceg :=_begbf ._dgaggb [_dcfea ];_accgc =!_egfceg ;_cefed =_accgc ;};};_aagge :=_daa .MakeDict ();_geecg =_aagge ;_bdacb [_gagdg ]=_geecg ;for _ ,_cdbaf :=range _dcfea .Keys (){_aagge .Set (_cdbaf ,_begbf .copyObject (_dcfea .Get (_cdbaf ),_bdacb ,_dbfga ,_accgc ));
};if _cefed {_geecg =_daa .MakeNull ();_accgc =false ;};case *_daa .PdfIndirectObject :_ffaffg :=&_daa .PdfIndirectObject {PdfObjectReference :_dcfea .PdfObjectReference };_geecg =_ffaffg ;_bdacb [_gagdg ]=_geecg ;_ffaffg .PdfObject =_begbf .copyObject (_dcfea .PdfObject ,_bdacb ,_dbfga ,_accgc );
case *_daa .PdfObjectString :_feff :=*_dcfea ;_geecg =&_feff ;_bdacb [_gagdg ]=_geecg ;case *_daa .PdfObjectName :_bedec :=*_dcfea ;_geecg =&_bedec ;_bdacb [_gagdg ]=_geecg ;case *_daa .PdfObjectNull :_geecg =_daa .MakeNull ();_bdacb [_gagdg ]=_geecg ;
case *_daa .PdfObjectInteger :_dcdgd :=*_dcfea ;_geecg =&_dcdgd ;_bdacb [_gagdg ]=_geecg ;case *_daa .PdfObjectReference :_ddba :=*_dcfea ;_geecg =&_ddba ;_bdacb [_gagdg ]=_geecg ;case *_daa .PdfObjectFloat :_befbg :=*_dcfea ;_geecg =&_befbg ;_bdacb [_gagdg ]=_geecg ;
case *_daa .PdfObjectBool :_gefab :=*_dcfea ;_geecg =&_gefab ;_bdacb [_gagdg ]=_geecg ;case *pdfSignDictionary :_cffdd :=&pdfSignDictionary {PdfObjectDictionary :_daa .MakeDict (),_ebebc :_dcfea ._ebebc ,_ebeaa :_dcfea ._ebeaa };_geecg =_cffdd ;_bdacb [_gagdg ]=_geecg ;
for _ ,_beaed :=range _dcfea .Keys (){_cffdd .Set (_beaed ,_begbf .copyObject (_dcfea .Get (_beaed ),_bdacb ,_dbfga ,_accgc ));};default:_ae .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gagdg );
};if _fcead &&_accgc {_dbfga [_gagdg ]=struct{}{};};return _geecg ;};type pdfFontType3 struct{fontCommon ;_cgdbe *_daa .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _daa .PdfObject ;Encoding _daa .PdfObject ;FontBBox _daa .PdfObject ;FontMatrix _daa .PdfObject ;FirstChar _daa .PdfObject ;LastChar _daa .PdfObject ;Widths _daa .PdfObject ;Resources _daa .PdfObject ;_cbbg map[_df .CharCode ]float64 ;_bcgac _df .TextEncoder ;
};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_decc *PdfPageResources )GetFontByName (keyName _daa .PdfObjectName )(_daa .PdfObject ,bool ){if _decc .Font ==nil {return nil ,false ;};_gbca ,_debc :=_daa .TraceToDirectObject (_decc .Font ).(*_daa .PdfObjectDictionary );if !_debc {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_daa .TraceToDirectObject (_decc .Font ));
return nil ,false ;};if _baaga :=_gbca .Get (keyName );_baaga !=nil {return _baaga ,true ;};return nil ,false ;};

// ToPdfObject converts date to a PDF string object.
func (_cbefg *PdfDate )ToPdfObject ()_daa .PdfObject {_dcaag :=_c .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_cbefg ._agdgd ,_cbefg ._gdeeb ,_cbefg ._ebdeb ,_cbefg ._bcgga ,_cbefg ._ffab ,_cbefg ._dfad ,_cbefg ._cdacd ,_cbefg ._ecbeb ,_cbefg ._ggbbf );
return _daa .MakeString (_dcaag );};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_cffgg *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_aedag :=_cffgg .GetContentStreamObjs ();wrapContents =wrapContents &&len (_aedag )> 0;_gaae :=_daa .NewFlateEncoder ();_dbded :=_daa .MakeArray ();if wrapContents {_abeac ,_bfabc :=_daa .MakeStream ([]byte ("\u0071\u000a"),_gaae );
if _bfabc !=nil {return _bfabc ;};_dbded .Append (_abeac );};_dbded .Append (_aedag ...);if wrapContents {_beeef ,_egfce :=_daa .MakeStream ([]byte ("\u000a\u0051\u000a"),_gaae );if _egfce !=nil {return _egfce ;};_dbded .Append (_beeef );};_bfeab ,_ceeeca :=_daa .MakeStream (cs ,_gaae );
if _ceeeca !=nil {return _ceeeca ;};_dbded .Append (_bfeab );_cffgg .Contents =_dbded ;return nil ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_eeebd *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_ebbca :=_gf .NewReader (img .getBase ());_gbec :=_ac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_eeebd .AlternateSpace .GetNumComponents (),nil ,img ._bbcf ,nil );
_aebg :=_gf .NewWriter (_gbec );_aabb :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_ae .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_ae .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_eeebd .TintTransform );_fbac :=_eeebd .AlternateSpace .DecodeArray ();var (_eagf uint32 ;_aada error ;);for {_eagf ,_aada =_ebbca .ReadSample ();
if _aada ==_dgg .EOF {break ;};if _aada !=nil {return img ,_aada ;};_caed :=float64 (_eagf )/_aabb ;_gdacd ,_cffc :=_eeebd .TintTransform .Evaluate ([]float64 {_caed });if _cffc !=nil {return img ,_cffc ;};for _gbaea ,_aded :=range _gdacd {_eaace :=_ac .LinearInterpolate (_aded ,_fbac [_gbaea *2],_fbac [_gbaea *2+1],0,1);
if _cffc =_aebg .WriteSample (uint32 (_eaace *_aabb ));_cffc !=nil {return img ,_cffc ;};};};return _eeebd .AlternateSpace .ImageToRGB (_geda (&_gbec ));};

// ToPdfObject implements interface PdfModel.
func (_ggc *PdfAnnotationCircle )ToPdfObject ()_daa .PdfObject {_ggc .PdfAnnotation .ToPdfObject ();_ddcc :=_ggc ._gbf ;_acb :=_ddcc .PdfObject .(*_daa .PdfObjectDictionary );_ggc .PdfAnnotationMarkup .appendToPdfDictionary (_acb );_acb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_acb .SetIfNotNil ("\u0042\u0053",_ggc .BS );_acb .SetIfNotNil ("\u0049\u0043",_ggc .IC );_acb .SetIfNotNil ("\u0042\u0045",_ggc .BE );_acb .SetIfNotNil ("\u0052\u0044",_ggc .RD );return _ddcc ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func (_ceegf *PdfReader )newPdfPageFromDict (_baafd *_daa .PdfObjectDictionary )(*PdfPage ,error ){_fabf :=NewPdfPage ();_fabf ._bbcff =_baafd ;_fabf ._cdef =*_baafd ;_gcdfa :=*_baafd ;_bcbc ,_eegcc :=_gcdfa .Get ("\u0054\u0079\u0070\u0065").(*_daa .PdfObjectName );
if !_eegcc {return nil ,_ff .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_bcbc !="\u0050\u0061\u0067\u0065"{return nil ,_ff .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");
};if _bcbdb :=_gcdfa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_bcbdb !=nil {_fabf .Parent =_bcbdb ;};if _cbbag :=_gcdfa .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_cbbag !=nil {_ggebc ,_fdgge :=_daa .GetString (_cbbag );
if !_fdgge {return nil ,_ff .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};
_ebedd ,_gaefg :=NewPdfDate (_ggebc .Str ());if _gaefg !=nil {return nil ,_gaefg ;};_fabf .LastModified =&_ebedd ;};if _adbbb :=_gcdfa .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_adbbb !=nil &&!_daa .IsNullObject (_adbbb ){_afdb ,_gcbccc :=_daa .GetDict (_adbbb );
if !_gcbccc {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_adbbb );};var _ffeb error ;_fabf .Resources ,_ffeb =NewPdfPageResourcesFromDict (_afdb );
if _ffeb !=nil {return nil ,_ffeb ;};}else {_beaa ,_gefde :=_fabf .getParentResources ();if _gefde !=nil {return nil ,_gefde ;};if _beaa ==nil {_beaa =NewPdfPageResources ();};_fabf .Resources =_beaa ;};if _gegbf :=_gcdfa .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_gegbf !=nil {_dfege ,_fgeec :=_daa .GetArray (_gegbf );if !_fgeec {return nil ,_ff .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _ggge error ;
_fabf .MediaBox ,_ggge =NewPdfRectangle (*_dfege );if _ggge !=nil {return nil ,_ggge ;};};if _fcbgbg :=_gcdfa .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_fcbgbg !=nil {_afgde ,_aaacc :=_daa .GetArray (_fcbgbg );if !_aaacc {return nil ,_ff .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _beaba error ;_fabf .CropBox ,_beaba =NewPdfRectangle (*_afgde );if _beaba !=nil {return nil ,_beaba ;};};if _eaaee :=_gcdfa .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_eaaee !=nil {_bbfdc ,_cbgdb :=_daa .GetArray (_eaaee );if !_cbgdb {return nil ,_ff .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _fceae error ;_fabf .BleedBox ,_fceae =NewPdfRectangle (*_bbfdc );if _fceae !=nil {return nil ,_fceae ;};};if _cfddd :=_gcdfa .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_cfddd !=nil {_bfgg ,_cggd :=_daa .GetArray (_cfddd );if !_cggd {return nil ,_ff .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _aecd error ;_fabf .TrimBox ,_aecd =NewPdfRectangle (*_bfgg );if _aecd !=nil {return nil ,_aecd ;};};if _bggbd :=_gcdfa .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_bggbd !=nil {_daeae ,_gcddb :=_daa .GetArray (_bggbd );if !_gcddb {return nil ,_ff .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _gbaga error ;_fabf .ArtBox ,_gbaga =NewPdfRectangle (*_daeae );if _gbaga !=nil {return nil ,_gbaga ;};};if _ceadd :=_gcdfa .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_ceadd !=nil {_fabf .BoxColorInfo =_ceadd ;};
if _eegd :=_gcdfa .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_eegd !=nil {_fabf .Contents =_eegd ;};if _dacbc :=_gcdfa .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_dacbc !=nil {_edggc ,_egbc :=_daa .GetNumberAsInt64 (_dacbc );if _egbc !=nil {return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_fabf .Rotate =&_edggc ;};if _dgegg :=_gcdfa .Get ("\u0047\u0072\u006fu\u0070");_dgegg !=nil {_fabf .Group =_dgegg ;};if _fgdg :=_gcdfa .Get ("\u0054\u0068\u0075m\u0062");_fgdg !=nil {_fabf .Thumb =_fgdg ;};if _defcb :=_gcdfa .Get ("\u0042");_defcb !=nil {_fabf .B =_defcb ;
};if _egcfc :=_gcdfa .Get ("\u0044\u0075\u0072");_egcfc !=nil {_fabf .Dur =_egcfc ;};if _aabcc :=_gcdfa .Get ("\u0054\u0072\u0061n\u0073");_aabcc !=nil {_fabf .Trans =_aabcc ;};if _efdd :=_gcdfa .Get ("\u0041\u0041");_efdd !=nil {_fabf .AA =_efdd ;};if _egbdc :=_gcdfa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_egbdc !=nil {_fabf .Metadata =_egbdc ;};if _adace :=_gcdfa .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_adace !=nil {_fabf .PieceInfo =_adace ;};if _gfbbg :=_gcdfa .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_gfbbg !=nil {_fabf .StructParents =_gfbbg ;};if _ffggc :=_gcdfa .Get ("\u0049\u0044");_ffggc !=nil {_fabf .ID =_ffggc ;};if _eabgd :=_gcdfa .Get ("\u0050\u005a");_eabgd !=nil {_fabf .PZ =_eabgd ;};if _egdga :=_gcdfa .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_egdga !=nil {_fabf .SeparationInfo =_egdga ;};if _gbegg :=_gcdfa .Get ("\u0054\u0061\u0062\u0073");_gbegg !=nil {_fabf .Tabs =_gbegg ;};if _bdcfc :=_gcdfa .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_bdcfc !=nil {_fabf .TemplateInstantiated =_bdcfc ;};if _fcfa :=_gcdfa .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_fcfa !=nil {_fabf .PresSteps =_fcfa ;};if _cgde :=_gcdfa .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_cgde !=nil {_fabf .UserUnit =_cgde ;
};if _ecfec :=_gcdfa .Get ("\u0056\u0050");_ecfec !=nil {_fabf .VP =_ecfec ;};if _dbbff :=_gcdfa .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_dbbff !=nil {_fabf .Annots =_dbbff ;};_fabf ._badgb =_ceegf ;return _fabf ,nil ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_gabf :=NewPdfAnnotation ();_fgfg :=&PdfAnnotationCircle {};_fgfg .PdfAnnotation =_gabf ;_fgfg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gabf .SetContext (_fgfg );return _fgfg ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_fcefg PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _fcefg ._gbbee .getFontDescriptor (),nil ;};

// GetFillImage get attached model.Image in push button.
func (_ffff *PdfFieldButton )GetFillImage ()*Image {if _ffff .IsPush (){return _ffff ._bdecg ;};return nil ;};func (_ccd *PdfReader )newPdfAnnotationMarkupFromDict (_gebd *_daa .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_acdc :=&PdfAnnotationMarkup {};
if _gdgde :=_gebd .Get ("\u0054");_gdgde !=nil {_acdc .T =_gdgde ;};if _feca :=_gebd .Get ("\u0050\u006f\u0070u\u0070");_feca !=nil {_eega ,_eceb :=_feca .(*_daa .PdfIndirectObject );if !_eceb {if _ ,_ggdg :=_feca .(*_daa .PdfObjectNull );!_ggdg {return nil ,_ff .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_def ,_daf :=_ccd .newPdfAnnotationFromIndirectObject (_eega );if _daf !=nil {return nil ,_daf ;};if _def !=nil {_ccab ,_cdgb :=_def ._bea .(*PdfAnnotationPopup );if !_cdgb {return nil ,_ff .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_acdc .Popup =_ccab ;};};};if _gde :=_gebd .Get ("\u0043\u0041");_gde !=nil {_acdc .CA =_gde ;};if _ffc :=_gebd .Get ("\u0052\u0043");_ffc !=nil {_acdc .RC =_ffc ;};if _agd :=_gebd .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_agd !=nil {_acdc .CreationDate =_agd ;};if _bfdaf :=_gebd .Get ("\u0049\u0052\u0054");_bfdaf !=nil {_acdc .IRT =_bfdaf ;};if _eegea :=_gebd .Get ("\u0053\u0075\u0062\u006a");_eegea !=nil {_acdc .Subj =_eegea ;};if _gdbg :=_gebd .Get ("\u0052\u0054");_gdbg !=nil {_acdc .RT =_gdbg ;
};if _ecdg :=_gebd .Get ("\u0049\u0054");_ecdg !=nil {_acdc .IT =_ecdg ;};if _fff :=_gebd .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_fff !=nil {_acdc .ExData =_fff ;};return _acdc ,nil ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_daa .PdfObjectInteger ;TilingType *_daa .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_daa .PdfObjectFloat ;YStep *_daa .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_daa .PdfObjectArray ;};
func _ecefd (_bdcce string )map[string ]string {_edce :=_deca .Split (_bdcce ,-1);_edggf :=map[string ]string {};for _ ,_dcecb :=range _edce {_gdfge :=_bfeg .FindStringSubmatch (_dcecb );if _gdfge ==nil {continue ;};_fgad ,_beadd :=_gdfge [1],_gdfge [2];
_edggf [_fgad ]=_beadd ;};return _edggf ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_acggb *PdfReader )GetCatalogMarkInfo ()(_daa .PdfObject ,bool ){if _acggb ._cgace ==nil {return nil ,false ;};_cacgb :=_acggb ._cgace .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _cacgb ,_cacgb !=nil ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_babab *PdfInfo )AddCustomInfo (name string ,value string )error {if _babab ._agbg ==nil {_babab ._agbg =_daa .MakeDict ();};if _ ,_fdfe :=_ggced [name ];_fdfe {return _c .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_babab ._agbg .SetIfNotNil (*_daa .MakeName (name ),_daa .MakeString (value ));return nil ;};func (_aaebd *PdfWriter )optimizeDocument ()error {if _aaebd ._bbfad ==nil {return nil ;};_bgbce ,_faefa :=_daa .GetDict (_aaebd ._badb );if !_faefa {return _ff .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_edcce :=_cbe .Document {ID :[2]string {_aaebd ._adcff ,_aaebd ._cgfaa },Version :_aaebd ._abfcb ,Objects :_aaebd ._aaaae ,Info :_bgbce ,Crypt :_aaebd ._bcce ,UseHashBasedID :_aaebd ._gbcf };if _bfeag :=_aaebd ._bbfad .ApplyStandard (&_edcce );_bfeag !=nil {return _bfeag ;
};_aaebd ._adcff ,_aaebd ._cgfaa =_edcce .ID [0],_edcce .ID [1];_aaebd ._abfcb =_edcce .Version ;_aaebd ._aaaae =_edcce .Objects ;_aaebd ._badb .PdfObject =_edcce .Info ;_aaebd ._gbcf =_edcce .UseHashBasedID ;_aaebd ._bcce =_edcce .Crypt ;_gefcb :=make (map[_daa .PdfObject ]struct{},len (_aaebd ._aaaae ));
for _ ,_adecb :=range _aaebd ._aaaae {_gefcb [_adecb ]=struct{}{};};_aaebd ._egfgg =_gefcb ;return nil ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_gdbe *PdfColorspaceICCBased )GetContainingPdfObject ()_daa .PdfObject {return _gdbe ._ecbf };

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_ggaaf *Image )ConvertToBinary ()error {if _ggaaf .ColorComponents ==1&&_ggaaf .BitsPerComponent ==1{return nil ;};_cfag ,_aagfa :=_ggaaf .ToGoImage ();if _aagfa !=nil {return _aagfa ;};_dabag ,_aagfa :=_ac .MonochromeConverter .Convert (_cfag );
if _aagfa !=nil {return _aagfa ;};_ggaaf .Data =_dabag .Base ().Data ;_ggaaf ._bbcf ,_aagfa =_ac .ScaleAlphaToMonochrome (_ggaaf ._bbcf ,int (_ggaaf .Width ),int (_ggaaf .Height ));if _aagfa !=nil {return _aagfa ;};_ggaaf .BitsPerComponent =1;_ggaaf .ColorComponents =1;
_ggaaf ._bfdc =nil ;return nil ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_fddad *LTV )EnableAll (extraCerts []*_e .Certificate )error {_defe :=_fddad ._ceaa ._egaf .AcroForm ;for _ ,_cbba :=range _defe .AllFields (){_ecaa ,_ :=_cbba .GetContext ().(*PdfFieldSignature );if _ecaa ==nil {continue ;};_aeba :=_ecaa .V ;if _dgbf :=_fddad .validateSig (_aeba );
_dgbf !=nil {_ae .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_dgbf );
};if _egbg :=_fddad .Enable (_aeba ,extraCerts );_egbg !=nil {return _egbg ;};};return nil ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_abca *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _daa .GetNumberAsFloat (_abca .XHeight );};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_cdbfc PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_daa .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_ffbd []_daa .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bfdf []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_dggf :=NewPdfAnnotation ();_dag :=&PdfAnnotationFileAttachment {};_dag .PdfAnnotation =_dggf ;_dag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dggf .SetContext (_dag );return _dag ;
};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_dfcd *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ff .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_aefb ,_fbfcg :=_ac .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bbcf ,img ._bfdc );if _fbfcg !=nil {return img ,_fbfcg ;};_ffgb ,_fbfcg :=_ac .NRGBAConverter .Convert (_aefb );if _fbfcg !=nil {return img ,_fbfcg ;
};_dddg :=_geda (_ffgb .Base ());_ae .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_ae .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_ae .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_dddg .Data );
_ae .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_dddg );return _dddg ,nil ;};func (_eaeff *PdfFont )baseFields ()*fontCommon {if _eaeff ._gbbee ==nil {_ae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _eaeff ._gbbee .baseFields ();};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_edd :=NewPdfAnnotation ();_gabe :=&PdfAnnotationPrinterMark {};_gabe .PdfAnnotation =_edd ;_edd .SetContext (_gabe );return _gabe ;};

// CustomKeys returns all custom info keys as list.
func (_fagf *PdfInfo )CustomKeys ()[]string {if _fagf ._agbg ==nil {return nil ;};_beca :=make ([]string ,len (_fagf ._agbg .Keys ()));for _ ,_bdgf :=range _fagf ._agbg .Keys (){_beca =append (_beca ,_bdgf .String ());};return _beca ;};

// SetAlpha sets the alpha layer for the image.
func (_acged *Image )SetAlpha (alpha []byte ){_acged ._bbcf =alpha };

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _daa .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_daa .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_ccceg ,_afaa :=encoder .EncodeBytes (img .Data );
if _afaa !=nil {_ae .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_afaa );return nil ,_afaa ;};_cggcg :=NewXObjectImage ();_ecfgbc :=img .Width ;_gaegd :=img .Height ;
_cggcg .Width =&_ecfgbc ;_cggcg .Height =&_gaegd ;_cedba :=img .BitsPerComponent ;_cggcg .BitsPerComponent =&_cedba ;_cggcg .Filter =encoder ;_cggcg .Stream =_ccceg ;if cs ==nil {if img .ColorComponents ==1{_cggcg .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_cggcg .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_cggcg .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ff .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_cggcg .ColorSpace =cs ;};if len (img ._bbcf )!=0{_fdbfb :=NewXObjectImage ();_fdbfb .Filter =encoder ;_gdcae ,_eacbc :=encoder .EncodeBytes (img ._bbcf );if _eacbc !=nil {_ae .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_eacbc );
return nil ,_eacbc ;};_fdbfb .Stream =_gdcae ;_fdbfb .BitsPerComponent =_cggcg .BitsPerComponent ;_fdbfb .Width =&img .Width ;_fdbfb .Height =&img .Height ;_fdbfb .ColorSpace =NewPdfColorspaceDeviceGray ();_cggcg .SMask =_fdbfb .ToPdfObject ();}else {_cggcg .SMask =xobjIn .SMask ;
_cggcg .ImageMask =xobjIn .ImageMask ;if _cggcg .ColorSpace .GetNumComponents ()==1{_cdbge (_cggcg );};};return _cggcg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_egab *PdfActionURI )ToPdfObject ()_daa .PdfObject {_egab .PdfAction .ToPdfObject ();_gcg :=_egab ._ad ;_adg :=_gcg .PdfObject .(*_daa .PdfObjectDictionary );_adg .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeURI )));_adg .SetIfNotNil ("\u0055\u0052\u0049",_egab .URI );
_adg .SetIfNotNil ("\u0049\u0073\u004da\u0070",_egab .IsMap );return _gcg ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_cfcg :=NewPdfAction ();_dca :=&PdfActionHide {};_dca .PdfAction =_cfcg ;_cfcg .SetContext (_dca );return _dca ;};func (_cbdd *PdfAppender )mergeResources (_ggde ,_adfd _daa .PdfObject ,_aacgb map[_daa .PdfObjectName ]_daa .PdfObjectName )_daa .PdfObject {if _adfd ==nil &&_ggde ==nil {return nil ;
};if _adfd ==nil {return _ggde ;};_dbgg ,_debe :=_daa .GetDict (_adfd );if !_debe {return _ggde ;};if _ggde ==nil {_bebd :=_daa .MakeDict ();_bebd .Merge (_dbgg );return _adfd ;};_accf ,_debe :=_daa .GetDict (_ggde );if !_debe {_ae .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_accf =_daa .MakeDict ();};for _ ,_cbdde :=range _dbgg .Keys (){if _cafg ,_gabeb :=_aacgb [_cbdde ];_gabeb {_accf .Set (_cafg ,_dbgg .Get (_cbdde ));}else {_accf .Set (_cbdde ,_dbgg .Get (_cbdde ));};};return _accf ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_ffgae *PdfFieldText )ToPdfObject ()_daa .PdfObject {_ffgae .PdfField .ToPdfObject ();_ddec :=_ffgae ._caaee ;_cagf :=_ddec .PdfObject .(*_daa .PdfObjectDictionary );_cagf .Set ("\u0046\u0054",_daa .MakeName ("\u0054\u0078"));if _ffgae .DA !=nil {_cagf .Set ("\u0044\u0041",_ffgae .DA );
};if _ffgae .Q !=nil {_cagf .Set ("\u0051",_ffgae .Q );};if _ffgae .DS !=nil {_cagf .Set ("\u0044\u0053",_ffgae .DS );};if _ffgae .RV !=nil {_cagf .Set ("\u0052\u0056",_ffgae .RV );};if _ffgae .MaxLen !=nil {_cagf .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_ffgae .MaxLen );
};return _ddec ;};

// GetPdfInfo returns the PDF info dictionary.
func (_ccag *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_bfcbf ,_cbdadd :=_ccag .GetTrailer ();if _cbdadd !=nil {return nil ,_cbdadd ;};var _afgcd *_daa .PdfObjectDictionary ;_bdedee :=_bfcbf .Get ("\u0049\u006e\u0066\u006f");switch _ceadc :=_bdedee .(type ){case *_daa .PdfObjectReference :_caeea :=_ceadc ;
_bdedee ,_cbdadd =_ccag .GetIndirectObjectByNumber (int (_caeea .ObjectNumber ));_bdedee =_daa .TraceToDirectObject (_bdedee );if _cbdadd !=nil {return nil ,_cbdadd ;};_afgcd ,_ =_bdedee .(*_daa .PdfObjectDictionary );case *_daa .PdfObjectDictionary :_afgcd =_ceadc ;
};if _afgcd ==nil {return nil ,_ff .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_agcbg ,_cbdadd :=NewPdfInfoFromObject (_afgcd );if _cbdadd !=nil {return nil ,_cbdadd ;
};return _agcbg ,nil ;};

// AddOutlineTree adds outlines to a PDF file.
func (_fcde *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_fcde ._fgefg =outlineTree };

// GetAllContentStreams gets all the content streams for a page as one string.
func (_bgge *PdfPage )GetAllContentStreams ()(string ,error ){_cbgbc ,_adaeg :=_bgge .GetContentStreams ();if _adaeg !=nil {return "",_adaeg ;};return _db .Join (_cbgbc ,"\u0020"),nil ;};

// ToPdfObject implements interface PdfModel.
func (_bc *PdfActionNamed )ToPdfObject ()_daa .PdfObject {_bc .PdfAction .ToPdfObject ();_cdgg :=_bc ._ad ;_eaf :=_cdgg .PdfObject .(*_daa .PdfObjectDictionary );_eaf .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeNamed )));_eaf .SetIfNotNil ("\u004e",_bc .N );
return _cdgg ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_caa *PdfColorspaceDeviceRGB )ToPdfObject ()_daa .PdfObject {return _daa .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func (_ddbgg *pdfFontSimple )updateStandard14Font (){_cfdc ,_ccbe :=_ddbgg .Encoder ().(_df .SimpleEncoder );if !_ccbe {_ae .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_ddbgg .Encoder (),_ddbgg );
return ;};_fafce :=_cfdc .Charcodes ();_ddbgg ._aaef =make (map[_df .CharCode ]float64 ,len (_fafce ));for _ ,_gcfb :=range _fafce {_dgefd ,_ :=_cfdc .CharcodeToRune (_gcfb );_bgead ,_ :=_ddbgg ._cgdf .Read (_dgefd );_ddbgg ._aaef [_gcfb ]=_bgead .Wx ;
};};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_dcfe :=NewPdfAnnotation ();_bfac :=&PdfAnnotationStamp {};_bfac .PdfAnnotation =_dcfe ;_bfac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcfe .SetContext (_bfac );return _bfac ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_ecgb FieldFlag )Mask ()uint32 {return uint32 (_ecgb )};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_bgaec *PdfPageResources )AddExtGState (gsName _daa .PdfObjectName ,gsDict _daa .PdfObject )error {if _bgaec .ExtGState ==nil {_bgaec .ExtGState =_daa .MakeDict ();};_ddffeb :=_bgaec .ExtGState ;_eafce ,_fdfed :=_daa .TraceToDirectObject (_ddffeb ).(*_daa .PdfObjectDictionary );
if !_fdfed {_ae .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_ddffeb ,_daa .TraceToDirectObject (_ddffeb ));
return _daa .ErrTypeError ;};_eafce .Set (gsName ,gsDict );return nil ;};

// BaseFont returns the font's "BaseFont" field.
func (_beadf *PdfFont )BaseFont ()string {return _beadf .baseFields ()._agfd };

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func (_gbde *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};func _aeaa (_gcbc _daa .PdfObject )(*PdfColorspaceICCBased ,error ){_aefa :=&PdfColorspaceICCBased {};if _dgef ,_aedad :=_gcbc .(*_daa .PdfIndirectObject );
_aedad {_aefa ._ggaf =_dgef ;};_gcbc =_daa .TraceToDirectObject (_gcbc );_degb ,_gecg :=_gcbc .(*_daa .PdfObjectArray );if !_gecg {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _degb .Len ()!=2{return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_gcbc =_daa .TraceToDirectObject (_degb .Get (0));_ffcc ,_gecg :=_gcbc .(*_daa .PdfObjectName );if !_gecg {return nil ,_c .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ffcc !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_c .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_gcbc =_degb .Get (1);
_cace ,_gecg :=_daa .GetStream (_gcbc );if !_gecg {_ae .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_gcbc );
return nil ,_c .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_gcad :=_cace .PdfObjectDictionary ;_caag ,_gecg :=_gcad .Get ("\u004e").(*_daa .PdfObjectInteger );
if !_gecg {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_caag !=1&&*_caag !=3&&*_caag !=4{return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_aefa .N =int (*_caag );if _dbcb :=_gcad .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_dbcb !=nil {_gdcc ,_fdcfb :=NewPdfColorspaceFromPdfObject (_dbcb );if _fdcfb !=nil {return nil ,_fdcfb ;};_aefa .Alternate =_gdcc ;};if _ccfgb :=_gcad .Get ("\u0052\u0061\u006eg\u0065");
_ccfgb !=nil {_ccfgb =_daa .TraceToDirectObject (_ccfgb );_daea ,_adee :=_ccfgb .(*_daa .PdfObjectArray );if !_adee {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _daea .Len ()!=2*_aefa .N {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_cadg ,_cadb :=_daea .GetAsFloat64Slice ();if _cadb !=nil {return nil ,_cadb ;};_aefa .Range =_cadg ;}else {_aefa .Range =make ([]float64 ,2*_aefa .N );for _bdgd :=0;_bdgd < _aefa .N ;_bdgd ++{_aefa .Range [2*_bdgd ]=0.0;_aefa .Range [2*_bdgd +1]=1.0;
};};if _bdfef :=_gcad .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bdfef !=nil {_gaca ,_bdbb :=_bdfef .(*_daa .PdfObjectStream );if !_bdbb {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_aefa .Metadata =_gaca ;};_bfgc ,_efadd :=_daa .DecodeStream (_cace );if _efadd !=nil {return nil ,_efadd ;};_aefa .Data =_bfgc ;_aefa ._ecbf =_cace ;return _aefa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cebf *PdfAnnotation3D )ToPdfObject ()_daa .PdfObject {_cebf .PdfAnnotation .ToPdfObject ();_cdf :=_cebf ._gbf ;_aaec :=_cdf .PdfObject .(*_daa .PdfObjectDictionary );_aaec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0033\u0044"));
_aaec .SetIfNotNil ("\u0033\u0044\u0044",_cebf .T3DD );_aaec .SetIfNotNil ("\u0033\u0044\u0056",_cebf .T3DV );_aaec .SetIfNotNil ("\u0033\u0044\u0041",_cebf .T3DA );_aaec .SetIfNotNil ("\u0033\u0044\u0049",_cebf .T3DI );_aaec .SetIfNotNil ("\u0033\u0044\u0042",_cebf .T3DB );
return _cdf ;};

// B returns the value of the B component of the color.
func (_bbgec *PdfColorLab )B ()float64 {return _bbgec [2]};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_abce *PdfRectangle )Normalize (){if _abce .Llx > _abce .Urx {_abce .Llx ,_abce .Urx =_abce .Urx ,_abce .Llx ;};if _abce .Lly > _abce .Ury {_abce .Lly ,_abce .Ury =_abce .Ury ,_abce .Lly ;};};func (_dffa *PdfAcroForm )fill (_fbcgf FieldValueProvider ,_dcfeg FieldAppearanceGenerator )error {if _dffa ==nil {return nil ;
};_fbebe ,_gcbee :=_fbcgf .FieldValues ();if _gcbee !=nil {return _gcbee ;};for _ ,_ddcf :=range _dffa .AllFields (){_eecf :=_ddcf .PartialName ();_ecge ,_gfff :=_fbebe [_eecf ];if !_gfff {if _ebcdf ,_dgfge :=_ddcf .FullName ();_dgfge ==nil {_ecge ,_gfff =_fbebe [_ebcdf ];
};};if !_gfff {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_eecf );
continue ;};if _gfcfc :=_efdad (_ddcf ,_ecge );_gfcfc !=nil {return _gfcfc ;};if _dcfeg ==nil {continue ;};for _ ,_ddbgc :=range _ddcf .Annotations {_fada ,_aefg :=_dcfeg .GenerateAppearanceDict (_dffa ,_ddcf ,_ddbgc );if _aefg !=nil {return _aefg ;};_ddbgc .AP =_fada ;
_ddbgc .ToPdfObject ();};};return nil ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );func _efac (_aaae _daa .PdfObject )(*PdfPattern ,error ){_ebcc :=&PdfPattern {};var _aeddbd *_daa .PdfObjectDictionary ;if _adgfb ,_abdafc :=_daa .GetIndirect (_aaae );_abdafc {_ebcc ._degd =_adgfb ;
_dddaaf ,_ggdcdb :=_adgfb .PdfObject .(*_daa .PdfObjectDictionary );if !_ggdcdb {_ae .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_adgfb .PdfObject );
return nil ,_daa .ErrTypeError ;};_aeddbd =_dddaaf ;}else if _cddag ,_bcdgd :=_daa .GetStream (_aaae );_bcdgd {_ebcc ._degd =_cddag ;_aeddbd =_cddag .PdfObjectDictionary ;}else {_ae .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_aaae );
return nil ,_daa .ErrTypeError ;};_fgef :=_aeddbd .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _fgef ==nil {_ae .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fddge ,_cgcaec :=_fgef .(*_daa .PdfObjectInteger );if !_cgcaec {_ae .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fgef );
return nil ,_daa .ErrTypeError ;};if *_fddge !=1&&*_fddge !=2{_ae .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_fddge );return nil ,_daa .ErrRangeError ;
};_ebcc .PatternType =int64 (*_fddge );switch *_fddge {case 1:_aaade ,_edfaf :=_egfdg (_aeddbd );if _edfaf !=nil {return nil ,_edfaf ;};_aaade .PdfPattern =_ebcc ;_ebcc ._bcdee =_aaade ;return _ebcc ,nil ;case 2:_bebgg ,_ggfe :=_bgcdc (_aeddbd );if _ggfe !=nil {return nil ,_ggfe ;
};_bebgg .PdfPattern =_ebcc ;_ebcc ._bcdee =_bebgg ;return _ebcc ,nil ;};return nil ,_ff .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_dbadcb *PdfPageResources )HasShadingByName (keyName _daa .PdfObjectName )bool {_ ,_fefeef :=_dbadcb .GetShadingByName (keyName );return _fefeef ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_eded *PdfField )ToPdfObject ()_daa .PdfObject {_ededf :=_eded ._caaee ;_bbce :=_ededf .PdfObject .(*_daa .PdfObjectDictionary );_gbaac :=_daa .MakeArray ();for _ ,_bcgab :=range _eded .Kids {_gbaac .Append (_bcgab .ToPdfObject ());};for _ ,_bebb :=range _eded .Annotations {if _bebb ._gbf !=_eded ._caaee {_gbaac .Append (_bebb .GetContext ().ToPdfObject ());
};};if _eded .Parent !=nil {_bbce .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_eded .Parent .GetContainingPdfObject ());};if _gbaac .Len ()> 0{_bbce .Set ("\u004b\u0069\u0064\u0073",_gbaac );};_bbce .SetIfNotNil ("\u0046\u0054",_eded .FT );_bbce .SetIfNotNil ("\u0054",_eded .T );
_bbce .SetIfNotNil ("\u0054\u0055",_eded .TU );_bbce .SetIfNotNil ("\u0054\u004d",_eded .TM );_bbce .SetIfNotNil ("\u0046\u0066",_eded .Ff );_bbce .SetIfNotNil ("\u0056",_eded .V );_bbce .SetIfNotNil ("\u0044\u0056",_eded .DV );_bbce .SetIfNotNil ("\u0041\u0041",_eded .AA );
if _eded .VariableText !=nil {_bbce .SetIfNotNil ("\u0044\u0041",_eded .VariableText .DA );_bbce .SetIfNotNil ("\u0051",_eded .VariableText .Q );_bbce .SetIfNotNil ("\u0044\u0053",_eded .VariableText .DS );_bbce .SetIfNotNil ("\u0052\u0056",_eded .VariableText .RV );
};return _ededf ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_cgd :=NewPdfAnnotation ();_fcad :=&PdfAnnotationSquare {};_fcad .PdfAnnotation =_cgd ;_fcad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgd .SetContext (_fcad );return _fcad ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_daa .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_daa .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// WriteString outputs the object as it is to be written to file.
func (_ecgdb *PdfTransformParamsDocMDP )WriteString ()string {return _ecgdb .ToPdfObject ().WriteString ();};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_daa .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_daa .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_daa .PdfObjectBool ;_fbega PdfModel ;_facgg _daa .PdfObject ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_dcfa :=&PdfOutline {_agecd :_daa .MakeIndirectObject (_daa .MakeDict ())};_dcfa ._eabde =_dcfa ;return _dcfa ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_beee :=&PdfFilespec {};_beee ._ccde =_daa .MakeIndirectObject (_daa .MakeDict ());return _beee ;};

// ToPdfObject implements interface PdfModel.
func (_fafa *PdfAnnotationPolygon )ToPdfObject ()_daa .PdfObject {_fafa .PdfAnnotation .ToPdfObject ();_cbgd :=_fafa ._gbf ;_ggb :=_cbgd .PdfObject .(*_daa .PdfObjectDictionary );_fafa .PdfAnnotationMarkup .appendToPdfDictionary (_ggb );_ggb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_ggb .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_fafa .Vertices );_ggb .SetIfNotNil ("\u004c\u0045",_fafa .LE );_ggb .SetIfNotNil ("\u0042\u0053",_fafa .BS );_ggb .SetIfNotNil ("\u0049\u0043",_fafa .IC );_ggb .SetIfNotNil ("\u0042\u0045",_fafa .BE );
_ggb .SetIfNotNil ("\u0049\u0054",_fafa .IT );_ggb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_fafa .Measure );return _cbgd ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _daa .StreamEncoder ;FormType _daa .PdfObject ;BBox _daa .PdfObject ;Matrix _daa .PdfObject ;Resources *PdfPageResources ;Group _daa .PdfObject ;Ref _daa .PdfObject ;MetaData _daa .PdfObject ;PieceInfo _daa .PdfObject ;LastModified _daa .PdfObject ;
StructParent _daa .PdfObject ;StructParents _daa .PdfObject ;OPI _daa .PdfObject ;OC _daa .PdfObject ;Name _daa .PdfObject ;

// Stream data.
Stream []byte ;_ebedbd *_daa .PdfObjectStream ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_efgfg *PdfPattern )IsTiling ()bool {return _efgfg .PatternType ==1};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_ecdbf *PdfWriter )SetPageLabels (pageLabels _daa .PdfObject )error {if pageLabels ==nil {return nil ;};_ae .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_ecdbf ._dbae .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _ecdbf .addObjects (pageLabels );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_agbe *PdfColorspaceDeviceGray )ToPdfObject ()_daa .PdfObject {return _daa .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_fcgf :=NewPdfAnnotation ();_dadg :=&PdfAnnotationMovie {};_dadg .PdfAnnotation =_fcgf ;_fcgf .SetContext (_dadg );return _dadg ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _daa .PdfObjectName ;};func _cfcbd (_gbeb _daa .PdfObject )(*PdfPageResourcesColorspaces ,error ){_egcg :=&PdfPageResourcesColorspaces {};if _gfaeg ,_bdbef :=_gbeb .(*_daa .PdfIndirectObject );_bdbef {_egcg ._cbgge =_gfaeg ;
_gbeb =_gfaeg .PdfObject ;};_efdab ,_afbac :=_daa .GetDict (_gbeb );if !_afbac {return nil ,_ff .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_egcg .Names =[]string {};
_egcg .Colorspaces =map[string ]PdfColorspace {};for _ ,_dgdf :=range _efdab .Keys (){_daefd :=_efdab .Get (_dgdf );_egcg .Names =append (_egcg .Names ,string (_dgdf ));_ceggd ,_eddb :=NewPdfColorspaceFromPdfObject (_daefd );if _eddb !=nil {return nil ,_eddb ;
};_egcg .Colorspaces [string (_dgdf )]=_ceggd ;};return _egcg ,nil ;};func _egfdg (_eaege *_daa .PdfObjectDictionary )(*PdfTilingPattern ,error ){_bddb :=&PdfTilingPattern {};_becd :=_eaege .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _becd ==nil {_ae .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eddbc ,_dfaa :=_becd .(*_daa .PdfObjectInteger );if !_dfaa {_ae .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_becd );
return nil ,_daa .ErrTypeError ;};_bddb .PaintType =_eddbc ;_becd =_eaege .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _becd ==nil {_ae .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gebbb ,_dfaa :=_becd .(*_daa .PdfObjectInteger );if !_dfaa {_ae .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_becd );
return nil ,_daa .ErrTypeError ;};_bddb .TilingType =_gebbb ;_becd =_eaege .Get ("\u0042\u0042\u006f\u0078");if _becd ==nil {_ae .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_becd =_daa .TraceToDirectObject (_becd );_faabg ,_dfaa :=_becd .(*_daa .PdfObjectArray );if !_dfaa {_ae .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_becd );
return nil ,_daa .ErrTypeError ;};_cccdd ,_bfced :=NewPdfRectangle (*_faabg );if _bfced !=nil {_ae .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bfced );return nil ,_bfced ;};_bddb .BBox =_cccdd ;_becd =_eaege .Get ("\u0058\u0053\u0074e\u0070");
if _becd ==nil {_ae .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_eeffe ,_bfced :=_daa .GetNumberAsFloat (_becd );if _bfced !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_eeffe );
return nil ,_bfced ;};_bddb .XStep =_daa .MakeFloat (_eeffe );_becd =_eaege .Get ("\u0059\u0053\u0074e\u0070");if _becd ==nil {_ae .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ebegf ,_bfced :=_daa .GetNumberAsFloat (_becd );if _bfced !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_ebegf );
return nil ,_bfced ;};_bddb .YStep =_daa .MakeFloat (_ebegf );_becd =_eaege .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _becd ==nil {_ae .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eaege ,_dfaa =_daa .TraceToDirectObject (_becd ).(*_daa .PdfObjectDictionary );if !_dfaa {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_becd );
};_egbad ,_bfced :=NewPdfPageResourcesFromDict (_eaege );if _bfced !=nil {return nil ,_bfced ;};_bddb .Resources =_egbad ;if _eaegee :=_eaege .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_eaegee !=nil {_gafb ,_bcgba :=_eaegee .(*_daa .PdfObjectArray );
if !_bcgba {_ae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eaegee );return nil ,_daa .ErrTypeError ;};_bddb .Matrix =_gafb ;};return _bddb ,nil ;
};

// ToPdfObject returns a stream object.
func (_aagag *XObjectImage )ToPdfObject ()_daa .PdfObject {_afadb :=_aagag ._deefd ;_dacde :=_afadb .PdfObjectDictionary ;if _aagag .Filter !=nil {_dacde =_aagag .Filter .MakeStreamDict ();_afadb .PdfObjectDictionary =_dacde ;};_dacde .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_dacde .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0049\u006d\u0061g\u0065"));_dacde .Set ("\u0057\u0069\u0064t\u0068",_daa .MakeInteger (*(_aagag .Width )));_dacde .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_daa .MakeInteger (*(_aagag .Height )));
if _aagag .BitsPerComponent !=nil {_dacde .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_daa .MakeInteger (*(_aagag .BitsPerComponent )));};if _aagag .ColorSpace !=nil {_dacde .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_aagag .ColorSpace .ToPdfObject ());
};_dacde .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_aagag .Intent );_dacde .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_aagag .ImageMask );_dacde .SetIfNotNil ("\u004d\u0061\u0073\u006b",_aagag .Mask );_afeff :=_dacde .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _aagag .Decode ==nil &&_afeff {_dacde .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _aagag .Decode !=nil {_dacde .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_aagag .Decode );};_dacde .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_aagag .Interpolate );
_dacde .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_aagag .Alternatives );_dacde .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_aagag .SMask );_dacde .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_aagag .SMaskInData );
_dacde .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_aagag .Matte );_dacde .SetIfNotNil ("\u004e\u0061\u006d\u0065",_aagag .Name );_dacde .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_aagag .StructParent );_dacde .SetIfNotNil ("\u0049\u0044",_aagag .ID );
_dacde .SetIfNotNil ("\u004f\u0050\u0049",_aagag .OPI );_dacde .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_aagag .Metadata );_dacde .SetIfNotNil ("\u004f\u0043",_aagag .OC );_dacde .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_daa .MakeInteger (int64 (len (_aagag .Stream ))));
_afadb .Stream =_aagag .Stream ;return _afadb ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_bfdbde *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _bfdbde ._bcdee .(*PdfTilingPattern );};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _daa .PdfObject ;Movie _daa .PdfObject ;A _daa .PdfObject ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_fgab *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_cfgeg ,_gdda :=_daa .GetDict (_fgab ._dbae .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_gdda {_cfgeg =_daa .MakeDict ();_fgab ._dbae .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_cfgeg );
};_bcafe ,_gdda :=_daa .GetDict (_cfgeg .Get (_daa .PdfObjectName (extName )));if !_gdda {_bcafe =_daa .MakeDict ();_cfgeg .Set (_daa .PdfObjectName (extName ),_bcafe );};if _deba ,_ :=_daa .GetNameVal (_bcafe .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_deba !=baseVersion {_bcafe .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_daa .MakeName (baseVersion ));};if _efddf ,_ :=_daa .GetIntVal (_bcafe .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_efddf !=extLevel {_bcafe .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_daa .MakeInteger (int64 (extLevel )));};};

// ToPdfObject implements interface PdfModel.
func (_bbbc *PdfAnnotationMovie )ToPdfObject ()_daa .PdfObject {_bbbc .PdfAnnotation .ToPdfObject ();_gba :=_bbbc ._gbf ;_affg :=_gba .PdfObject .(*_daa .PdfObjectDictionary );_affg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u004d\u006f\u0076i\u0065"));
_affg .SetIfNotNil ("\u0054",_bbbc .T );_affg .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_bbbc .Movie );_affg .SetIfNotNil ("\u0041",_bbbc .A );return _gba ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_aaece *PdfPageResources )GetExtGState (keyName _daa .PdfObjectName )(_daa .PdfObject ,bool ){if _aaece .ExtGState ==nil {return nil ,false ;};_efcg ,_cbfgb :=_daa .TraceToDirectObject (_aaece .ExtGState ).(*_daa .PdfObjectDictionary );if !_cbfgb {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aaece .ExtGState );
return nil ,false ;};if _cabc :=_efcg .Get (keyName );_cabc !=nil {return _cabc ,true ;};return nil ,false ;};func (_befdae *PdfWriter )getPdfVersion ()string {return _c .Sprintf ("\u0025\u0064\u002e%\u0064",_befdae ._abfcb .Major ,_befdae ._abfcb .Minor );
};

// IsEncrypted returns true if the PDF file is encrypted.
func (_beed *PdfReader )IsEncrypted ()(bool ,error ){return _beed ._adgcg .IsEncrypted ()};func (_bfde *PdfReader )newPdfActionGoTo3DViewFromDict (_cca *_daa .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_cca .Get ("\u0054\u0041"),V :_cca .Get ("\u0056")},nil ;
};func (_acddg fontCommon )isCIDFont ()bool {if _acddg ._fbafe ==""{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_acddg );
};_fddf :=false ;switch _acddg ._fbafe {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fddf =true ;};_ae .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_fddf ,_acddg );
return _fddf ;};

// GetNumPages returns the number of pages in the document.
func (_bdegb *PdfReader )GetNumPages ()(int ,error ){if _bdegb ._adgcg .GetCrypter ()!=nil &&!_bdegb ._adgcg .IsAuthenticated (){return 0,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_bdegb ._eefcbf ),nil ;};

// Register registers (caches) a model to primitive object relationship.
func (_gcefd *modelManager )Register (primitive _daa .PdfObject ,model PdfModel ){_gcefd ._befce [model ]=primitive ;_gcefd ._cfdfd [primitive ]=model ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_acafb *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _acafb ._febda !=nil {return _acafb ._febda ,nil ;};if _acafb .Annots ==nil {_acafb ._febda =[]*PdfAnnotation {};return nil ,nil ;};if _acafb ._badgb ==nil {_acafb ._febda =[]*PdfAnnotation {};
return nil ,nil ;};_gagca ,_bbga :=_acafb ._badgb .loadAnnotations (_acafb .Annots );if _bbga !=nil {return nil ,_bbga ;};if _gagca ==nil {_acafb ._febda =[]*PdfAnnotation {};};_acafb ._febda =_gagca ;return _acafb ._febda ,nil ;};func _fegag (_bbfeg _daa .PdfObject ,_fbfa bool )(*PdfFont ,error ){_ecfb ,_baab ,_dbcd :=_fbgee (_bbfeg );
if _ecfb !=nil {_fdbg (_ecfb );};if _dbcd !=nil {if _dbcd ==ErrType1CFontNotSupported {_deagg ,_fcaf :=_gfccb (_ecfb ,_baab ,nil );if _fcaf !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_baab ,_fcaf );
return nil ,_dbcd ;};return &PdfFont {_gbbee :_deagg },_dbcd ;};return nil ,_dbcd ;};_dfac :=&PdfFont {};switch _baab ._fbafe {case "\u0054\u0079\u0070e\u0030":if !_fbfa {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_baab );
return nil ,_ff .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_agfg ,_acgb :=_agba (_ecfb ,_baab );if _acgb !=nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_baab ,_acgb );
return nil ,_acgb ;};_dfac ._gbbee =_agfg ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _bbac *pdfFontSimple ;_caac ,_gbfe :=_ec .NewStdFontByName (_ec .StdFontName (_baab ._agfd ));
if _gbfe {_fbfff :=_cafb (_caac );_dfac ._gbbee =&_fbfff ;_edfa :=_daa .TraceToDirectObject (_fbfff .ToPdfObject ());_aadd ,_gbaacb ,_caccg :=_fbgee (_edfa );if _caccg !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_baab ,_fbfff );
return nil ,_caccg ;};for _ ,_agcdd :=range _ecfb .Keys (){_aadd .Set (_agcdd ,_ecfb .Get (_agcdd ));};_bbac ,_caccg =_gfccb (_aadd ,_gbaacb ,_fbfff ._acefe );if _caccg !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_baab ,_fbfff );
return nil ,_caccg ;};_bbac ._aaef =_fbfff ._aaef ;_bbac ._cgdf =_fbfff ._cgdf ;if _bbac ._eadg ==nil {_bbac ._eadg =_fbfff ._eadg ;};}else {_bbac ,_dbcd =_gfccb (_ecfb ,_baab ,nil );if _dbcd !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_baab ,_dbcd );
return nil ,_dbcd ;};};_dbcd =_bbac .addEncoding ();if _dbcd !=nil {return nil ,_dbcd ;};if _gbfe {_bbac .updateStandard14Font ();};if _gbfe &&_bbac ._face ==nil &&_bbac ._acefe ==nil {_ae .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bbac );
_ae .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_caac );};if len (_bbac ._aaef )==0{_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_bbac );};_dfac ._gbbee =_bbac ;
case "\u0054\u0079\u0070e\u0033":_efdca ,_cacgc :=_dbbag (_ecfb ,_baab );if _cacgc !=nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_cacgc );
return nil ,_cacgc ;};_dfac ._gbbee =_efdca ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_ebdd ,_fdaf :=_adgf (_ecfb ,_baab );if _fdaf !=nil {_ae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_fdaf );
return nil ,_fdaf ;};_dfac ._gbbee =_ebdd ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_fdcd ,_cfae :=_cbdag (_ecfb ,_baab );if _cfae !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_baab ,_cfae );
return nil ,_cfae ;};_dfac ._gbbee =_fdcd ;default:_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_baab );
return nil ,_c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_baab );};return _dfac ,nil ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_cbacb *PdfPageResources )GetXObjectFormByName (keyName _daa .PdfObjectName )(*XObjectForm ,error ){_bgecc ,_gbeeb :=_cbacb .GetXObjectByName (keyName );if _bgecc ==nil {return nil ,nil ;};if _gbeeb !=XObjectTypeForm {return nil ,_ff .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_fccab ,_efbda :=NewXObjectFormFromStream (_bgecc );if _efbda !=nil {return nil ,_efbda ;};return _fccab ,nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_accd *PdfColorCalRGB )GetNumComponents ()int {return 3};

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_ddaafc :=&PdfShadingPatternType3 {};_ddaafc .Matrix =_daa .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_ddaafc .PdfPattern =&PdfPattern {};_ddaafc .PdfPattern .PatternType =int64 (*_daa .MakeInteger (2));
_ddaafc .PdfPattern ._bcdee =_ddaafc ;_ddaafc .PdfPattern ._degd =_daa .MakeIndirectObject (_daa .MakeDict ());return _ddaafc ;};

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_gfgbbd :=&PdfShadingType3 {};_gfgbbd .PdfShading =&PdfShading {};_gfgbbd .PdfShading ._facgg =_daa .MakeIndirectObject (_daa .MakeDict ());_gfgbbd .PdfShading ._fbega =_gfgbbd ;return _gfgbbd ;};func _fcedc ()string {_gdggd .Lock ();
defer _gdggd .Unlock ();return _bbagb };

// Encrypt encrypts the output file with a specified user/owner password.
func (_gcfdc *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_fgdeb :=RC4_128bit ;if options !=nil {_fgdeb =options .Algorithm ;};_adfdgb :=_eef .PermOwner ;if options !=nil {_adfdgb =options .Permissions ;};var _cebcca _cd .Filter ;
switch _fgdeb {case RC4_128bit :_cebcca =_cd .NewFilterV2 (16);case AES_128bit :_cebcca =_cd .NewFilterAESV2 ();case AES_256bit :_cebcca =_cd .NewFilterAESV3 ();default:return _c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_fegf ,_bdadb ,_afdfb :=_daa .PdfCryptNewEncrypt (_cebcca ,userPass ,ownerPass ,_adfdgb );if _afdfb !=nil {return _afdfb ;};_gcfdc ._bcce =_fegf ;if _bdadb .Major !=0{_gcfdc .SetVersion (_bdadb .Major ,_bdadb .Minor );};_gcfdc ._bagfc =_bdadb .Encrypt ;
_gcfdc ._adcff ,_gcfdc ._cgfaa =_bdadb .ID0 ,_bdadb .ID1 ;_acfgbc :=_daa .MakeIndirectObject (_bdadb .Encrypt );_gcfdc ._efea =_acfgbc ;_gcfdc .addObject (_acfgbc );return nil ;};func (_becfc *PdfWriter )writeXRefStreams (_afdaed int ,_dgbde int64 )error {_aafce :=_afdaed +1;
_becfc ._agfc [_aafce ]=crossReference {Type :1,ObjectNumber :_aafce ,Offset :_dgbde };_febgf :=_ag .NewBuffer (nil );_ecdgf :=_daa .MakeArray ();for _gfeeg :=0;_gfeeg <=_afdaed ;{for ;_gfeeg <=_afdaed ;_gfeeg ++{_aeaaa ,_afgdeg :=_becfc ._agfc [_gfeeg ];
if _afgdeg &&(!_becfc ._ffde ||_becfc ._ffde &&(_aeaaa .Type ==1&&_aeaaa .Offset >=_becfc ._dcbfe ||_aeaaa .Type ==0)){break ;};};var _degfg int ;for _degfg =_gfeeg +1;_degfg <=_afdaed ;_degfg ++{_ggccc ,_abcd :=_becfc ._agfc [_degfg ];if _abcd &&(!_becfc ._ffde ||_becfc ._ffde &&(_ggccc .Type ==1&&_ggccc .Offset > _becfc ._dcbfe )){continue ;
};break ;};_ecdgf .Append (_daa .MakeInteger (int64 (_gfeeg )),_daa .MakeInteger (int64 (_degfg -_gfeeg )));for _dgeda :=_gfeeg ;_dgeda < _degfg ;_dgeda ++{_eebacg :=_becfc ._agfc [_dgeda ];switch _eebacg .Type {case 0:_ge .Write (_febgf ,_ge .BigEndian ,byte (0));
_ge .Write (_febgf ,_ge .BigEndian ,uint32 (0));_ge .Write (_febgf ,_ge .BigEndian ,uint16 (0xFFFF));case 1:_ge .Write (_febgf ,_ge .BigEndian ,byte (1));_ge .Write (_febgf ,_ge .BigEndian ,uint32 (_eebacg .Offset ));_ge .Write (_febgf ,_ge .BigEndian ,uint16 (_eebacg .Generation ));
case 2:_ge .Write (_febgf ,_ge .BigEndian ,byte (2));_ge .Write (_febgf ,_ge .BigEndian ,uint32 (_eebacg .ObjectNumber ));_ge .Write (_febgf ,_ge .BigEndian ,uint16 (_eebacg .Index ));};};_gfeeg =_degfg +1;};_bgfe ,_cgaca :=_daa .MakeStream (_febgf .Bytes (),_daa .NewFlateEncoder ());
if _cgaca !=nil {return _cgaca ;};_bgfe .ObjectNumber =int64 (_aafce );_bgfe .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName ("\u0058\u0052\u0065\u0066"));_bgfe .PdfObjectDictionary .Set ("\u0057",_daa .MakeArray (_daa .MakeInteger (1),_daa .MakeInteger (4),_daa .MakeInteger (2)));
_bgfe .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_ecdgf );_bgfe .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_daa .MakeInteger (int64 (_aafce +1)));_bgfe .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_becfc ._badb );_bgfe .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_becfc ._gcdee );
if _becfc ._ffde &&_becfc ._aeafe > 0{_bgfe .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_daa .MakeInteger (_becfc ._aeafe ));};if _becfc ._bcce !=nil {_bgfe .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_becfc ._efea );};if _becfc ._fabed ==nil &&_becfc ._adcff !=""&&_becfc ._cgfaa !=""{_becfc ._fabed =_daa .MakeArray (_daa .MakeHexString (_becfc ._adcff ),_daa .MakeHexString (_becfc ._cgfaa ));
};if _becfc ._fabed !=nil {_ae .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_becfc ._fabed );_bgfe .Set ("\u0049\u0044",_becfc ._fabed );};_becfc .writeObject (int (_bgfe .ObjectNumber ),_bgfe );return nil ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _daa .PdfObject ;B _daa .PdfObject ;};func (_bfff *PdfReader )newPdfAnnotationFileAttachmentFromDict (_gaec *_daa .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_geed :=PdfAnnotationFileAttachment {};
_agb ,_dfde :=_bfff .newPdfAnnotationMarkupFromDict (_gaec );if _dfde !=nil {return nil ,_dfde ;};_geed .PdfAnnotationMarkup =_agb ;_geed .FS =_gaec .Get ("\u0046\u0053");_geed .Name =_gaec .Get ("\u004e\u0061\u006d\u0065");return &_geed ,nil ;};

// GetStandardApplier gets currently used StandardApplier..
func (_ddcgg *PdfWriter )GetStandardApplier ()StandardApplier {return _ddcgg ._bbfad };

// ToPdfObject implements interface PdfModel.
func (_bdf *PdfActionThread )ToPdfObject ()_daa .PdfObject {_bdf .PdfAction .ToPdfObject ();_fcga :=_bdf ._ad ;_bdb :=_fcga .PdfObject .(*_daa .PdfObjectDictionary );_bdb .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeThread )));if _bdf .F !=nil {_bdb .Set ("\u0046",_bdf .F .ToPdfObject ());
};_bdb .SetIfNotNil ("\u0044",_bdf .D );_bdb .SetIfNotNil ("\u0042",_bdf .B );return _fcga ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _daa .PdfObject ;MK _daa .PdfObject ;A _daa .PdfObject ;AA _daa .PdfObject ;BS _daa .PdfObject ;Parent _daa .PdfObject ;_gad *PdfField ;_ebd bool ;};var ImageHandling ImageHandler =DefaultImageHandler {};
func (_bgedac *PdfWriter )makeOffSetReference (_gdgfa int64 ){_gedd :=_c .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_gdgfa );_bgedac .writeString (_gedd );_bgedac .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_agfda DefaultImageHandler )NewImageFromGoImage (goimg _baa .Image )(*Image ,error ){_bafe ,_ccabd :=_ac .FromGoImage (goimg );if _ccabd !=nil {return nil ,_ccabd ;};_aabfg :=_geda (_bafe .Base ());return &_aabfg ,nil ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_acebg *PdfReader )GetEncryptionMethod ()string {_aefbd :=_acebg ._adgcg .GetCrypter ();return _aefbd .String ();};

// Encoder returns the font's text encoder.
func (_gfbgd pdfFontType0 )Encoder ()_df .TextEncoder {return _gfbgd ._dfgee };

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_ceggg *PdfWriter )SetOpenAction (dest _daa .PdfObject )error {if dest ==nil ||_daa .IsNullObject (dest ){return nil ;};_ceggg ._dbae .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _ceggg .addObjects (dest );};
func (_aagaa *PdfPage )getParentResources ()(*PdfPageResources ,error ){_afdbf :=_aagaa .Parent ;for _afdbf !=nil {_fbae ,_ggfb :=_daa .GetDict (_afdbf );if !_ggfb {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_ff .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _ddee :=_fbae .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ddee !=nil {_bgcef ,_egcfag :=_daa .GetDict (_ddee );
if !_egcfag {return nil ,_ff .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_gefc ,_dced :=NewPdfPageResourcesFromDict (_bgcef );if _dced !=nil {return nil ,_dced ;};return _gefc ,nil ;};
_afdbf =_fbae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_abgc :=NewPdfAnnotation ();_gge :=&PdfAnnotationRedact {};_gge .PdfAnnotation =_abgc ;_gge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abgc .SetContext (_gge );return _gge ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _daa .PdfObject ;Flags _daa .PdfObject ;};

// G returns the value of the green component of the color.
func (_ebfa *PdfColorDeviceRGB )G ()float64 {return _ebfa [1]};func (_dbaa *PdfReader )newPdfAnnotationRedactFromDict (_fadg *_daa .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_fgac :=PdfAnnotationRedact {};_cag ,_adcg :=_dbaa .newPdfAnnotationMarkupFromDict (_fadg );
if _adcg !=nil {return nil ,_adcg ;};_fgac .PdfAnnotationMarkup =_cag ;_fgac .QuadPoints =_fadg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fgac .IC =_fadg .Get ("\u0049\u0043");_fgac .RO =_fadg .Get ("\u0052\u004f");_fgac .OverlayText =_fadg .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_fgac .Repeat =_fadg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_fgac .DA =_fadg .Get ("\u0044\u0041");_fgac .Q =_fadg .Get ("\u0051");return &_fgac ,nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_daa .PdfObjectArray ;Domain *_daa .PdfObjectArray ;Function []PdfFunction ;Extend *_daa .PdfObjectArray ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_bgee *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_bgee .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_bgee ._bgcb =acroForm ;};

// ToPdfObject implements interface PdfModel.
func (_aggd *PdfActionResetForm )ToPdfObject ()_daa .PdfObject {_aggd .PdfAction .ToPdfObject ();_fae :=_aggd ._ad ;_ece :=_fae .PdfObject .(*_daa .PdfObjectDictionary );_ece .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeResetForm )));_ece .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_aggd .Fields );
_ece .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_aggd .Flags );return _fae ;};func (_dadga *PdfReader )newPdfSignatureFromIndirect (_egcaa *_daa .PdfIndirectObject )(*PdfSignature ,error ){_dcedb ,_bbdge :=_egcaa .PdfObject .(*_daa .PdfObjectDictionary );
if !_bbdge {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _aagad ,_gbada :=_dadga ._beaec .GetModelFromPrimitive (_egcaa ).(*PdfSignature );_gbada {return _aagad ,nil ;};_gdcebb :=&PdfSignature {};_gdcebb ._cebcc =_egcaa ;_gdcebb .Type ,_ =_daa .GetName (_dcedb .Get ("\u0054\u0079\u0070\u0065"));
_gdcebb .Filter ,_bbdge =_daa .GetName (_dcedb .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_bbdge {_ae .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_gdcebb .SubFilter ,_ =_daa .GetName (_dcedb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_gdcebb .Contents ,_bbdge =_daa .GetString (_dcedb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_bbdge {_ae .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _dacgd ,_fgba :=_daa .GetArray (_dcedb .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_fgba {_gdcebb .Reference =_daa .MakeArray ();for _ ,_dcdee :=range _dacgd .Elements (){_aafca ,_bgebf :=_daa .GetDict (_dcdee );
if !_bgebf {_ae .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_cfbef ,_dfffa :=_dadga .newPdfSignatureReferenceFromDict (_aafca );if _dfffa !=nil {return nil ,_dfffa ;};_gdcebb .Reference .Append (_cfbef .ToPdfObject ());};};_gdcebb .Cert =_dcedb .Get ("\u0043\u0065\u0072\u0074");_gdcebb .ByteRange ,_ =_daa .GetArray (_dcedb .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_gdcebb .Changes ,_ =_daa .GetArray (_dcedb .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_gdcebb .Name ,_ =_daa .GetString (_dcedb .Get ("\u004e\u0061\u006d\u0065"));_gdcebb .M ,_ =_daa .GetString (_dcedb .Get ("\u004d"));_gdcebb .Location ,_ =_daa .GetString (_dcedb .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_gdcebb .Reason ,_ =_daa .GetString (_dcedb .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_gdcebb .ContactInfo ,_ =_daa .GetString (_dcedb .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_gdcebb .R ,_ =_daa .GetInt (_dcedb .Get ("\u0052"));
_gdcebb .V ,_ =_daa .GetInt (_dcedb .Get ("\u0056"));_gdcebb .PropBuild ,_ =_daa .GetDict (_dcedb .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_gdcebb .PropAuthTime ,_ =_daa .GetInt (_dcedb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_gdcebb .PropAuthType ,_ =_daa .GetName (_dcedb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_dadga ._beaec .Register (_egcaa ,_gdcebb );return _gdcebb ,nil ;};func (_aaabc *PdfWriter )checkCrossReferenceStream ()bool {_cfccg :=_aaabc ._abfcb .Major > 1||(_aaabc ._abfcb .Major ==1&&_aaabc ._abfcb .Minor > 4);
if _aaabc ._ggab !=nil {_cfccg =*_aaabc ._ggab ;};return _cfccg ;};var _afbb =false ;func (_cffa *PdfReader )newPdfAnnotationWatermarkFromDict (_ddce *_daa .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_dfbcc :=PdfAnnotationWatermark {};_dfbcc .FixedPrint =_ddce .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");
return &_dfbcc ,nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _daa .PdfObject ;LE _daa .PdfObject ;BS _daa .PdfObject ;IC _daa .PdfObject ;BE _daa .PdfObject ;IT _daa .PdfObject ;Measure _daa .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_dde *PdfAnnotationSquare )ToPdfObject ()_daa .PdfObject {_dde .PdfAnnotation .ToPdfObject ();_bgde :=_dde ._gbf ;_ddbe :=_bgde .PdfObject .(*_daa .PdfObjectDictionary );if _dde .PdfAnnotationMarkup !=nil {_dde .PdfAnnotationMarkup .appendToPdfDictionary (_ddbe );
};_ddbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_ddbe .SetIfNotNil ("\u0042\u0053",_dde .BS );_ddbe .SetIfNotNil ("\u0049\u0043",_dde .IC );_ddbe .SetIfNotNil ("\u0042\u0045",_dde .BE );
_ddbe .SetIfNotNil ("\u0052\u0044",_dde .RD );return _bgde ;};

// SetContext set the sub annotation (context).
func (_gfffd *PdfShading )SetContext (ctx PdfModel ){_gfffd ._fbega =ctx };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fegcg *PdfShadingType5 )ToPdfObject ()_daa .PdfObject {_fegcg .PdfShading .ToPdfObject ();_badgc ,_eedf :=_fegcg .getShadingDict ();if _eedf !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fegcg .BitsPerCoordinate !=nil {_badgc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fegcg .BitsPerCoordinate );};if _fegcg .BitsPerComponent !=nil {_badgc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fegcg .BitsPerComponent );
};if _fegcg .VerticesPerRow !=nil {_badgc .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_fegcg .VerticesPerRow );};if _fegcg .Decode !=nil {_badgc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fegcg .Decode );};
if _fegcg .Function !=nil {if len (_fegcg .Function )==1{_badgc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fegcg .Function [0].ToPdfObject ());}else {_cegdd :=_daa .MakeArray ();for _ ,_effd :=range _fegcg .Function {_cegdd .Append (_effd .ToPdfObject ());
};_badgc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cegdd );};};return _fegcg ._facgg ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_edfab *PdfSignature )GetDocMDPPermission ()(_cg .DocMDPPermission ,bool ){for _ ,_egbff :=range _edfab .Reference .Elements (){if _dcge ,_ddaag :=_daa .GetDict (_egbff );_ddaag {if _gbgce ,_dffeg :=_daa .GetNameVal (_dcge .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_dffeg &&_gbgce =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _ffegg ,_fgdc :=_daa .GetDict (_dcge .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_fgdc {if P ,_eaabg :=_daa .GetIntVal (_ffegg .Get ("\u0050"));_eaabg {return _cg .DocMDPPermission (P ),true ;
};};};};};return 0,false ;};func (_dgefaf *PdfWriter )writeObjectsInStreams (_bgaaa map[_daa .PdfObject ]bool )error {for _ ,_degdf :=range _dgefaf ._aaaae {if _acgeb :=_bgaaa [_degdf ];_acgeb {continue ;};_ggfaf :=int64 (0);switch _ffegd :=_degdf .(type ){case *_daa .PdfIndirectObject :_ggfaf =_ffegd .ObjectNumber ;
case *_daa .PdfObjectStream :_ggfaf =_ffegd .ObjectNumber ;case *_daa .PdfObjectStreams :_ggfaf =_ffegd .ObjectNumber ;default:_ae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_degdf );
return ErrTypeCheck ;};if _dgefaf ._bcce !=nil &&_degdf !=_dgefaf ._efea {_gfffe :=_dgefaf ._bcce .Encrypt (_degdf ,_ggfaf ,0);if _gfffe !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_gfffe );
return _gfffe ;};};_dgefaf .writeObject (int (_ggfaf ),_degdf );};return nil ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_gcaa *PdfColorspaceSpecialIndexed )ToPdfObject ()_daa .PdfObject {_cfeb :=_daa .MakeArray (_daa .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_cfeb .Append (_gcaa .Base .ToPdfObject ());_cfeb .Append (_daa .MakeInteger (int64 (_gcaa .HiVal )));
_cfeb .Append (_gcaa .Lookup );if _gcaa ._cfaf !=nil {_gcaa ._cfaf .PdfObject =_cfeb ;return _gcaa ._cfaf ;};return _cfeb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_fegdd *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_daa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbcf ,_afbe :=_daa .GetNumbersAsFloat (objects );
if _afbe !=nil {return nil ,_afbe ;};return _fegdd .ColorFromFloats (_cbcf );};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dgaeb *PdfPageResources )GetPatternByName (keyName _daa .PdfObjectName )(*PdfPattern ,bool ){if _dgaeb .Pattern ==nil {return nil ,false ;};_eeeba ,_bdfcg :=_daa .TraceToDirectObject (_dgaeb .Pattern ).(*_daa .PdfObjectDictionary );if !_bdfcg {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgaeb .Pattern );
return nil ,false ;};if _bfcg :=_eeeba .Get (keyName );_bfcg !=nil {_gefbd ,_gegbc :=_efac (_bfcg );if _gegbc !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_gegbc );
return nil ,false ;};return _gefbd ,true ;};return nil ,false ;};

// ToPdfObject returns the PDF representation of the function.
func (_agbb *PdfFunctionType3 )ToPdfObject ()_daa .PdfObject {_ebaf :=_daa .MakeDict ();_ebaf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_daa .MakeInteger (3));_addfa :=&_daa .PdfObjectArray {};for _ ,_fdgdb :=range _agbb .Domain {_addfa .Append (_daa .MakeFloat (_fdgdb ));
};_ebaf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_addfa );if _agbb .Range !=nil {_fbgb :=&_daa .PdfObjectArray {};for _ ,_dgba :=range _agbb .Range {_fbgb .Append (_daa .MakeFloat (_dgba ));};_ebaf .Set ("\u0052\u0061\u006eg\u0065",_fbgb );};if _agbb .Functions !=nil {_efcbca :=&_daa .PdfObjectArray {};
for _ ,_bcba :=range _agbb .Functions {_efcbca .Append (_bcba .ToPdfObject ());};_ebaf .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_efcbca );};if _agbb .Bounds !=nil {_cdbgc :=&_daa .PdfObjectArray {};for _ ,_cbbcd :=range _agbb .Bounds {_cdbgc .Append (_daa .MakeFloat (_cbbcd ));
};_ebaf .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_cdbgc );};if _agbb .Encode !=nil {_faec :=&_daa .PdfObjectArray {};for _ ,_dgge :=range _agbb .Encode {_faec .Append (_daa .MakeFloat (_dgge ));};_ebaf .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_faec );
};if _agbb ._ffgad !=nil {_agbb ._ffgad .PdfObject =_ebaf ;return _agbb ._ffgad ;};return _ebaf ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_cadc *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_cadc .HiVal )};};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_daa .PdfObjectArray ;Matrix *_daa .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_ggdcc *PdfOutline )ToPdfObject ()_daa .PdfObject {_bfdae :=_ggdcc ._agecd ;_cccde :=_bfdae .PdfObject .(*_daa .PdfObjectDictionary );_cccde .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _ggdcc .First !=nil {_cccde .Set ("\u0046\u0069\u0072s\u0074",_ggdcc .First .ToPdfObject ());
};if _ggdcc .Last !=nil {_cccde .Set ("\u004c\u0061\u0073\u0074",_ggdcc .Last .GetContext ().GetContainingPdfObject ());};if _ggdcc .Parent !=nil {_cccde .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ggdcc .Parent .GetContext ().GetContainingPdfObject ());
};if _ggdcc .Count !=nil {_cccde .Set ("\u0043\u006f\u0075n\u0074",_daa .MakeInteger (*_ggdcc .Count ));};return _bfdae ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_gefg *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ae .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_eefef :=[]float64 {0.0};if _gefg .C0 !=nil {_eefef =_gefg .C0 ;};_bced :=[]float64 {1.0};if _gefg .C1 !=nil {_bced =_gefg .C1 ;};var _aacdb []float64 ;for _cgbcg :=0;_cgbcg < len (_eefef );_cgbcg ++{_gegf :=_eefef [_cgbcg ]+_ce .Pow (x [0],_gefg .N )*(_bced [_cgbcg ]-_eefef [_cgbcg ]);
_aacdb =append (_aacdb ,_gegf );};return _aacdb ,nil ;};func _bdacf (_gffea []*_daa .PdfObjectStream )*_daa .PdfObjectArray {if len (_gffea )==0{return nil ;};_debdd :=make ([]_daa .PdfObject ,0,len (_gffea ));for _ ,_aegbc :=range _gffea {_debdd =append (_debdd ,_aegbc );
};return _daa .MakeArray (_debdd ...);};func _ggbaa (_eggeb string )(map[_df .CharCode ]_df .GlyphName ,error ){_cfca :=_db .Split (_eggeb ,"\u000a");_gebfa :=make (map[_df .CharCode ]_df .GlyphName );for _ ,_ababe :=range _cfca {_bgec :=_fdgeb .FindStringSubmatch (_ababe );
if _bgec ==nil {continue ;};_bgac ,_fagd :=_bgec [1],_bgec [2];_ggcd ,_dgbbb :=_af .Atoi (_bgac );if _dgbbb !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_ababe );
return nil ,_daa .ErrTypeError ;};_gebfa [_df .CharCode (_ggcd )]=_df .GlyphName (_fagd );};_ae .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_gebfa );
return _gebfa ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_beefd *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _beefd .MediaBox !=nil {return _beefd .MediaBox ,nil ;};_fddbb :=_beefd .Parent ;for _fddbb !=nil {_cfbdb ,_fdffc :=_daa .GetDict (_fddbb );if !_fdffc {return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _beaag :=_cfbdb .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_beaag !=nil {_feag ,_cbgdg :=_daa .GetArray (_beaag );if !_cbgdg {return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_cbaee ,_egdf :=NewPdfRectangle (*_feag );if _egdf !=nil {return nil ,_egdf ;};return _cbaee ,nil ;};_fddbb =_cfbdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ff .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_beaad *PdfShadingPatternType3 )ToPdfObject ()_daa .PdfObject {_beaad .PdfPattern .ToPdfObject ();_dafea :=_beaad .getDict ();if _beaad .Shading !=nil {_dafea .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_beaad .Shading .ToPdfObject ());};if _beaad .Matrix !=nil {_dafea .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_beaad .Matrix );
};if _beaad .ExtGState !=nil {_dafea .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_beaad .ExtGState );};return _beaad ._degd ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_befbb *PdfPage )SetContentStreams (cStreams []string ,encoder _daa .StreamEncoder )error {if len (cStreams )==0{_befbb .Contents =nil ;return nil ;};if encoder ==nil {encoder =_daa .NewRawEncoder ();};var _dagag []*_daa .PdfObjectStream ;for _ ,_cegg :=range cStreams {_gabcc :=&_daa .PdfObjectStream {};
_cdaebb :=encoder .MakeStreamDict ();_abbgc ,_febbf :=encoder .EncodeBytes ([]byte (_cegg ));if _febbf !=nil {return _febbf ;};_cdaebb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_daa .MakeInteger (int64 (len (_abbgc ))));_gabcc .PdfObjectDictionary =_cdaebb ;
_gabcc .Stream =_abbgc ;_dagag =append (_dagag ,_gabcc );};if len (_dagag )==1{_befbb .Contents =_dagag [0];}else {_cgabg :=_daa .MakeArray ();for _ ,_gcac :=range _dagag {_cgabg .Append (_gcac );};_befbb .Contents =_cgabg ;};return nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_daa .PdfObjectName ;Colorants _daa .PdfObject ;Process _daa .PdfObject ;MixingHints _daa .PdfObject ;_fged *_daa .PdfIndirectObject ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_dabg *modelManager )GetModelFromPrimitive (primitive _daa .PdfObject )PdfModel {model ,_ecfgb :=_dabg ._cfdfd [primitive ];if !_ecfgb {return nil ;};return model ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_cde .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_cde .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_cde .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_ceaa *PdfAppender ;_eccgb *DSS ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_eeafe *PdfReader )Inspect ()(map[string ]int ,error ){return _eeafe ._adgcg .Inspect ()};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// String implements interface PdfObject.
func (_fcb *PdfAction )String ()string {_gfe ,_be :=_fcb .ToPdfObject ().(*_daa .PdfIndirectObject );if _be {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fcb ._gfc ,_gfe .PdfObject .String ());};return "";};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _daa .PdfObject ;Name _daa .PdfObject ;State _daa .PdfObject ;StateModel _daa .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bbf *PdfActionGoTo )ToPdfObject ()_daa .PdfObject {_bbf .PdfAction .ToPdfObject ();_gaa :=_bbf ._ad ;_ea :=_gaa .PdfObject .(*_daa .PdfObjectDictionary );_ea .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeGoTo )));_ea .SetIfNotNil ("\u0044",_bbf .D );
return _gaa ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_gadbe *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_fafab :=_gf .NewReader (img .getBase ());_dgcc :=_ac .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._bbcf ,img ._bfdc );
_ccda :=_gf .NewWriter (_dgcc );_acgg :=_ce .Pow (2,float64 (img .BitsPerComponent ))-1;_efab :=_gadbe .GetNumComponents ();_faae :=make ([]uint32 ,_efab );_gccbg :=make ([]float64 ,_efab );for {_agff :=_fafab .ReadSamples (_faae );if _agff ==_dgg .EOF {break ;
}else if _agff !=nil {return img ,_agff ;};for _becb :=0;_becb < _efab ;_becb ++{_fgg :=float64 (_faae [_becb ])/_acgg ;_gccbg [_becb ]=_fgg ;};_edbc ,_agff :=_gadbe .TintTransform .Evaluate (_gccbg );if _agff !=nil {return img ,_agff ;};for _ ,_fcfbe :=range _edbc {_fcfbe =_ce .Min (_ce .Max (0,_fcfbe ),1.0);
if _agff =_ccda .WriteSample (uint32 (_fcfbe *_acgg ));_agff !=nil {return img ,_agff ;};};};return _gadbe .AlternateSpace .ImageToRGB (_geda (&_dgcc ));};func (_gaef *LTV )generateVRIKey (_bgaf *PdfSignature )(string ,error ){_dbea ,_afafc :=_bdbbg (_bgaf .Contents .Bytes ());
if _afafc !=nil {return "",_afafc ;};return _db .ToUpper (_b .EncodeToString (_dbea )),nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_bcbdca *pdfSignDictionary )GetSubFilter ()string {_dfabe :=_bcbdca .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _dfabe ==nil {return "";};if _dgdgg ,_eeafef :=_daa .GetNameVal (_dfabe );_eeafef {return _dgdgg ;};return "";};func _eadbe (_ceedd *_daa .PdfObjectDictionary )(*PdfFieldChoice ,error ){_dedg :=&PdfFieldChoice {};
_dedg .Opt ,_ =_daa .GetArray (_ceedd .Get ("\u004f\u0070\u0074"));_dedg .TI ,_ =_daa .GetInt (_ceedd .Get ("\u0054\u0049"));_dedg .I ,_ =_daa .GetArray (_ceedd .Get ("\u0049"));return _dedg ,nil ;};

// ValidateSignatures validates digital signatures in the document.
func (_ddgg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _ddgg .AcroForm ==nil {return nil ,nil ;};if _ddgg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_cgaeg *PdfSignature ;
_cffefb *PdfField ;_cbdec SignatureHandler ;};var _bdddff []*sigFieldPair ;for _ ,_ebced :=range _ddgg .AcroForm .AllFields (){if _ebced .V ==nil {continue ;};if _gfdfa ,_bcgabe :=_daa .GetDict (_ebced .V );_bcgabe {if _abaa ,_beedc :=_daa .GetNameVal (_gfdfa .Get ("\u0054\u0079\u0070\u0065"));
_beedc &&_abaa =="\u0053\u0069\u0067"{_fdece ,_gfddd :=_daa .GetIndirect (_ebced .V );if !_gfddd {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_feefe ,_gfbfc :=_ddgg .newPdfSignatureFromIndirect (_fdece );if _gfbfc !=nil {return nil ,_gfbfc ;};var _edege SignatureHandler ;for _ ,_eecfa :=range handlers {if _eecfa .IsApplicable (_feefe ){_edege =_eecfa ;break ;};};_bdddff =append (_bdddff ,&sigFieldPair {_cgaeg :_feefe ,_cffefb :_ebced ,_cbdec :_edege });
};};};var _cccdf []SignatureValidationResult ;for _ ,_acdfg :=range _bdddff {_abdaae :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_acdfg ._cffefb }};if _acdfg ._cbdec ==nil {_abdaae .Errors =append (_abdaae .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_cccdf =append (_cccdf ,_abdaae );continue ;};_cbbf ,_ggbbgb :=_acdfg ._cbdec .NewDigest (_acdfg ._cgaeg );if _ggbbgb !=nil {_abdaae .Errors =append (_abdaae .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_ggbbgb .Error ());
_cccdf =append (_cccdf ,_abdaae );continue ;};_dgbge :=_acdfg ._cgaeg .ByteRange ;if _dgbge ==nil {_abdaae .Errors =append (_abdaae .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_cccdf =append (_cccdf ,_abdaae );
continue ;};for _bcaee :=0;_bcaee < _dgbge .Len ();_bcaee =_bcaee +2{_gdfdg ,_ :=_daa .GetNumberAsInt64 (_dgbge .Get (_bcaee ));_cacf ,_ :=_daa .GetIntVal (_dgbge .Get (_bcaee +1));if _ ,_ffcac :=_ddgg ._befda .Seek (_gdfdg ,_dgg .SeekStart );_ffcac !=nil {return nil ,_ffcac ;
};_fbfbe :=make ([]byte ,_cacf );if _ ,_ccbg :=_ddgg ._befda .Read (_fbfbe );_ccbg !=nil {return nil ,_ccbg ;};_cbbf .Write (_fbfbe );};var _acdeg SignatureValidationResult ;if _gbeefd ,_bbfgcb :=_acdfg ._cbdec .(SignatureHandlerDocMDP );_bbfgcb {_acdeg ,_ggbbgb =_gbeefd .ValidateWithOpts (_acdfg ._cgaeg ,_cbbf ,SignatureHandlerDocMDPParams {Parser :_ddgg ._adgcg });
}else {_acdeg ,_ggbbgb =_acdfg ._cbdec .Validate (_acdfg ._cgaeg ,_cbbf );};if _ggbbgb !=nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_ggbbgb ,_acdfg ._cbdec );_acdeg .Errors =append (_acdeg .Errors ,_ggbbgb .Error ());
};_acdeg .Name =_acdfg ._cgaeg .Name .Decoded ();_acdeg .Reason =_acdfg ._cgaeg .Reason .Decoded ();if _acdfg ._cgaeg .M !=nil {_ccfgdf ,_gbge :=NewPdfDate (_acdfg ._cgaeg .M .String ());if _gbge !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbge );
_acdeg .Errors =append (_acdeg .Errors ,_gbge .Error ());continue ;};_acdeg .Date =_ccfgdf ;};_acdeg .ContactInfo =_acdfg ._cgaeg .ContactInfo .Decoded ();_acdeg .Location =_acdfg ._cgaeg .Location .Decoded ();_acdeg .Fields =_abdaae .Fields ;_cccdf =append (_cccdf ,_acdeg );
};return _cccdf ,nil ;};func (_fbc *PdfReader )newPdfAnnotationWidgetFromDict (_efba *_daa .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_fge :=PdfAnnotationWidget {};_fge .H =_efba .Get ("\u0048");_fge .MK =_efba .Get ("\u004d\u004b");_fge .A =_efba .Get ("\u0041");
_fge .AA =_efba .Get ("\u0041\u0041");_fge .BS =_efba .Get ("\u0042\u0053");_fge .Parent =_efba .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_fge ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_cgfcc *PdfShadingPattern )ToPdfObject ()_daa .PdfObject {_cgfcc .PdfPattern .ToPdfObject ();_faed :=_cgfcc .getDict ();if _cgfcc .Shading !=nil {_faed .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cgfcc .Shading .ToPdfObject ());};if _cgfcc .Matrix !=nil {_faed .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cgfcc .Matrix );
};if _cgfcc .ExtGState !=nil {_faed .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cgfcc .ExtGState );};return _cgfcc ._degd ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";
TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_aec :=PdfColorCalRGB {a ,b ,c };return &_aec ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_afff *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_afff .Base .GetNumComponents ();_febf :=int (vals [0])*N ;
if _febf < 0||(_febf +N -1)>=len (_afff ._ffbb ){_ae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_febf );return nil ,ErrColorOutOfRange ;};_cdae :=_afff ._ffbb [_febf :_febf +N ];
var _aaaf []float64 ;for _ ,_bfdee :=range _cdae {_aaaf =append (_aaaf ,float64 (_bfdee )/255.0);};_cdca ,_caad :=_afff .Base .ColorFromFloats (_aaaf );if _caad !=nil {return nil ,_caad ;};return _cdca ,nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_bagc :=PdfColorCalGray (grayVal );return &_bagc ;};func _efdad (_cdfg *PdfField ,_bdede _daa .PdfObject )error {switch _cdfg .GetContext ().(type ){case *PdfFieldText :switch _dbdfg :=_bdede .(type ){case *_daa .PdfObjectName :_gcce :=_dbdfg ;
_ae .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_gcce .String ());
_cdfg .V =_daa .MakeEncodedString (_dbdfg .String (),true );case *_daa .PdfObjectString :_cdfg .V =_daa .MakeEncodedString (_dbdfg .String (),true );default:_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_dbdfg ,_dbdfg );
};case *PdfFieldButton :switch _bdede .(type ){case *_daa .PdfObjectName :if len (_bdede .String ())> 0{_cdfg .V =_bdede ;_agec (_cdfg ,_bdede );};case *_daa .PdfObjectString :if len (_bdede .String ())> 0{_cdfg .V =_daa .MakeName (_bdede .String ());_agec (_cdfg ,_cdfg .V );
};default:_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cdfg .PartialName (),_bdede );_cdfg .V =_bdede ;};case *PdfFieldChoice :switch _bdede .(type ){case *_daa .PdfObjectName :if len (_bdede .String ())> 0{_cdfg .V =_daa .MakeString (_bdede .String ());
_agec (_cdfg ,_bdede );};case *_daa .PdfObjectString :if len (_bdede .String ())> 0{_cdfg .V =_bdede ;_agec (_cdfg ,_daa .MakeName (_bdede .String ()));};default:_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cdfg .PartialName (),_bdede );
_cdfg .V =_bdede ;};case *PdfFieldSignature :_ae .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_cdfg .PartialName (),_bdede );
};return nil ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};func (_cff *PdfAnnotation )String ()string {_ecdf :="";_cceb ,_ecc :=_cff .ToPdfObject ().(*_daa .PdfIndirectObject );if _ecc {_ecdf =_c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cff ._bea ,_cceb .PdfObject .String ());
};return _ecdf ;};

// ToPdfObject implements interface PdfModel.
func (_edcc *PdfAnnotationRichMedia )ToPdfObject ()_daa .PdfObject {_edcc .PdfAnnotation .ToPdfObject ();_ffgg :=_edcc ._gbf ;_abcgd :=_ffgg .PdfObject .(*_daa .PdfObjectDictionary );_abcgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_abcgd .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_edcc .RichMediaSettings );_abcgd .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_edcc .RichMediaContent );
return _ffgg ;};func _ggafb (_aeaag _daa .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_fegebc :=&PdfColorspaceDeviceNAttributes {};var _eacg *_daa .PdfObjectDictionary ;switch _cgac :=_aeaag .(type ){case *_daa .PdfIndirectObject :_fegebc ._fged =_cgac ;
var _dega bool ;_eacg ,_dega =_cgac .PdfObject .(*_daa .PdfObjectDictionary );if !_dega {_ae .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_daa .PdfObjectDictionary :_eacg =_cgac ;case *_daa .PdfObjectReference :_acea :=_cgac .Resolve ();return _ggafb (_acea );default:_ae .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dabae :=_eacg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dabae !=nil {_eaag ,_cdfa :=_daa .TraceToDirectObject (_dabae ).(*_daa .PdfObjectName );if !_cdfa {_ae .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_ff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_fegebc .Subtype =_eaag ;};if _beab :=_eacg .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_beab !=nil {_fegebc .Colorants =_beab ;};if _acge :=_eacg .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_acge !=nil {_fegebc .Process =_acge ;};if _ddgb :=_eacg .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_ddgb !=nil {_fegebc .MixingHints =_ddgb ;};return _fegebc ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dcbd *PdfPageResourcesColorspaces )ToPdfObject ()_daa .PdfObject {_affb :=_daa .MakeDict ();for _ ,_aedf :=range _dcbd .Names {_affb .Set (_daa .PdfObjectName (_aedf ),_dcbd .Colorspaces [_aedf ].ToPdfObject ());};if _dcbd ._cbgge !=nil {_dcbd ._cbgge .PdfObject =_affb ;
return _dcbd ._cbgge ;};return _affb ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_bgb :=&PdfBorderStyle {};return _bgb };

// ToPdfObject implements interface PdfModel.
func (_gcef *PdfFilespec )ToPdfObject ()_daa .PdfObject {_fffc :=_gcef .getDict ();_fffc .Clear ();_fffc .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_fffc .SetIfNotNil ("\u0046\u0053",_gcef .FS );
_fffc .SetIfNotNil ("\u0046",_gcef .F );_fffc .SetIfNotNil ("\u0055\u0046",_gcef .UF );_fffc .SetIfNotNil ("\u0044\u004f\u0053",_gcef .DOS );_fffc .SetIfNotNil ("\u004d\u0061\u0063",_gcef .Mac );_fffc .SetIfNotNil ("\u0055\u006e\u0069\u0078",_gcef .Unix );
_fffc .SetIfNotNil ("\u0049\u0044",_gcef .ID );_fffc .SetIfNotNil ("\u0056",_gcef .V );_fffc .SetIfNotNil ("\u0045\u0046",_gcef .EF );_fffc .SetIfNotNil ("\u0052\u0046",_gcef .RF );_fffc .SetIfNotNil ("\u0044\u0065\u0073\u0063",_gcef .Desc );_fffc .SetIfNotNil ("\u0043\u0049",_gcef .CI );
return _gcef ._ccde ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_faeda :=&XObjectForm {};_ebgae :=&_daa .PdfObjectStream {};_ebgae .PdfObjectDictionary =_daa .MakeDict ();_faeda ._ebedbd =_ebgae ;return _faeda ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_fbbf :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_fbbf .N =N ;return _fbbf ,nil ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _d .Time ){_gdggd .Lock ();defer _gdggd .Unlock ();_gebce =creationDate ;};const (_cdfcd =0x00001;_bbdc =0x00002;_gaed =0x00004;_bdgeg =0x00008;_dfdf =0x00020;_afdad =0x00040;_gedfc =0x10000;_cggcb =0x20000;_gdba =0x40000;
);

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_fgbc DefaultImageHandler )NewGrayImageFromGoImage (goimg _baa .Image )(*Image ,error ){_babff :=goimg .Bounds ();_gcgbf :=&Image {Width :int64 (_babff .Dx ()),Height :int64 (_babff .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _debff :=goimg .(type ){case *_baa .Gray :if len (_debff .Pix )!=_babff .Dx ()*_babff .Dy (){_baae ,_ecegf :=_ac .GrayConverter .Convert (goimg );
if _ecegf !=nil {return nil ,_ecegf ;};_gcgbf .Data =_baae .Pix ();}else {_gcgbf .Data =_debff .Pix ;};case *_baa .Gray16 :_gcgbf .BitsPerComponent =16;if len (_debff .Pix )!=_babff .Dx ()*_babff .Dy ()*2{_abfgf ,_gbbeb :=_ac .Gray16Converter .Convert (goimg );
if _gbbeb !=nil {return nil ,_gbbeb ;};_gcgbf .Data =_abfgf .Pix ();}else {_gcgbf .Data =_debff .Pix ;};case _ac .Image :_bdfgg :=_debff .Base ();if _bdfgg .ColorComponents ==1{_gcgbf .BitsPerComponent =int64 (_bdfgg .BitsPerComponent );_gcgbf .Data =_bdfgg .Data ;
return _gcgbf ,nil ;};_baea ,_gbce :=_ac .GrayConverter .Convert (goimg );if _gbce !=nil {return nil ,_gbce ;};_gcgbf .Data =_baea .Pix ();default:_caecc ,_efcc :=_ac .GrayConverter .Convert (goimg );if _efcc !=nil {return nil ,_efcc ;};_gcgbf .Data =_caecc .Pix ();
};return _gcgbf ,nil ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_daa .PdfObjectInteger ;BitsPerComponent *_daa .PdfObjectInteger ;VerticesPerRow *_daa .PdfObjectInteger ;Decode *_daa .PdfObjectArray ;Function []PdfFunction ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_cabaa *Image )ColorAt (x ,y int )(_dg .Color ,error ){_cfce :=_ac .BytesPerLine (int (_cabaa .Width ),int (_cabaa .BitsPerComponent ),_cabaa .ColorComponents );switch _cabaa .ColorComponents {case 1:return _ac .ColorAtGrayscale (x ,y ,int (_cabaa .BitsPerComponent ),_cfce ,_cabaa .Data ,_cabaa ._bfdc );
case 3:return _ac .ColorAtNRGBA (x ,y ,int (_cabaa .Width ),_cfce ,int (_cabaa .BitsPerComponent ),_cabaa .Data ,_cabaa ._bbcf ,_cabaa ._bfdc );case 4:return _ac .ColorAtCMYK (x ,y ,int (_cabaa .Width ),_cabaa .Data ,_cabaa ._bfdc );};_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cabaa .ColorComponents ,_cabaa .BitsPerComponent );
return nil ,_ff .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};func (_dfg *PdfReader )newPdfAnnotationLinkFromDict (_agf *_daa .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_aae :=PdfAnnotationLink {};
_aae .A =_agf .Get ("\u0041");_aae .Dest =_agf .Get ("\u0044\u0065\u0073\u0074");_aae .H =_agf .Get ("\u0048");_aae .PA =_agf .Get ("\u0050\u0041");_aae .QuadPoints =_agf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_aae .BS =_agf .Get ("\u0042\u0053");
return &_aae ,nil ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _eef .Permissions ;Algorithm EncryptionAlgorithm ;};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_gcege *PdfPageResources )HasPatternByName (keyName _daa .PdfObjectName )bool {_ ,_fbbeb :=_gcege .GetPatternByName (keyName );return _fbbeb ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_ccea *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_eeaf *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_aefe ,_dfcc :=color .(*PdfColorPattern );if !_dfcc {_ae .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _aefe .Color ==nil {return color ,nil ;};if _eeaf .UnderlyingCS ==nil {return nil ,_ff .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _eeaf .UnderlyingCS .ColorToRGB (_aefe .Color );
};

// GetOutlineTree returns the outline tree.
func (_acbaee *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _acbaee ._bgceg };

// Encoder returns the font's text encoder.
func (_aebb pdfCIDFontType2 )Encoder ()_df .TextEncoder {return _aebb ._bbbd };

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_gdggd .Lock ();defer _gdggd .Unlock ();_fbebea =subject };

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject implements interface PdfModel.
func (_fadge *PdfAnnotationText )ToPdfObject ()_daa .PdfObject {_fadge .PdfAnnotation .ToPdfObject ();_cegf :=_fadge ._gbf ;_bcd :=_cegf .PdfObject .(*_daa .PdfObjectDictionary );if _fadge .PdfAnnotationMarkup !=nil {_fadge .PdfAnnotationMarkup .appendToPdfDictionary (_bcd );
};_bcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0054\u0065\u0078\u0074"));_bcd .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fadge .Open );_bcd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fadge .Name );_bcd .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fadge .State );
_bcd .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_fadge .StateModel );return _cegf ;};func (_ceabe *PdfWriter )mapObjectStreams (_baabg bool )(map[_daa .PdfObject ]bool ,bool ){_ebbdb :=make (map[_daa .PdfObject ]bool );
for _ ,_fcfbb :=range _ceabe ._aaaae {if _ceag ,_fedbg :=_fcfbb .(*_daa .PdfObjectStreams );_fedbg {_baabg =true ;for _ ,_bacda :=range _ceag .Elements (){_ebbdb [_bacda ]=true ;if _gabcd ,_ddaaca :=_bacda .(*_daa .PdfIndirectObject );_ddaaca {_ebbdb [_gabcd .PdfObject ]=true ;
};};};};return _ebbdb ,_baabg ;};func (_dbaaea *PdfWriter )optimize ()error {if _dbaaea ._dfffab ==nil {return nil ;};var _dfade error ;_dbaaea ._aaaae ,_dfade =_dbaaea ._dfffab .Optimize (_dbaaea ._aaaae );if _dfade !=nil {return _dfade ;};_fabgc :=make (map[_daa .PdfObject ]struct{},len (_dbaaea ._aaaae ));
for _ ,_abgda :=range _dbaaea ._aaaae {_fabgc [_abgda ]=struct{}{};};_dbaaea ._egfgg =_fabgc ;return nil ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_df .SimpleEncoder ,error ){_bgae ,_gcbcb :=_bcbdg (basefont );if _gcbcb !=nil {return nil ,nil ,_gcbcb ;};_dfded ,_aefef :=_bgae .Encoder ().(_df .SimpleEncoder );
if !_aefef {return nil ,nil ,_c .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_bgae .Encoder ());
};_dcecg :=make (map[rune ]_df .GlyphName );for _aecc :=range alphabet {if _ ,_fdbf :=_dfded .RuneToCharcode (_aecc );!_fdbf {_ ,_gecbc :=_bgae ._cgdf .Read (_aecc );if !_gecbc {_ae .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_aecc ,_aecc );
continue ;};_gcbcc ,_gecbc :=_df .RuneToGlyph (_aecc );if !_gecbc {_ae .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_aecc ,_aecc );continue ;};if len (_dcecg )>=255{return nil ,nil ,_ff .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_dcecg [_aecc ]=_gcbcc ;};};var (_fgfd []_df .CharCode ;_fafaf []_df .CharCode ;);for _ffae :=_df .CharCode (1);_ffae <=0xff;_ffae ++{_edbee ,_abbca :=_dfded .CharcodeToRune (_ffae );if !_abbca {_fgfd =append (_fgfd ,_ffae );continue ;};if _ ,_abbca =alphabet [_edbee ];
!_abbca {_fafaf =append (_fafaf ,_ffae );};};_fcff :=append (_fgfd ,_fafaf ...);if len (_fcff )< len (_dcecg ){return nil ,nil ,_c .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_dcecg ),len (_fcff ));
};_gaff :=make ([]rune ,0,len (_dcecg ));for _aceaf :=range _dcecg {_gaff =append (_gaff ,_aceaf );};_cb .Slice (_gaff ,func (_gfaaa ,_feec int )bool {return _gaff [_gfaaa ]< _gaff [_feec ]});_agcd :=make (map[_df .CharCode ]_df .GlyphName ,len (_gaff ));
for _ ,_gecde :=range _gaff {_eeade :=_fcff [0];_fcff =_fcff [1:];_agcd [_eeade ]=_dcecg [_gecde ];};_dfded =_df .ApplyDifferences (_dfded ,_agcd );_bgae .SetEncoder (_dfded );return &PdfFont {_gbbee :&_bgae },_dfded ,nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_gfdd *PdfAppender )UpdateObject (obj _daa .PdfObject ){_gfdd .replaceObject (obj ,obj );if _ ,_eeeb :=_gfdd ._bbgd [obj ];!_eeeb {_gfdd ._eccf =append (_gfdd ._eccf ,obj );_gfdd ._bbgd [obj ]=struct{}{};};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_babf *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgae :=vals [0];if _fgae < 0.0||_fgae > 1.0{_ae .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _fgae < 0.0{_fgae =0.0;}else if _fgae > 1.0{_fgae =1.0;};return NewPdfColorDeviceGray (_fgae ),nil ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_accb *_daa .PdfIndirectObject ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_fddc *PdfFieldButton )IsRadio ()bool {return _fddc .GetType ()==ButtonTypeRadio };

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_egg :=NewPdfAnnotation ();_adec :=&PdfAnnotationPolygon {};_adec .PdfAnnotation =_egg ;_adec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egg .SetContext (_adec );return _adec ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_eecfe :=PdfPage {};_eecfe ._bbcff =_daa .MakeDict ();_eecfe .Resources =NewPdfPageResources ();_edafa :=_daa .PdfIndirectObject {};_edafa .PdfObject =_eecfe ._bbcff ;_eecfe ._cfgb =&_edafa ;_eecfe ._cdef =*_eecfe ._bbcff ;return &_eecfe ;
};type pdfFont interface{_ec .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_daa .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_bbdg *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _bbdg .Alternate ==nil {_ae .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _bbdg .N ==1{_ae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_cfdb :=NewPdfColorspaceDeviceGray ();return _cfdb .ImageToRGB (img );}else if _bbdg .N ==3{_ae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _bbdg .N ==4{_ae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_gcebf :=NewPdfColorspaceDeviceCMYK ();return _gcebf .ImageToRGB (img );}else {return img ,_ff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ae .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_bbdg );
_dabe ,_dafd :=_bbdg .Alternate .ImageToRGB (img );_ae .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_ae .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_dabe );
return _dabe ,_dafd ;};func (_fefag *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _fedbb []*PdfFieldSignature ;for _ ,_gfbd :=range _fefag .AllFields (){switch _efga :=_gfbd .GetContext ().(type ){case *PdfFieldSignature :_fbba :=_efga ;_fedbb =append (_fedbb ,_fbba );
};};return _fedbb ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_eaeg :=NewPdfAnnotation ();_afc :=&PdfAnnotationPolyLine {};_afc .PdfAnnotation =_eaeg ;_afc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eaeg .SetContext (_afc );return _afc ;};

// Write writes out the PDF.
func (_bega *PdfWriter )Write (writer _dgg .Writer )error {_ae .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_ggbcf :=_bega .checkLicense ();if _ggbcf !=nil {return _ggbcf ;};if _ggbcf =_bega .writeOutlines ();_ggbcf !=nil {return _ggbcf ;};if _ggbcf =_bega .writeAcroFormFields ();
_ggbcf !=nil {return _ggbcf ;};_bega .checkPendingObjects ();if _ggbcf =_bega .writeOutputIntents ();_ggbcf !=nil {return _ggbcf ;};_bega .setCatalogVersion ();_bega .copyObjects ();if _ggbcf =_bega .optimize ();_ggbcf !=nil {return _ggbcf ;};if _ggbcf =_bega .optimizeDocument ();
_ggbcf !=nil {return _ggbcf ;};var _gefbf _a .Hash ;if _bega ._gbcf {_gefbf =_fa .New ();writer =_dgg .MultiWriter (_gefbf ,writer );};_bega .setWriter (writer );_gcacg :=_bega .checkCrossReferenceStream ();_cdaag ,_gcacg :=_bega .mapObjectStreams (_gcacg );
_bega .adjustXRefAffectedVersion (_gcacg );_bega .writeDocumentVersion ();_bega .updateObjectNumbers ();_bega .writeObjects ();if _ggbcf =_bega .writeObjectsInStreams (_cdaag );_ggbcf !=nil {return _ggbcf ;};_fdccg :=_bega ._badfb ;var _gefcg int ;for _cbeeb :=range _bega ._agfc {if _cbeeb > _gefcg {_gefcg =_cbeeb ;
};};if _bega ._gbcf {if _ggbcf =_bega .setHashIDs (_gefbf );_ggbcf !=nil {return _ggbcf ;};};if _gcacg {if _ggbcf =_bega .writeXRefStreams (_gefcg ,_fdccg );_ggbcf !=nil {return _ggbcf ;};}else {_bega .writeTrailer (_gefcg );};_bega .makeOffSetReference (_fdccg );
if _ggbcf =_bega .flushWriter ();_ggbcf !=nil {return _ggbcf ;};return nil ;};func (_gdgf *PdfReader )newPdfAnnotationStrikeOut (_efbc *_daa .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_adab :=PdfAnnotationStrikeOut {};_dfbcd ,_gag :=_gdgf .newPdfAnnotationMarkupFromDict (_efbc );
if _gag !=nil {return nil ,_gag ;};_adab .PdfAnnotationMarkup =_dfbcd ;_adab .QuadPoints =_efbc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_adab ,nil ;};func _abeag (_bbfg _daa .PdfObject )(*fontFile ,error ){_ae .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_bbfg );
_eebga :=&fontFile {};_bbfg =_daa .TraceToDirectObject (_bbfg );_fffg ,_babag :=_bbfg .(*_daa .PdfObjectStream );if !_babag {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_bbfg );
return nil ,_daa .ErrTypeError ;};_gfedd :=_fffg .PdfObjectDictionary ;_ccga ,_dddcd :=_daa .DecodeStream (_fffg );if _dddcd !=nil {return nil ,_dddcd ;};_gfddg ,_babag :=_daa .GetNameVal (_gfedd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_babag {_eebga ._dfgg =_gfddg ;
if _gfddg =="\u0054\u0079\u0070\u0065\u0031\u0043"{_ae .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_cbff ,_ :=_daa .GetIntVal (_gfedd .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_accg ,_ :=_daa .GetIntVal (_gfedd .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _cbff > len (_ccga ){_cbff =len (_ccga );
};if _cbff +_accg > len (_ccga ){_accg =len (_ccga )-_cbff ;};_cedf :=_ccga [:_cbff ];var _gafg []byte ;if _accg > 0{_gafg =_ccga [_cbff :_cbff +_accg ];};if _cbff > 0&&_accg > 0{_eadbb :=_eebga .loadFromSegments (_cedf ,_gafg );if _eadbb !=nil {return nil ,_eadbb ;
};};return _eebga ,nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_gebe *PdfPageResources )SetColorspaceByName (keyName _daa .PdfObjectName ,cs PdfColorspace )error {_fdcee ,_baeae :=_gebe .GetColorspaces ();if _baeae !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_baeae );
return _baeae ;};if _fdcee ==nil {_fdcee =NewPdfPageResourcesColorspaces ();_gebe .SetColorSpace (_fdcee );};_fdcee .Set (keyName ,cs );return nil ;};

// GetNumComponents returns the number of color components.
func (_fefd *PdfColorspaceICCBased )GetNumComponents ()int {return _fefd .N };

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_bbcf []byte ;_bfdc []float64 ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _daa .PdfObject ;Dest _daa .PdfObject ;H _daa .PdfObject ;PA _daa .PdfObject ;QuadPoints _daa .PdfObject ;BS _daa .PdfObject ;_afgc *PdfAction ;_cdbf *PdfReader ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _daa .PdfObject ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cecff ,_ggga :=_dga .Open (filePath );if _ggga !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ggga );
return nil ,_ggga ;};defer _cecff .Close ();return NewPdfFontFromTTF (_cecff );};func _eafbf (_dcad _daa .PdfObject )(*PdfColorspaceCalGray ,error ){_ddbbd :=NewPdfColorspaceCalGray ();if _cagb ,_bcdf :=_dcad .(*_daa .PdfIndirectObject );_bcdf {_ddbbd ._aacf =_cagb ;
};_dcad =_daa .TraceToDirectObject (_dcad );_ccbac ,_abfg :=_dcad .(*_daa .PdfObjectArray );if !_abfg {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ccbac .Len ()!=2{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_dcad =_daa .TraceToDirectObject (_ccbac .Get (0));_feae ,_abfg :=_dcad .(*_daa .PdfObjectName );if !_abfg {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_feae !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_c .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_dcad =_daa .TraceToDirectObject (_ccbac .Get (1));
_aabf ,_abfg :=_dcad .(*_daa .PdfObjectDictionary );if !_abfg {return nil ,_c .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_dcad =_aabf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_dcad =_daa .TraceToDirectObject (_dcad );_cdgba ,_abfg :=_dcad .(*_daa .PdfObjectArray );if !_abfg {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _cdgba .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ececb ,_ddafa :=_cdgba .GetAsFloat64Slice ();
if _ddafa !=nil {return nil ,_ddafa ;};_ddbbd .WhitePoint =_ececb ;_dcad =_aabf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _dcad !=nil {_dcad =_daa .TraceToDirectObject (_dcad );_cefge ,_dffc :=_dcad .(*_daa .PdfObjectArray );
if !_dffc {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _cefge .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_eegaa ,_dafe :=_cefge .GetAsFloat64Slice ();if _dafe !=nil {return nil ,_dafe ;};_ddbbd .BlackPoint =_eegaa ;};_dcad =_aabf .Get ("\u0047\u0061\u006dm\u0061");if _dcad !=nil {_dcad =_daa .TraceToDirectObject (_dcad );_dcbf ,_acba :=_daa .GetNumberAsFloat (_dcad );
if _acba !=nil {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_ddbbd .Gamma =_dcbf ;};return _ddbbd ,nil ;};func (_gbdgb *PdfReader )buildOutlineTree (_adgaa _daa .PdfObject ,_agagb *PdfOutlineTreeNode ,_bbdd *PdfOutlineTreeNode ,_cdcfa map[_daa .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _cdcfa ==nil {_cdcfa =map[_daa .PdfObject ]struct{}{};
};_cdcfa [_adgaa ]=struct{}{};_aeeg ,_dedega :=_adgaa .(*_daa .PdfIndirectObject );if !_dedega {return nil ,nil ,_c .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_adgaa );
};_eeca ,_cdbfe :=_aeeg .PdfObject .(*_daa .PdfObjectDictionary );if !_cdbfe {return nil ,nil ,_ff .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ae .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_eeca ,_aeeg ,_aeeg );
if _eefdb :=_eeca .Get ("\u0054\u0069\u0074l\u0065");_eefdb !=nil {_bgbe ,_feecg :=_gbdgb .newPdfOutlineItemFromIndirectObject (_aeeg );if _feecg !=nil {return nil ,nil ,_feecg ;};_bgbe .Parent =_agagb ;_bgbe .Prev =_bbdd ;_fbda :=_daa .ResolveReference (_eeca .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_ffgaf :=_cdcfa [_fbda ];_fbda !=nil &&_fbda !=_aeeg &&!_ffgaf {if !_daa .IsNullObject (_fbda ){_ebgad ,_dfag ,_eeea :=_gbdgb .buildOutlineTree (_fbda ,&_bgbe .PdfOutlineTreeNode ,nil ,_cdcfa );if _eeea !=nil {_ae .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_eeea );
}else {_bgbe .First =_ebgad ;_bgbe .Last =_dfag ;};};};_bdbf :=_daa .ResolveReference (_eeca .Get ("\u004e\u0065\u0078\u0074"));if _ ,_fccff :=_cdcfa [_bdbf ];_bdbf !=nil &&_bdbf !=_aeeg &&!_fccff {if !_daa .IsNullObject (_bdbf ){_bgfba ,_fcbac ,_fdgdbe :=_gbdgb .buildOutlineTree (_bdbf ,_agagb ,&_bgbe .PdfOutlineTreeNode ,_cdcfa );
if _fdgdbe !=nil {_ae .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_fdgdbe );
}else {_bgbe .Next =_bgfba ;return &_bgbe .PdfOutlineTreeNode ,_fcbac ,nil ;};};};return &_bgbe .PdfOutlineTreeNode ,&_bgbe .PdfOutlineTreeNode ,nil ;};_edcff ,_ffecd :=_febb (_aeeg );if _ffecd !=nil {return nil ,nil ,_ffecd ;};_edcff .Parent =_agagb ;
if _facb :=_eeca .Get ("\u0046\u0069\u0072s\u0074");_facb !=nil {_facb =_daa .ResolveReference (_facb );if _ ,_aagde :=_cdcfa [_facb ];_facb !=nil &&_facb !=_aeeg &&!_aagde {_faedd :=_daa .TraceToDirectObject (_facb );if _ ,_abdb :=_faedd .(*_daa .PdfObjectNull );
!_abdb &&_faedd !=nil {_decbg ,_eabdd ,_agdbf :=_gbdgb .buildOutlineTree (_facb ,&_edcff .PdfOutlineTreeNode ,nil ,_cdcfa );if _agdbf !=nil {_ae .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_agdbf );
}else {_edcff .First =_decbg ;_edcff .Last =_eabdd ;};};};};return &_edcff .PdfOutlineTreeNode ,&_edcff .PdfOutlineTreeNode ,nil ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_cggf :=NewPdfAnnotation ();_cgf :=&PdfAnnotationScreen {};_cgf .PdfAnnotation =_cggf ;_cggf .SetContext (_cgf );return _cgf ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_befe *_daa .PdfIndirectObject ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _daa .PdfObject ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _daa .PdfObject ;Flags _daa .PdfObject ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_ec .CharMetrics ;

// ToPdfObject implements interface PdfModel.
func (_gdd *PdfAnnotationStrikeOut )ToPdfObject ()_daa .PdfObject {_gdd .PdfAnnotation .ToPdfObject ();_abb :=_gdd ._gbf ;_efad :=_abb .PdfObject .(*_daa .PdfObjectDictionary );_gdd .PdfAnnotationMarkup .appendToPdfDictionary (_efad );_efad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_efad .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gdd .QuadPoints );return _abb ;};

// ToPdfObject implements interface PdfModel.
func (_deed *PdfAnnotationWatermark )ToPdfObject ()_daa .PdfObject {_deed .PdfAnnotation .ToPdfObject ();_gdbf :=_deed ._gbf ;_gec :=_gdbf .PdfObject .(*_daa .PdfObjectDictionary );_gec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_gec .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_deed .FixedPrint );return _gdbf ;};func _ccac (_bfadf _dgg .ReadSeeker ,_babed *ReaderOpts ,_cbebe bool ,_gcdce string )(*PdfReader ,error ){if _babed ==nil {_babed =NewReaderOpts ();
};_cfcbf :=*_babed ;_dgeaa :=&PdfReader {_befda :_bfadf ,_gcefb :map[_daa .PdfObject ]struct{}{},_beaec :_aaddf (),_gagec :_babed .LazyLoad ,_ggbfb :_babed .ComplianceMode ,_edecf :_cbebe ,_dffec :&_cfcbf };_eecgf ,_adeeg :=_adebe ("\u0072");if _adeeg !=nil {return nil ,_adeeg ;
};_adeeg =_agc .Track (_eecgf ,_gcdce );if _adeeg !=nil {return nil ,_adeeg ;};_dgeaa ._dgdc =_eecgf ;var _gege *_daa .PdfParser ;if !_dgeaa ._ggbfb {_gege ,_adeeg =_daa .NewParser (_bfadf );}else {_gege ,_adeeg =_daa .NewCompliancePdfParser (_bfadf );
};if _adeeg !=nil {return nil ,_adeeg ;};_dgeaa ._adgcg =_gege ;_gdcef ,_adeeg :=_dgeaa .IsEncrypted ();if _adeeg !=nil {return nil ,_adeeg ;};if !_gdcef {_adeeg =_dgeaa .loadStructure ();if _adeeg !=nil {return nil ,_adeeg ;};}else if _cbebe {_dcbae ,_badeb :=_dgeaa .Decrypt ([]byte (_babed .Password ));
if _badeb !=nil {return nil ,_badeb ;};if !_dcbae {return nil ,_ff .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_dgeaa ._dagbb =make (map[*PdfReader ]*PdfReader );_dgeaa ._dcfgcf =make ([]*PdfReader ,_gege .GetRevisionNumber ());return _dgeaa ,nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_gfdfb :=PdfColorDeviceGray (grayVal );return &_gfdfb ;};func (_bgegf *PdfAcroForm )filteredFields (_edfbg FieldFilterFunc ,_cbbc bool )[]*PdfField {if _bgegf ==nil {return nil ;};return _aeeea (_bgegf .Fields ,_edfbg ,_cbbc );
};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_cfgdd *PdfWriter )SetNamedDestinations (dests _daa .PdfObject )error {if dests ==nil {return nil ;};_ae .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_cfgdd ._dbae .Set ("\u0044\u0065\u0073t\u0073",dests );return _cfgdd .addObjects (dests );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_agabc *PdfColorspaceLab )ColorFromPdfObjects (objects []_daa .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgbd ,_gecd :=_daa .GetNumbersAsFloat (objects );
if _gecd !=nil {return nil ,_gecd ;};return _agabc .ColorFromFloats (_fgbd );};

// GetContainingPdfObject implements interface PdfModel.
func (_eaab *PdfFilespec )GetContainingPdfObject ()_daa .PdfObject {return _eaab ._ccde };

// A returns the value of the A component of the color.
func (_dagc *PdfColorLab )A ()float64 {return _dagc [1]};func (_adfe *PdfReader )newPdfAnnotation3DFromDict (_dbbcf *_daa .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_efaef :=PdfAnnotation3D {};_efaef .T3DD =_dbbcf .Get ("\u0033\u0044\u0044");_efaef .T3DV =_dbbcf .Get ("\u0033\u0044\u0056");
_efaef .T3DA =_dbbcf .Get ("\u0033\u0044\u0041");_efaef .T3DI =_dbbcf .Get ("\u0033\u0044\u0049");_efaef .T3DB =_dbbcf .Get ("\u0033\u0044\u0042");return &_efaef ,nil ;};func _efbd (_dbgb *_daa .PdfObjectDictionary )*VRI {_aaed ,_ :=_daa .GetString (_dbgb .Get ("\u0054\u0055"));
_dadgd ,_ :=_daa .GetString (_dbgb .Get ("\u0054\u0053"));return &VRI {Cert :_dgdfbe (_dbgb .Get ("\u0043\u0065\u0072\u0074")),OCSP :_dgdfbe (_dbgb .Get ("\u004f\u0043\u0053\u0050")),CRL :_dgdfbe (_dbgb .Get ("\u0043\u0052\u004c")),TU :_aaed ,TS :_dadgd };
};

// B returns the value of the B component of the color.
func (_bbbe *PdfColorCalRGB )B ()float64 {return _bbbe [1]};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_bbdf *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func (_bdad *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_eaa :=&PdfAnnotation {};_eaa ._gbf =_daa .MakeIndirectObject (_daa .MakeDict ());return _eaa ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_aagb *Image )SetSamples (samples []uint32 ){if _aagb .BitsPerComponent < 8{samples =_aagb .samplesAddPadding (samples );};_bafa :=_gf .ResampleUint32 (samples ,int (_aagb .BitsPerComponent ),8);_cbfa :=make ([]byte ,len (_bafa ));for _dddag ,_adac :=range _bafa {_cbfa [_dddag ]=byte (_adac );
};_aagb .Data =_cbfa ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_dacac *LTV )EnableByName (name string ,extraCerts []*_e .Certificate )error {_cgeca :=_dacac ._ceaa ._egaf .AcroForm ;for _ ,_abace :=range _cgeca .AllFields (){_bgeca ,_ :=_abace .GetContext ().(*PdfFieldSignature );if _bgeca ==nil {continue ;};
if _bacc :=_bgeca .PartialName ();_bacc !=name {continue ;};return _dacac .Enable (_bgeca .V ,extraCerts );};return nil ;};func (_bceed *PdfWriter )writeAcroFormFields ()error {if _bceed ._fcgff ==nil {return nil ;};_ae .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_efddb :=_bceed ._fcgff .ToPdfObject ();_ae .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_efddb );_bceed ._dbae .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_efddb );_dgce :=_bceed .addObjects (_efddb );
if _dgce !=nil {return _dgce ;};return nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_gbadc :=NewPdfOutline ();_gbadc ._eabde =&_gbadc ;return _gbadc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_edea *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecda :=vals [0];if _ecda < 0.0||_ecda > 100.0{_ae .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_ecda );
return nil ,ErrColorOutOfRange ;};_eddf :=vals [1];_cgefge :=float64 (-100);_gbeg :=float64 (100);if len (_edea .Range )> 1{_cgefge =_edea .Range [0];_gbeg =_edea .Range [1];};if _eddf < _cgefge ||_eddf > _gbeg {_ae .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_eddf ,_cgefge ,_gbeg );
return nil ,ErrColorOutOfRange ;};_fecc :=vals [2];_dfeg :=float64 (-100);_abafd :=float64 (100);if len (_edea .Range )> 3{_dfeg =_edea .Range [2];_abafd =_edea .Range [3];};if _fecc < _dfeg ||_fecc > _abafd {_ae .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_fecc ,_dfeg ,_abafd );
return nil ,ErrColorOutOfRange ;};_dcec :=NewPdfColorLab (_ecda ,_eddf ,_fecc );return _dcec ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dada *PdfAnnotationTrapNet )ToPdfObject ()_daa .PdfObject {_dada .PdfAnnotation .ToPdfObject ();_ccbb :=_dada ._gbf ;_abbae :=_ccbb .PdfObject .(*_daa .PdfObjectDictionary );_abbae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _ccbb ;};

// HasXObjectByName checks if has XObject resource by name.
func (_eaed *PdfPage )HasXObjectByName (name _daa .PdfObjectName )bool {_cdeab ,_dcfc :=_eaed .Resources .XObject .(*_daa .PdfObjectDictionary );if !_dcfc {return false ;};if _efddd :=_cdeab .Get (name );_efddd !=nil {return true ;};return false ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_edeae *PdfColorspaceSpecialPattern )ToPdfObject ()_daa .PdfObject {if _edeae .UnderlyingCS ==nil {return _daa .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_dcca :=_daa .MakeArray (_daa .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_dcca .Append (_edeae .UnderlyingCS .ToPdfObject ());if _edeae ._bedc !=nil {_edeae ._bedc .PdfObject =_dcca ;return _edeae ._bedc ;};return _dcca ;};func (_agbgd *PdfReader )loadDSS ()(*DSS ,error ){if _agbgd ._adgcg .GetCrypter ()!=nil &&!_agbgd ._adgcg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_cgcg :=_agbgd ._cgace .Get ("\u0044\u0053\u0053");if _cgcg ==nil {return nil ,nil ;};_bafef ,_ :=_daa .GetIndirect (_cgcg );_cgcg =_daa .TraceToDirectObject (_cgcg );switch _ddagd :=_cgcg .(type ){case *_daa .PdfObjectNull :return nil ,nil ;case *_daa .PdfObjectDictionary :return _acfd (_bafef ,_ddagd );
};return nil ,_c .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_cgcg );};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_cdeba :=PdfWriter {};_cdeba ._egfgg =map[_daa .PdfObject ]struct{}{};_cdeba ._aaaae =[]_daa .PdfObject {};_cdeba ._ffacb =map[_daa .PdfObject ][]*_daa .PdfObjectDictionary {};_cdeba ._dbgf =map[_daa .PdfObject ]struct{}{};
_cdeba ._abfcb .Major =1;_cdeba ._abfcb .Minor =3;_acgcg :=_daa .MakeDict ();_eagc :=[]struct{_acbec _daa .PdfObjectName ;_febfg string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_ggada ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_gaede ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_fcedc ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_dcffa ()},{"\u0054\u0069\u0074l\u0065",_cddgd ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_dgde ()}};
for _ ,_ggdcdd :=range _eagc {if _ggdcdd ._febfg !=""{_acgcg .Set (_ggdcdd ._acbec ,_daa .MakeString (_ggdcdd ._febfg ));};};if _gecef :=_eadgd ();!_gecef .IsZero (){if _dgcd ,_feecd :=NewPdfDateFromTime (_gecef );_feecd ==nil {_acgcg .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dgcd .ToPdfObject ());
};};if _eecec :=_cdfdg ();!_eecec .IsZero (){if _ddgfd ,_efgeb :=NewPdfDateFromTime (_eecec );_efgeb ==nil {_acgcg .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_ddgfd .ToPdfObject ());};};_ecaab :=_daa .PdfIndirectObject {};_ecaab .PdfObject =_acgcg ;
_cdeba ._badb =&_ecaab ;_cdeba .addObject (&_ecaab );_dfbae :=_daa .PdfIndirectObject {};_agdgf :=_daa .MakeDict ();_agdgf .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_dfbae .PdfObject =_agdgf ;_cdeba ._gcdee =&_dfbae ;
_cdeba .addObject (_cdeba ._gcdee );_fgga ,_gbadb :=_adebe ("\u0077");if _gbadb !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbadb );};_cdeba ._fdef =_fgga ;_ddfdg :=_daa .PdfIndirectObject {};_gafaf :=_daa .MakeDict ();_gafaf .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName ("\u0050\u0061\u0067e\u0073"));
_cbafg :=_daa .PdfObjectArray {};_gafaf .Set ("\u004b\u0069\u0064\u0073",&_cbafg );_gafaf .Set ("\u0043\u006f\u0075n\u0074",_daa .MakeInteger (0));_ddfdg .PdfObject =_gafaf ;_cdeba ._deafc =&_ddfdg ;_cdeba ._dgaggb =map[_daa .PdfObject ]struct{}{};_cdeba .addObject (_cdeba ._deafc );
_agdgf .Set ("\u0050\u0061\u0067e\u0073",&_ddfdg );_cdeba ._dbae =_agdgf ;_ae .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_dfbae );return _cdeba ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_acfg *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _cg .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_daa .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_daa .MakeInteger (int64 (permission )),V :_daa .MakeName ("\u0031\u002e\u0032")};
};func (_bcgec *PdfWriter )updateObjectNumbers (){_ebdef :=_bcgec .ObjNumOffset ;_eeccf :=0;for _ ,_daafc :=range _bcgec ._aaaae {_cabbb :=int64 (_eeccf +1+_ebdef );_efdbe :=true ;if _bcgec ._ffde {if _dcecc ,_ggadf :=_bcgec ._faabf [_daafc ];_ggadf {_cabbb =_dcecc ;
_efdbe =false ;};};switch _bfffe :=_daafc .(type ){case *_daa .PdfIndirectObject :_bfffe .ObjectNumber =_cabbb ;_bfffe .GenerationNumber =0;case *_daa .PdfObjectStream :_bfffe .ObjectNumber =_cabbb ;_bfffe .GenerationNumber =0;case *_daa .PdfObjectStreams :_bfffe .ObjectNumber =_cabbb ;
_bfffe .GenerationNumber =0;default:_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_bfffe );continue ;
};if _efdbe {_eeccf ++;};};_gdgff :=func (_degc _daa .PdfObject )int64 {switch _bffcb :=_degc .(type ){case *_daa .PdfIndirectObject :return _bffcb .ObjectNumber ;case *_daa .PdfObjectStream :return _bffcb .ObjectNumber ;case *_daa .PdfObjectStreams :return _bffcb .ObjectNumber ;
};return 0;};_cb .SliceStable (_bcgec ._aaaae ,func (_bgedab ,_bacdd int )bool {return _gdgff (_bcgec ._aaaae [_bgedab ])< _gdgff (_bcgec ._aaaae [_bacdd ])});};func _dggga (_cdag *_daa .PdfObjectDictionary )(*PdfFieldText ,error ){_fbbd :=&PdfFieldText {};
_fbbd .DA ,_ =_daa .GetString (_cdag .Get ("\u0044\u0041"));_fbbd .Q ,_ =_daa .GetInt (_cdag .Get ("\u0051"));_fbbd .DS ,_ =_daa .GetString (_cdag .Get ("\u0044\u0053"));_fbbd .RV =_cdag .Get ("\u0052\u0056");_fbbd .MaxLen ,_ =_daa .GetInt (_cdag .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));
return _fbbd ,nil ;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_fbdd :=&PdfColorPattern {};return _fbdd };func (_cbcb *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _cbcb ._eccc };

// SetContentStream sets the pattern cell's content stream.
func (_dddaa *PdfTilingPattern )SetContentStream (content []byte ,encoder _daa .StreamEncoder )error {_deefc ,_fbgcd :=_dddaa ._degd .(*_daa .PdfObjectStream );if !_fbgcd {_ae .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dddaa ._degd );
return _daa .ErrTypeError ;};if encoder ==nil {encoder =_daa .NewRawEncoder ();};_gagbf :=_deefc .PdfObjectDictionary ;_fgbbf :=encoder .MakeStreamDict ();_gagbf .Merge (_fgbbf );_deced ,_bfecec :=encoder .EncodeBytes (content );if _bfecec !=nil {return _bfecec ;
};_gagbf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_daa .MakeInteger (int64 (len (_deced ))));_deefc .Stream =_deced ;return nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _daa .PdfObject ;IC _daa .PdfObject ;BE _daa .PdfObject ;RD _daa .PdfObject ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_degf *PdfPage )ToPdfObject ()_daa .PdfObject {_fgdgb :=_degf ._cfgb ;_degf .GetPageDict ();return _fgdgb ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_gdggd .Lock ();defer _gdggd .Unlock ();_fbcec =title };

// A returns the value of the A component of the color.
func (_fbge *PdfColorCalRGB )A ()float64 {return _fbge [0]};func _gcgab (_cacb *_daa .PdfObjectDictionary )(*PdfShadingType2 ,error ){_ggebg :=PdfShadingType2 {};_bbcfa :=_cacb .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bbcfa ==nil {_ae .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_dbage ,_gcbag :=_bbcfa .(*_daa .PdfObjectArray );if !_gcbag {_ae .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbcfa );
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _dbage .Len ()!=4{_ae .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dbage .Len ());
return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_ggebg .Coords =_dbage ;if _ebebd :=_cacb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ebebd !=nil {_ebebd =_daa .TraceToDirectObject (_ebebd );
_ceae ,_aedae :=_ebebd .(*_daa .PdfObjectArray );if !_aedae {_ae .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebebd );return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ggebg .Domain =_ceae ;};_bbcfa =_cacb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bbcfa ==nil {_ae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_ggebg .Function =[]PdfFunction {};if _cebfc ,_fcdff :=_bbcfa .(*_daa .PdfObjectArray );_fcdff {for _ ,_ffdd :=range _cebfc .Elements (){_fcfee ,_dgeab :=_bcec (_ffdd );if _dgeab !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgeab );
return nil ,_dgeab ;};_ggebg .Function =append (_ggebg .Function ,_fcfee );};}else {_eeccd ,_cbgbg :=_bcec (_bbcfa );if _cbgbg !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cbgbg );
return nil ,_cbgbg ;};_ggebg .Function =append (_ggebg .Function ,_eeccd );};if _cfgbe :=_cacb .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_cfgbe !=nil {_cfgbe =_daa .TraceToDirectObject (_cfgbe );_febdb ,_cegda :=_cfgbe .(*_daa .PdfObjectArray );if !_cegda {_ae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cfgbe );
return nil ,_daa .ErrTypeError ;};if _febdb .Len ()!=2{_ae .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_febdb .Len ());return nil ,ErrInvalidAttribute ;
};_ggebg .Extend =_febdb ;};return &_ggebg ,nil ;};

// GetOptimizer returns current PDF optimizer.
func (_cfcfa *PdfWriter )GetOptimizer ()Optimizer {return _cfcfa ._dfffab };

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _dgg .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _dacda ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _ccac (rs ,opts ,true ,_dacda );
};func _baeb (_ccec *_daa .PdfObjectDictionary )(*PdfShadingType7 ,error ){_bcaaa :=PdfShadingType7 {};_aacadc :=_ccec .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aacadc ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_egga ,_bbgfge :=_aacadc .(*_daa .PdfObjectInteger );if !_bbgfge {_ae .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aacadc );
return nil ,_daa .ErrTypeError ;};_bcaaa .BitsPerCoordinate =_egga ;_aacadc =_ccec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aacadc ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_egga ,_bbgfge =_aacadc .(*_daa .PdfObjectInteger );if !_bbgfge {_ae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aacadc );
return nil ,_daa .ErrTypeError ;};_bcaaa .BitsPerComponent =_egga ;_aacadc =_ccec .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aacadc ==nil {_ae .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_egga ,_bbgfge =_aacadc .(*_daa .PdfObjectInteger );if !_bbgfge {_ae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aacadc );
return nil ,_daa .ErrTypeError ;};_bcaaa .BitsPerComponent =_egga ;_aacadc =_ccec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aacadc ==nil {_ae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_efcfd ,_bbgfge :=_aacadc .(*_daa .PdfObjectArray );if !_bbgfge {_ae .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aacadc );
return nil ,_daa .ErrTypeError ;};_bcaaa .Decode =_efcfd ;if _cdbff :=_ccec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cdbff !=nil {_bcaaa .Function =[]PdfFunction {};if _agggg ,_dfdbbd :=_cdbff .(*_daa .PdfObjectArray );_dfdbbd {for _ ,_cdaced :=range _agggg .Elements (){_cbefa ,_ecbde :=_bcec (_cdaced );
if _ecbde !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ecbde );return nil ,_ecbde ;};_bcaaa .Function =append (_bcaaa .Function ,_cbefa );
};}else {_eebac ,_eabec :=_bcec (_cdbff );if _eabec !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eabec );return nil ,_eabec ;
};_bcaaa .Function =append (_bcaaa .Function ,_eebac );};};return &_bcaaa ,nil ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _daa .PdfObject ;_ffbb []byte ;_cfaf *_daa .PdfIndirectObject ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _dgg .ReadSeeker )(*PdfReader ,error ){const _efbcb ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _ccac (rs ,&ReaderOpts {LazyLoad :true },false ,_efbcb );
};

// ToInteger convert to an integer format.
func (_aafa *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_gaagc :=_ce .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_gaagc *_aafa .C ()),uint32 (_gaagc *_aafa .M ()),uint32 (_gaagc *_aafa .Y ()),uint32 (_gaagc *_aafa .K ())};};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_ggbb *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_cabb *PdfReader )GetCatalogStructTreeRoot ()(_daa .PdfObject ,bool ){if _cabb ._cgace ==nil {return nil ,false ;};_cddf :=_cabb ._cgace .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _cddf ,_cddf !=nil ;
};

// RemovePage removes a page by number.
func (_gggd *PdfAppender )RemovePage (pageNum int ){_dbdd :=pageNum -1;_gggd ._ffda =append (_gggd ._ffda [0:_dbdd ],_gggd ._ffda [pageNum :]...);};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_egfd *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_daa .PdfObject )(PdfColor ,error ){if len (objects )!=_egfd .GetNumComponents (){return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdea ,_agdee :=_daa .GetNumbersAsFloat (objects );
if _agdee !=nil {return nil ,_agdee ;};return _egfd .ColorFromFloats (_bdea );};

// GetNumComponents returns the number of color components (3 for RGB).
func (_dgad *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// ToPdfObject returns a PDF object representation of the outline.
func (_abfb *Outline )ToPdfObject ()_daa .PdfObject {return _abfb .ToPdfOutline ().ToPdfObject ()};func _abffa (_cdbcg _daa .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_fbgde :=NewPdfColorspaceSpecialIndexed ();if _ddbg ,_ffdcg :=_cdbcg .(*_daa .PdfIndirectObject );
_ffdcg {_fbgde ._cfaf =_ddbg ;};_cdbcg =_daa .TraceToDirectObject (_cdbcg );_efgeg ,_gfaf :=_cdbcg .(*_daa .PdfObjectArray );if !_gfaf {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _efgeg .Len ()!=4{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_cdbcg =_efgeg .Get (0);_egbb ,_gfaf :=_cdbcg .(*_daa .PdfObjectName );if !_gfaf {return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_egbb !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_cdbcg =_efgeg .Get (1);_bafc ,_eabe :=DetermineColorspaceNameFromPdfObject (_cdbcg );if _eabe !=nil {return nil ,_eabe ;};if _bafc =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_bafc =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ae .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_bafc );
return nil ,_abbc ;};_ceeb ,_eabe :=NewPdfColorspaceFromPdfObject (_cdbcg );if _eabe !=nil {return nil ,_eabe ;};_fbgde .Base =_ceeb ;_cdbcg =_efgeg .Get (2);_gfbg ,_eabe :=_daa .GetNumberAsInt64 (_cdbcg );if _eabe !=nil {return nil ,_eabe ;};if _gfbg > 255{return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_fbgde .HiVal =int (_gfbg );_cdbcg =_efgeg .Get (3);_fbgde .Lookup =_cdbcg ;_cdbcg =_daa .TraceToDirectObject (_cdbcg );var _efcd []byte ;if _gbee ,_afae :=_cdbcg .(*_daa .PdfObjectString );_afae {_efcd =_gbee .Bytes ();_ae .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_efcd );
}else if _daacc ,_cdgga :=_cdbcg .(*_daa .PdfObjectStream );_cdgga {_ae .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_cdbcg .String ());_ae .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_daacc .Stream ),_daacc .Stream );
_ggee ,_fbab :=_daa .DecodeStream (_daacc );if _fbab !=nil {return nil ,_fbab ;};_ae .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_ggee ),_ggee );_efcd =_ggee ;}else {_ae .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cdbcg );
return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_efcd )< _fbgde .Base .GetNumComponents ()*(_fbgde .HiVal +1){_ae .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_ae .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_efcd ),_fbgde .Base .GetNumComponents (),_fbgde .HiVal );
}else {_efcd =_efcd [:_fbgde .Base .GetNumComponents ()*(_fbgde .HiVal +1)];};_fbgde ._ffbb =_efcd ;return _fbgde ,nil ;};func (_ddbef *PdfFunctionType0 )processSamples ()error {_eafbb :=_gf .ResampleBytes (_ddbef ._bgeef ,_ddbef .BitsPerSample );_ddbef ._bgacd =_eafbb ;
return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_daafg *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_daa .PdfObject )(PdfColor ,error ){if _daafg .Alternate ==nil {if _daafg .N ==1{_egcf :=NewPdfColorspaceDeviceGray ();return _egcf .ColorFromPdfObjects (objects );}else if _daafg .N ==3{_dfab :=NewPdfColorspaceDeviceRGB ();
return _dfab .ColorFromPdfObjects (objects );}else if _daafg .N ==4{_ebfg :=NewPdfColorspaceDeviceCMYK ();return _ebfg .ColorFromPdfObjects (objects );}else {return nil ,_ff .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _daafg .Alternate .ColorFromPdfObjects (objects );};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_bedc *_daa .PdfIndirectObject ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_daa .PdfParser ;DiffPolicy _cg .DiffPolicy ;};

// ToInteger convert to an integer format.
func (_fdcf *PdfColorLab )ToInteger (bits int )[3]uint32 {_gdac :=_ce .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gdac *_fdcf .L ()),uint32 (_gdac *_fdcf .A ()),uint32 (_gdac *_fdcf .B ())};};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_daa .PdfObjectInteger ;BitsPerComponent *_daa .PdfObjectInteger ;BitsPerFlag *_daa .PdfObjectInteger ;Decode *_daa .PdfObjectArray ;Function []PdfFunction ;};func (_egb *PdfReader )newPdfAnnotationUnderlineFromDict (_fee *_daa .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_fba :=PdfAnnotationUnderline {};
_befd ,_fbaa :=_egb .newPdfAnnotationMarkupFromDict (_fee );if _fbaa !=nil {return nil ,_fbaa ;};_fba .PdfAnnotationMarkup =_befd ;_fba .QuadPoints =_fee .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fba ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_edfafc *PdfSignature )GetContainingPdfObject ()_daa .PdfObject {return _edfafc ._cebcc };

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_ggcbf *PdfAcroForm )GetContainingPdfObject ()_daa .PdfObject {return _ggcbf ._bdcag };

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_cbgge *_daa .PdfIndirectObject ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_cagfa *XObjectImage )ToImage ()(*Image ,error ){_cfgea :=&Image {};if _cagfa .Height ==nil {return nil ,_ff .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_cfgea .Height =*_cagfa .Height ;if _cagfa .Width ==nil {return nil ,_ff .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_cfgea .Width =*_cagfa .Width ;if _cagfa .BitsPerComponent ==nil {switch _cagfa .Filter .(type ){case *_daa .CCITTFaxEncoder ,*_daa .JBIG2Encoder :_cfgea .BitsPerComponent =1;
case *_daa .LZWEncoder ,*_daa .RunLengthEncoder :_cfgea .BitsPerComponent =8;default:return nil ,_ff .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_cfgea .BitsPerComponent =*_cagfa .BitsPerComponent ;};_cfgea .ColorComponents =_cagfa .ColorSpace .GetNumComponents ();_cagfa ._deefd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_daa .MakeInteger (int64 (_cfgea .ColorComponents )));
_ebeab ,_cggdc :=_daa .DecodeStream (_cagfa ._deefd );if _cggdc !=nil {return nil ,_cggdc ;};_cfgea .Data =_ebeab ;if _cagfa .Decode !=nil {_debec ,_fdcdd :=_cagfa .Decode .(*_daa .PdfObjectArray );if !_fdcdd {_ae .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_ff .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_gbaacba ,_cagag :=_debec .ToFloat64Array ();if _cagag !=nil {return nil ,_cagag ;};switch _cagfa .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_eecge :=_cagfa .ColorSpace .DecodeArray ();
if _eecge [0]==_gbaacba [0]&&_eecge [1]==_gbaacba [1]&&_eecge [2]==_gbaacba [2]&&_eecge [3]==_gbaacba [3]{_cfgea ._bfdc =_gbaacba ;};default:_cfgea ._bfdc =_gbaacba ;};};return _cfgea ,nil ;};

// PdfVersion returns version of the PDF file.
func (_ffefb *PdfReader )PdfVersion ()_daa .Version {return _ffefb ._adgcg .PdfVersion ()};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_bgdf *PdfField )SetContext (ctx PdfModel ){_bgdf ._afaec =ctx };func _dgde ()string {_gdggd .Lock ();defer _gdggd .Unlock ();return _gccab };

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_bbda :=&PdfColorspaceSpecialSeparation {};return _bbda ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_gdggd .Lock ();defer _gdggd .Unlock ();_gbcd =producer };

// ToPdfObject implements interface PdfModel.
func (_caf *PdfActionHide )ToPdfObject ()_daa .PdfObject {_caf .PdfAction .ToPdfObject ();_gbe :=_caf ._ad ;_afb :=_gbe .PdfObject .(*_daa .PdfObjectDictionary );_afb .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeHide )));_afb .SetIfNotNil ("\u0054",_caf .T );
_afb .SetIfNotNil ("\u0048",_caf .H );return _gbe ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_dfcgg *PdfReader )GetTrailer ()(*_daa .PdfObjectDictionary ,error ){_cdbb :=_dfcgg ._adgcg .GetTrailer ();if _cdbb ==nil {return nil ,_ff .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _cdbb ,nil ;
};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_dgb :=NewPdfAction ();_gc :=&PdfActionNamed {};_gc .PdfAction =_dgb ;_dgb .SetContext (_gc );return _gc ;};func _agec (_ecggf *PdfField ,_dbcfb _daa .PdfObject ){for _ ,_baabb :=range _ecggf .Annotations {_baabb .AS =_dbcfb ;
_baabb .ToPdfObject ();};};func (_gaeef *PdfWriter )addObject (_dcgfg _daa .PdfObject )bool {_fgefga :=_gaeef .hasObject (_dcgfg );if !_fgefga {_deeeg :=_daa .ResolveReferencesDeep (_dcgfg ,_gaeef ._dbgf );if _deeeg !=nil {_ae .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_deeeg );
};_gaeef ._aaaae =append (_gaeef ._aaaae ,_dcgfg );_gaeef ._egfgg [_dcgfg ]=struct{}{};return true ;};return false ;};

// ToPdfObject implements interface PdfModel.
func (_aeabg *PdfSignatureReference )ToPdfObject ()_daa .PdfObject {_befad :=_daa .MakeDict ();_befad .SetIfNotNil ("\u0054\u0079\u0070\u0065",_aeabg .Type );_befad .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_aeabg .TransformMethod );
_befad .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_aeabg .TransformParams );_befad .SetIfNotNil ("\u0044\u0061\u0074\u0061",_aeabg .Data );_befad .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_aeabg .DigestMethod );
return _befad ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_afge *PdfColorspaceCalGray )ToPdfObject ()_daa .PdfObject {_gbfd :=&_daa .PdfObjectArray {};_gbfd .Append (_daa .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_aagg :=_daa .MakeDict ();if _afge .WhitePoint !=nil {_aagg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_daa .MakeArray (_daa .MakeFloat (_afge .WhitePoint [0]),_daa .MakeFloat (_afge .WhitePoint [1]),_daa .MakeFloat (_afge .WhitePoint [2])));
}else {_ae .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _afge .BlackPoint !=nil {_aagg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_daa .MakeArray (_daa .MakeFloat (_afge .BlackPoint [0]),_daa .MakeFloat (_afge .BlackPoint [1]),_daa .MakeFloat (_afge .BlackPoint [2])));
};_aagg .Set ("\u0047\u0061\u006dm\u0061",_daa .MakeFloat (_afge .Gamma ));_gbfd .Append (_aagg );if _afge ._aacf !=nil {_afge ._aacf .PdfObject =_gbfd ;return _afge ._aacf ;};return _gbfd ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _daa .PdfObject ;PreserveRB _daa .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_ebad *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_daa .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgfc ,_cbce :=_daa .GetNumbersAsFloat (objects );
if _cbce !=nil {return nil ,_cbce ;};return _ebad .ColorFromFloats (_fgfc );};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_cbb :=NewPdfAction ();_eb :=&PdfActionURI {};_eb .PdfAction =_cbb ;_cbb .SetContext (_eb );return _eb ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_gaegc *LTV )Enable (sig *PdfSignature ,extraCerts []*_e .Certificate )error {if _aebef :=_gaegc .validateSig (sig );_aebef !=nil {return _aebef ;};_eecg ,_ebafe :=_gaegc .generateVRIKey (sig );if _ebafe !=nil {return _ebafe ;};if _ ,_bcgbe :=_gaegc ._eccgb .VRI [_eecg ];
_bcgbe &&_gaegc .SkipExisting {return nil ;};_gbcec ,_ebafe :=sig .GetCerts ();if _ebafe !=nil {return _ebafe ;};return _gaegc .enable (_gbcec ,extraCerts ,_eecg );};func (_gefcf *PdfWriter )adjustXRefAffectedVersion (_bbdef bool ){if _bbdef &&_gefcf ._abfcb .Major ==1&&_gefcf ._abfcb .Minor < 5{_gefcf ._abfcb .Minor =5;
};};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _daa .PdfObject ;Name _daa .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_caae *PdfColorspaceSpecialSeparation )ToPdfObject ()_daa .PdfObject {_caec :=_daa .MakeArray (_daa .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_caec .Append (_caae .ColorantName );_caec .Append (_caae .AlternateSpace .ToPdfObject ());
_caec .Append (_caae .TintTransform .ToPdfObject ());if _caae ._bgea !=nil {_caae ._bgea .PdfObject =_caec ;return _caae ._bgea ;};return _caec ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_ddb :=NewPdfAnnotation ();_fdb :=&PdfAnnotationUnderline {};_fdb .PdfAnnotation =_ddb ;_fdb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddb .SetContext (_fdb );return _fdb ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_gafe *PdfPageResources )GenerateXObjectName ()_daa .PdfObjectName {_ccfb :=1;for {_cebbg :=_daa .MakeName (_c .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_ccfb ));if !_gafe .HasXObjectByName (*_cebbg ){return *_cebbg ;};_ccfb ++;};};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_aaecb *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_fdea ,_dagb :=color .(*PdfColorCalRGB );if !_dagb {_ae .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dcgdf :=_fdea .A ();_adeb :=_fdea .B ();_abacg :=_fdea .C ();X :=_aaecb .Matrix [0]*_ce .Pow (_dcgdf ,_aaecb .Gamma [0])+_aaecb .Matrix [3]*_ce .Pow (_adeb ,_aaecb .Gamma [1])+_aaecb .Matrix [6]*_ce .Pow (_abacg ,_aaecb .Gamma [2]);
Y :=_aaecb .Matrix [1]*_ce .Pow (_dcgdf ,_aaecb .Gamma [0])+_aaecb .Matrix [4]*_ce .Pow (_adeb ,_aaecb .Gamma [1])+_aaecb .Matrix [7]*_ce .Pow (_abacg ,_aaecb .Gamma [2]);Z :=_aaecb .Matrix [2]*_ce .Pow (_dcgdf ,_aaecb .Gamma [0])+_aaecb .Matrix [5]*_ce .Pow (_adeb ,_aaecb .Gamma [1])+_aaecb .Matrix [8]*_ce .Pow (_abacg ,_aaecb .Gamma [2]);
_aadb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_aaab :=-0.969256*X +1.875992*Y +0.041556*Z ;_bcbg :=0.055648*X +-0.204043*Y +1.057311*Z ;_aadb =_ce .Min (_ce .Max (_aadb ,0),1.0);_aaab =_ce .Min (_ce .Max (_aaab ,0),1.0);_bcbg =_ce .Min (_ce .Max (_bcbg ,0),1.0);
return NewPdfColorDeviceRGB (_aadb ,_aaab ,_bcbg ),nil ;};

// SetAction sets the PDF action for the annotation link.
func (_ecbe *PdfAnnotationLink )SetAction (action *PdfAction ){_ecbe ._afgc =action ;if action ==nil {_ecbe .A =nil ;};};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_dddf *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dddf .AlternateSpace ==nil {return nil ,_ff .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _dddf .AlternateSpace .ColorToRGB (color );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_eebb *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_daa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cade ,_fgcf :=_daa .GetNumbersAsFloat (objects );
if _fgcf !=nil {return nil ,_fgcf ;};return _eebb .ColorFromFloats (_cade );};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_ecfdd *Image )GetSamples ()[]uint32 {_facdb :=_gf .ResampleBytes (_ecfdd .Data ,int (_ecfdd .BitsPerComponent ));if _ecfdd .BitsPerComponent < 8{_facdb =_ecfdd .samplesTrimPadding (_facdb );};_baggg :=int (_ecfdd .Width )*int (_ecfdd .Height )*_ecfdd .ColorComponents ;
if len (_facdb )< _baggg {_ae .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_facdb ),_baggg );
return _facdb ;}else if len (_facdb )> _baggg {_ae .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_facdb ),_baggg );
_facdb =_facdb [:_baggg ];};return _facdb ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _d .Time )(PdfDate ,error ){_bcgef :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_ccdfc ,_ :=_af .ParseInt (_bcgef [1:3],10,32);_ffccd ,_ :=_af .ParseInt (_bcgef [4:6],10,32);return PdfDate {_agdgd :int64 (timeObj .Year ()),_gdeeb :int64 (timeObj .Month ()),_ebdeb :int64 (timeObj .Day ()),_bcgga :int64 (timeObj .Hour ()),_ffab :int64 (timeObj .Minute ()),_dfad :int64 (timeObj .Second ()),_cdacd :_bcgef [0],_ecbeb :_ccdfc ,_ggbbf :_ffccd },nil ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_efgba *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_daa .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aaege ,_cgeg :=_daa .GetNumbersAsFloat (objects );
if _cgeg !=nil {return nil ,_cgeg ;};return _efgba .ColorFromFloats (_aaege );};func _fdbg (_fdbe *_daa .PdfObjectDictionary ){_efdff ,_gcgdf :=_daa .GetArray (_fdbe .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_aacab ,_fgag :=_daa .GetIntVal (_fdbe .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));
_fadb ,_ffac :=_daa .GetIntVal (_fdbe .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _gcgdf &&_fgag &&_ffac {_eabag :=_efdff .Len ();if _eabag !=_fadb -_aacab +1{_ae .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_eabag ,_fadb );
_befge :=_daa .PdfObjectInteger (_aacab +_eabag -1);_fdbe .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_befge );};};};func (_gbgg *DSS )addOCSPs (_gggfd [][]byte )([]*_daa .PdfObjectStream ,error ){return _gbgg .add (&_gbgg .OCSPs ,_gbgg ._dafdb ,_gggfd );
};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_aa .PSProgram ;_eeeea *_aa .PSExecutor ;_gcefg []byte ;_ddbf *_daa .PdfObjectStream ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _daa .PdfObject ;H _daa .PdfObject ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_eabde interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_fgagg *PdfPageResourcesColorspaces )Set (key _daa .PdfObjectName ,val PdfColorspace ){if _ ,_ccge :=_fgagg .Colorspaces [string (key )];!_ccge {_fgagg .Names =append (_fgagg .Names ,string (key ));};_fgagg .Colorspaces [string (key )]=val ;};

// ToPdfObject implements interface PdfModel.
func (_dbfg *PdfAnnotationUnderline )ToPdfObject ()_daa .PdfObject {_dbfg .PdfAnnotation .ToPdfObject ();_affa :=_dbfg ._gbf ;_cge :=_affa .PdfObject .(*_daa .PdfObjectDictionary );_dbfg .PdfAnnotationMarkup .appendToPdfDictionary (_cge );_cge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_cge .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dbfg .QuadPoints );return _affa ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_daa .PdfObject ,error );};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _daa .PdfObject ;Mac _daa .PdfObject ;Unix _daa .PdfObject ;NewWindow _daa .PdfObject ;};func (_cddcf *PdfWriter )setDocInfo (_ddgbb _daa .PdfObject ){if _cddcf .hasObject (_cddcf ._badb ){delete (_cddcf ._egfgg ,_cddcf ._badb );
delete (_cddcf ._dbgf ,_cddcf ._badb );for _fceba ,_abfaa :=range _cddcf ._aaaae {if _abfaa ==_cddcf ._badb {copy (_cddcf ._aaaae [_fceba :],_cddcf ._aaaae [_fceba +1:]);_cddcf ._aaaae [len (_cddcf ._aaaae )-1]=nil ;_cddcf ._aaaae =_cddcf ._aaaae [:len (_cddcf ._aaaae )-1];
break ;};};};_babaa :=_daa .PdfIndirectObject {};_babaa .PdfObject =_ddgbb ;_cddcf ._badb =&_babaa ;_cddcf .addObject (&_babaa );};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_cdga *PdfPageResources )GetContainingPdfObject ()_daa .PdfObject {return _cdga ._faeeg };func (_dgeb *PdfReader )loadAnnotations (_acfge _daa .PdfObject )([]*PdfAnnotation ,error ){_afgg ,_fabdf :=_daa .GetArray (_acfge );if !_fabdf {return nil ,_c .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _fbdgg []*PdfAnnotation ;for _ ,_cbcee :=range _afgg .Elements (){_cbcee =_daa .ResolveReference (_cbcee );if _ ,_bcaf :=_cbcee .(*_daa .PdfObjectNull );_bcaf {continue ;};_gccaa ,_fedcc :=_cbcee .(*_daa .PdfObjectDictionary );_ddacg ,_dage :=_cbcee .(*_daa .PdfIndirectObject );
if _fedcc {_ddacg =&_daa .PdfIndirectObject {};_ddacg .PdfObject =_gccaa ;}else {if !_dage {return nil ,_c .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_cebde ,_dacaa :=_dgeb .newPdfAnnotationFromIndirectObject (_ddacg );if _dacaa !=nil {return nil ,_dacaa ;};switch _bgce :=_cebde .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_dffe :=range _dgeb .AcroForm .AllFields (){if _dffe ._caaee ==_bgce .Parent {_bgce ._gad =_dffe ;
break ;};};};if _cebde !=nil {_fbdgg =append (_fbdgg ,_cebde );};};return _fbdgg ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_daaca *PdfShadingPatternType2 )ToPdfObject ()_daa .PdfObject {_daaca .PdfPattern .ToPdfObject ();_gedcg :=_daaca .getDict ();if _daaca .Shading !=nil {_gedcg .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_daaca .Shading .ToPdfObject ());};if _daaca .Matrix !=nil {_gedcg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_daaca .Matrix );
};if _daaca .ExtGState !=nil {_gedcg .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_daaca .ExtGState );};return _daaca ._degd ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_eaef *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// ToPdfObject implements interface PdfModel.
func (_dadde *PdfTransformParamsDocMDP )ToPdfObject ()_daa .PdfObject {_dgfae :=_daa .MakeDict ();_dgfae .SetIfNotNil ("\u0054\u0079\u0070\u0065",_dadde .Type );_dgfae .SetIfNotNil ("\u0056",_dadde .V );_dgfae .SetIfNotNil ("\u0050",_dadde .P );return _dgfae ;
};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _daa .PdfObject ;};func _gfccb (_cdecf *_daa .PdfObjectDictionary ,_gdgb *fontCommon ,_cddb _df .TextEncoder )(*pdfFontSimple ,error ){_cggbd :=_bbfegb (_gdgb );_cggbd ._acefe =_cddb ;if _cddb ==nil {_egbf :=_cdecf .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _egbf ==nil {_egbf =_daa .MakeInteger (0);};_cggbd .FirstChar =_egbf ;_edgbf ,_ebdbda :=_daa .GetIntVal (_egbf );if !_ebdbda {_ae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_egbf );
return nil ,_daa .ErrTypeError ;};_addbg :=_df .CharCode (_edgbf );_egbf =_cdecf .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _egbf ==nil {_egbf =_daa .MakeInteger (255);};_cggbd .LastChar =_egbf ;_edgbf ,_ebdbda =_daa .GetIntVal (_egbf );
if !_ebdbda {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_egbf );return nil ,_daa .ErrTypeError ;
};_fadgea :=_df .CharCode (_edgbf );_cggbd ._aaef =make (map[_df .CharCode ]float64 );_egbf =_cdecf .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _egbf !=nil {_cggbd .Widths =_egbf ;_gbfeb ,_cdeac :=_daa .GetArray (_egbf );if !_cdeac {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_egbf );
return nil ,_daa .ErrTypeError ;};_gcdc ,_agfgf :=_gbfeb .ToFloat64Array ();if _agfgf !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_agfgf ;};if len (_gcdc )!=int (_fadgea -_addbg +1){_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_fadgea -_addbg +1,len (_gcdc ));
return nil ,_daa .ErrRangeError ;};for _bffd ,_gfde :=range _gcdc {_cggbd ._aaef [_addbg +_df .CharCode (_bffd )]=_gfde ;};};};_cggbd .Encoding =_daa .TraceToDirectObject (_cdecf .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _cggbd ,nil ;
};func _dcffa ()string {_gdggd .Lock ();defer _gdggd .Unlock ();return _fbebea };

// GetPage returns the PdfPage model for the specified page number.
func (_geff *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _geff ._adgcg .GetCrypter ()!=nil &&!_geff ._adgcg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_geff ._eefcbf )< pageNumber {return nil ,_ff .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_dgbg :=pageNumber -1;if _dgbg < 0{return nil ,_c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_cdbcgf :=_geff .PageList [_dgbg ];
return _cdbcgf ,nil ;};func _bcgb (_dgbb *XObjectForm )(*PdfRectangle ,error ){if _fdgfa ,_agcb :=_dgbb .BBox .(*_daa .PdfObjectArray );_agcb {_bbfee ,_bgcd :=NewPdfRectangle (*_fdgfa );if _bgcd !=nil {return nil ,_bgcd ;};if _gbbg ,_dccbd :=_dgbb .Matrix .(*_daa .PdfObjectArray );
_dccbd {_bgaa ,_bbbgf :=_gbbg .ToFloat64Array ();if _bbbgf !=nil {return nil ,_bbbgf ;};_ggddc :=_bg .IdentityMatrix ();if len (_bgaa )==6{_ggddc =_bg .NewMatrix (_bgaa [0],_bgaa [1],_bgaa [2],_bgaa [3],_bgaa [4],_bgaa [5]);};_bbfee .Transform (_ggddc );
return _bbfee ,nil ;};};return nil ,_ff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_cebcc *_daa .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_daa .PdfObjectName ;Filter *_daa .PdfObjectName ;SubFilter *_daa .PdfObjectName ;Contents *_daa .PdfObjectString ;Cert _daa .PdfObject ;ByteRange *_daa .PdfObjectArray ;Reference *_daa .PdfObjectArray ;Changes *_daa .PdfObjectArray ;Name *_daa .PdfObjectString ;
M *_daa .PdfObjectString ;Location *_daa .PdfObjectString ;Reason *_daa .PdfObjectString ;ContactInfo *_daa .PdfObjectString ;R *_daa .PdfObjectInteger ;V *_daa .PdfObjectInteger ;PropBuild *_daa .PdfObjectDictionary ;PropAuthTime *_daa .PdfObjectInteger ;
PropAuthType *_daa .PdfObjectName ;};

// ReplacePage replaces the original page to a new page.
func (_cac *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_eecc :=pageNum -1;for _daaef :=range _cac ._ffda {if _daaef ==_eecc {_cda :=page .Duplicate ();_cfeg (_cda );_cac ._ffda [_daaef ]=_cda ;};};};

// GetContainingPdfObject implements interface PdfModel.
func (_bceec *PdfSignatureReference )GetContainingPdfObject ()_daa .PdfObject {return _bceec ._bbegb };

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _daa .PdfObject )(*PdfOutputIntent ,error ){_gadea :=&PdfOutputIntent {};if _gfbc :=_gadea .ParsePdfObject (object );_gfbc !=nil {return nil ,_gfbc ;};return _gadea ,nil ;};func (_ccf *PdfReader )newPdfActionSetOCGStateFromDict (_abgb *_daa .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_abgb .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_abgb .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_efadg *PdfPattern )SetContext (ctx PdfModel ){_efadg ._bcdee =ctx };func (_gfca *PdfReader )newPdfAnnotationPolygonFromDict (_aga *_daa .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_adb :=PdfAnnotationPolygon {};_eabg ,_eafb :=_gfca .newPdfAnnotationMarkupFromDict (_aga );
if _eafb !=nil {return nil ,_eafb ;};_adb .PdfAnnotationMarkup =_eabg ;_adb .Vertices =_aga .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_adb .LE =_aga .Get ("\u004c\u0045");_adb .BS =_aga .Get ("\u0042\u0053");_adb .IC =_aga .Get ("\u0049\u0043");
_adb .BE =_aga .Get ("\u0042\u0045");_adb .IT =_aga .Get ("\u0049\u0054");_adb .Measure =_aga .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_adb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gae *PdfActionTrans )ToPdfObject ()_daa .PdfObject {_gae .PdfAction .ToPdfObject ();_abg :=_gae ._ad ;_dfd :=_abg .PdfObject .(*_daa .PdfObjectDictionary );_dfd .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeTrans )));_dfd .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_gae .Trans );
return _abg ;};func _dbbag (_ggcba *_daa .PdfObjectDictionary ,_edeaa *fontCommon )(*pdfFontType3 ,error ){_cffbf :=_cdaf (_edeaa );_cdebe :=_ggcba .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _cdebe ==nil {_cdebe =_daa .MakeInteger (0);};_cffbf .FirstChar =_cdebe ;
_ffag ,_bgefg :=_daa .GetIntVal (_cdebe );if !_bgefg {_ae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cdebe );
return nil ,_daa .ErrTypeError ;};_gfgb :=_df .CharCode (_ffag );_cdebe =_ggcba .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _cdebe ==nil {_cdebe =_daa .MakeInteger (255);};_cffbf .LastChar =_cdebe ;_ffag ,_bgefg =_daa .GetIntVal (_cdebe );
if !_bgefg {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_cdebe );return nil ,_daa .ErrTypeError ;
};_dcafg :=_df .CharCode (_ffag );_cdebe =_ggcba .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _cdebe !=nil {_cffbf .Resources =_cdebe ;};_cdebe =_ggcba .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _cdebe ==nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_cdebe );
return nil ,_daa .ErrNotSupported ;};_cffbf .CharProcs =_cdebe ;_cdebe =_ggcba .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _cdebe ==nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_cdebe );
return nil ,_daa .ErrNotSupported ;};_cffbf .FontMatrix =_cdebe ;_cffbf ._cbbg =make (map[_df .CharCode ]float64 );_cdebe =_ggcba .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _cdebe !=nil {_cffbf .Widths =_cdebe ;_fbefb ,_bcdd :=_daa .GetArray (_cdebe );
if !_bcdd {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_cdebe );return nil ,_daa .ErrTypeError ;
};_adce ,_fadf :=_fbefb .ToFloat64Array ();if _fadf !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_fadf ;};if len (_adce )!=int (_dcafg -_gfgb +1){_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_dcafg -_gfgb +1,len (_adce ));
return nil ,_daa .ErrRangeError ;};_gcebe ,_bcdd :=_daa .GetArray (_cffbf .FontMatrix );if !_bcdd {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_gcebe );
return nil ,_fadf ;};_cdaeb ,_fadf :=_gcebe .ToFloat64Array ();if _fadf !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_fadf ;};_efcaa :=_bg .NewMatrix (_cdaeb [0],_cdaeb [1],_cdaeb [2],_cdaeb [3],_cdaeb [4],_cdaeb [5]);for _bbccf ,_gbgbe :=range _adce {_bfce ,_ :=_efcaa .Transform (_gbgbe ,_gbgbe );_cffbf ._cbbg [_gfgb +_df .CharCode (_bbccf )]=_bfce ;};};
_cffbf .Encoding =_daa .TraceToDirectObject (_ggcba .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));_bdcab :=_ggcba .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _bdcab !=nil {_cffbf ._fbeba =_daa .TraceToDirectObject (_bdcab );_affc ,_gdcac :=_gcda (_cffbf ._fbeba ,&_cffbf .fontCommon );
if _gdcac !=nil {return nil ,_gdcac ;};_cffbf ._efedc =_affc ;};if _afaga :=_cffbf ._efedc ;_afaga !=nil {_cffbf ._bcgac =_df .NewCMapEncoder ("",nil ,_afaga );}else {_cffbf ._bcgac =_df .NewPdfDocEncoder ();};return _cffbf ,nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_agdgd int64 ;_gdeeb int64 ;_ebdeb int64 ;_bcgga int64 ;_ffab int64 ;_dfad int64 ;_cdacd byte ;_ecbeb int64 ;_ggbbf int64 ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_agagg *PdfPageResources )SetXObjectFormByName (keyName _daa .PdfObjectName ,xform *XObjectForm )error {_bgbdg :=xform .ToPdfObject ().(*_daa .PdfObjectStream );_fggd :=_agagg .SetXObjectByName (keyName ,_bgbdg );return _fggd ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_agecd *_daa .PdfIndirectObject ;};

// WriteToFile writes the output PDF to file.
func (_dbbaa *PdfWriter )WriteToFile (outputFilePath string )error {_aacfd ,_acacc :=_dga .Create (outputFilePath );if _acacc !=nil {return _acacc ;};defer _aacfd .Close ();return _dbbaa .Write (_aacfd );};

// AddWatermarkImage adds a watermark to the page.
func (_facaa *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_cefff ,_ddfeg :=_facaa .GetMediaBox ();if _ddfeg !=nil {return _ddfeg ;};_effc :=_cefff .Urx -_cefff .Llx ;_dcea :=_cefff .Ury -_cefff .Lly ;_babde :=float64 (*ximg .Width );
_bgdab :=(_effc -_babde )/2;if opt .FitToWidth {_babde =_effc ;_bgdab =0;};_agdcf :=_dcea ;_gcff :=float64 (0);if opt .PreserveAspectRatio {_agdcf =_babde *float64 (*ximg .Height )/float64 (*ximg .Width );_gcff =(_dcea -_agdcf )/2;};if _facaa .Resources ==nil {_facaa .Resources =NewPdfPageResources ();
};_dffb :=0;_afcec :=_daa .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_dffb ));for _facaa .Resources .HasXObjectByName (_afcec ){_dffb ++;_afcec =_daa .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_dffb ));};_ddfeg =_facaa .AddImageResource (_afcec ,ximg );
if _ddfeg !=nil {return _ddfeg ;};_dffb =0;_dgefa :=_daa .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_dffb ));for _facaa .HasExtGState (_dgefa ){_dffb ++;_dgefa =_daa .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_dffb ));};_fagad :=_daa .MakeDict ();
_fagad .Set ("\u0042\u004d",_daa .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_fagad .Set ("\u0043\u0041",_daa .MakeFloat (opt .Alpha ));_fagad .Set ("\u0063\u0061",_daa .MakeFloat (opt .Alpha ));_ddfeg =_facaa .AddExtGState (_dgefa ,_fagad );if _ddfeg !=nil {return _ddfeg ;
};_dadba :=_c .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_dgefa ,_babde ,_agdcf ,_bgdab ,_gcff ,_afcec );
_facaa .AddContentStreamByString (_dadba );return nil ;};func (_dbefb *PdfWriter )writeDocumentVersion (){if _dbefb ._ffde {_dbefb .writeString ("\u000a");}else {_dbefb .writeString (_c .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_dbefb ._abfcb .Major ,_dbefb ._abfcb .Minor ));
_dbefb .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};var (CourierName =_ec .CourierName ;CourierBoldName =_ec .CourierBoldName ;CourierObliqueName =_ec .CourierObliqueName ;CourierBoldObliqueName =_ec .CourierBoldObliqueName ;HelveticaName =_ec .HelveticaName ;
HelveticaBoldName =_ec .HelveticaBoldName ;HelveticaObliqueName =_ec .HelveticaObliqueName ;HelveticaBoldObliqueName =_ec .HelveticaBoldObliqueName ;SymbolName =_ec .SymbolName ;ZapfDingbatsName =_ec .ZapfDingbatsName ;TimesRomanName =_ec .TimesRomanName ;
TimesBoldName =_ec .TimesBoldName ;TimesItalicName =_ec .TimesItalicName ;TimesBoldItalicName =_ec .TimesBoldItalicName ;);

// HasExtGState checks whether a font is defined by the specified keyName.
func (_bcbdc *PdfPageResources )HasExtGState (keyName _daa .PdfObjectName )bool {_ ,_gcebb :=_bcbdc .GetFontByName (keyName );return _gcebb ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_fgbe :=&PdfColorspaceCalRGB {};_fgbe .BlackPoint =[]float64 {0.0,0.0,0.0};_fgbe .Gamma =[]float64 {1.0,1.0,1.0};_fgbe .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _fgbe ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_affd *PdfColorspaceLab )GetNumComponents ()int {return 3};

// ToPdfObject converts the font to a PDF representation.
func (_fdddc *pdfFontType0 )ToPdfObject ()_daa .PdfObject {if _fdddc ._dbffb ==nil {_fdddc ._dbffb =&_daa .PdfIndirectObject {};};_dfee :=_fdddc .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_fdddc ._dbffb .PdfObject =_dfee ;if _fdddc .Encoding !=nil {_dfee .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fdddc .Encoding );
}else if _fdddc ._dfgee !=nil {_dfee .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fdddc ._dfgee .ToPdfObject ());};if _fdddc .DescendantFont !=nil {_dfee .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_daa .MakeArray (_fdddc .DescendantFont .ToPdfObject ()));
};return _fdddc ._dbffb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bbbgd *PdfShading )ToPdfObject ()_daa .PdfObject {_agegd :=_bbbgd ._facgg ;_fabbb ,_ebgcb :=_bbbgd .getShadingDict ();if _ebgcb !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bbbgd .ShadingType !=nil {_fabbb .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_bbbgd .ShadingType );};if _bbbgd .ColorSpace !=nil {_fabbb .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bbbgd .ColorSpace .ToPdfObject ());
};if _bbbgd .Background !=nil {_fabbb .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_bbbgd .Background );};if _bbbgd .BBox !=nil {_fabbb .Set ("\u0042\u0042\u006f\u0078",_bbbgd .BBox .ToPdfObject ());};if _bbbgd .AntiAlias !=nil {_fabbb .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_bbbgd .AntiAlias );
};return _agegd ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_cecd *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_afgfc ,_cecc :=color .(*PdfColorCalGray );if !_cecc {_ae .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_afgfc .Val ();X :=_cecd .WhitePoint [0]*_ce .Pow (ANorm ,_cecd .Gamma );Y :=_cecd .WhitePoint [1]*_ce .Pow (ANorm ,_cecd .Gamma );
Z :=_cecd .WhitePoint [2]*_ce .Pow (ANorm ,_cecd .Gamma );_ddfb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_adca :=-0.969256*X +1.875992*Y +0.041556*Z ;_fegae :=0.055648*X +-0.204043*Y +1.057311*Z ;_ddfb =_ce .Min (_ce .Max (_ddfb ,0),1.0);_adca =_ce .Min (_ce .Max (_adca ,0),1.0);
_fegae =_ce .Min (_ce .Max (_fegae ,0),1.0);return NewPdfColorDeviceRGB (_ddfb ,_adca ,_fegae ),nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_edfb *PdfColorspaceICCBased )ToPdfObject ()_daa .PdfObject {_dbac :=&_daa .PdfObjectArray {};_dbac .Append (_daa .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _dcefe *_daa .PdfObjectStream ;if _edfb ._ecbf !=nil {_dcefe =_edfb ._ecbf ;
}else {_dcefe =&_daa .PdfObjectStream {};};_cfea :=_daa .MakeDict ();_cfea .Set ("\u004e",_daa .MakeInteger (int64 (_edfb .N )));if _edfb .Alternate !=nil {_cfea .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_edfb .Alternate .ToPdfObject ());};if _edfb .Metadata !=nil {_cfea .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_edfb .Metadata );
};if _edfb .Range !=nil {var _gdag []_daa .PdfObject ;for _ ,_ggda :=range _edfb .Range {_gdag =append (_gdag ,_daa .MakeFloat (_ggda ));};_cfea .Set ("\u0052\u0061\u006eg\u0065",_daa .MakeArray (_gdag ...));};_cfea .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_daa .MakeInteger (int64 (len (_edfb .Data ))));
_dcefe .Stream =_edfb .Data ;_dcefe .PdfObjectDictionary =_cfea ;_dbac .Append (_dcefe );if _edfb ._ggaf !=nil {_edfb ._ggaf .PdfObject =_dbac ;return _edfb ._ggaf ;};return _dbac ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _daa .StreamEncoder ;Intent _daa .PdfObject ;ImageMask _daa .PdfObject ;Mask _daa .PdfObject ;Matte _daa .PdfObject ;Decode _daa .PdfObject ;Interpolate _daa .PdfObject ;
Alternatives _daa .PdfObject ;SMask _daa .PdfObject ;SMaskInData _daa .PdfObject ;Name _daa .PdfObject ;StructParent _daa .PdfObject ;ID _daa .PdfObject ;OPI _daa .PdfObject ;Metadata _daa .PdfObject ;OC _daa .PdfObject ;Stream []byte ;_deefd *_daa .PdfObjectStream ;
};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_eabeg *PdfFont )ToPdfObject ()_daa .PdfObject {if _eabeg ._gbbee ==nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _daa .MakeNull ();
};return _eabeg ._gbbee .ToPdfObject ();};func (_afbec fontCommon )fontFlags ()int {if _afbec ._eccc ==nil {return 0;};return _afbec ._eccc ._edff ;};func (_cgfad *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _cgfad ._eccc };func _deec (_bebeb *_daa .PdfObjectDictionary )(*PdfShadingType1 ,error ){_efegf :=PdfShadingType1 {};
if _dgacf :=_bebeb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_dgacf !=nil {_dgacf =_daa .TraceToDirectObject (_dgacf );_ccad ,_ecfaf :=_dgacf .(*_daa .PdfObjectArray );if !_ecfaf {_ae .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dgacf );
return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_efegf .Domain =_ccad ;};if _daccb :=_bebeb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_daccb !=nil {_daccb =_daa .TraceToDirectObject (_daccb );
_efaed ,_fbdfc :=_daccb .(*_daa .PdfObjectArray );if !_fbdfc {_ae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_daccb );return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_efegf .Matrix =_efaed ;};_decbf :=_bebeb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _decbf ==nil {_ae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_efegf .Function =[]PdfFunction {};if _agaga ,_aaffa :=_decbf .(*_daa .PdfObjectArray );_aaffa {for _ ,_gadac :=range _agaga .Elements (){_gfbfb ,_eefaa :=_bcec (_gadac );if _eefaa !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eefaa );
return nil ,_eefaa ;};_efegf .Function =append (_efegf .Function ,_gfbfb );};}else {_eeegd ,_cdcbc :=_bcec (_decbf );if _cdcbc !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cdcbc );
return nil ,_cdcbc ;};_efegf .Function =append (_efegf .Function ,_eeegd );};return &_efegf ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ececf *PdfShadingType3 )ToPdfObject ()_daa .PdfObject {_ececf .PdfShading .ToPdfObject ();_fcbc ,_dcbad :=_ececf .getShadingDict ();if _dcbad !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ececf .Coords !=nil {_fcbc .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_ececf .Coords );};if _ececf .Domain !=nil {_fcbc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ececf .Domain );};if _ececf .Function !=nil {if len (_ececf .Function )==1{_fcbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ececf .Function [0].ToPdfObject ());
}else {_fbgcb :=_daa .MakeArray ();for _ ,_cbeef :=range _ececf .Function {_fbgcb .Append (_cbeef .ToPdfObject ());};_fcbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fbgcb );};};if _ececf .Extend !=nil {_fcbc .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_ececf .Extend );
};return _ececf ._facgg ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_bfcd *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_fbcfd *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _fbcfd .baseFields ()._eccc !=nil {return _fbcfd .baseFields ()._eccc ;};if _fcfef :=_fbcfd ._gbbee .getFontDescriptor ();_fcfef !=nil {return _fcfef ;};_ae .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_fbcfd );
return nil ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_gecda *PdfPageResources )HasFontByName (keyName _daa .PdfObjectName )bool {_ ,_bbffg :=_gecda .GetFontByName (keyName );return _bbffg ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ddfa *PdfShadingType2 )ToPdfObject ()_daa .PdfObject {_ddfa .PdfShading .ToPdfObject ();_aeaba ,_gdaaf :=_ddfa .getShadingDict ();if _gdaaf !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _aeaba ==nil {_ae .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _ddfa .Coords !=nil {_aeaba .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_ddfa .Coords );
};if _ddfa .Domain !=nil {_aeaba .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ddfa .Domain );};if _ddfa .Function !=nil {if len (_ddfa .Function )==1{_aeaba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddfa .Function [0].ToPdfObject ());}else {_gcaed :=_daa .MakeArray ();
for _ ,_ffafd :=range _ddfa .Function {_gcaed .Append (_ffafd .ToPdfObject ());};_aeaba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcaed );};};if _ddfa .Extend !=nil {_aeaba .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_ddfa .Extend );};
return _ddfa ._facgg ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_gdggd .Lock ();defer _gdggd .Unlock ();_gccab =keywords };

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _daa .PdfObject ;Name _daa .PdfObject ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_efgf *PdfInfo )GetCustomInfo (name string )*_daa .PdfObjectString {var _dggg *_daa .PdfObjectString ;if _efgf ._agbg ==nil {return _dggg ;};if _eebbg ,_ced :=_efgf ._agbg .Get (*_daa .MakeName (name )).(*_daa .PdfObjectString );_ced {_dggg =_eebbg ;
};return _dggg ;};func (_eeegfe *PdfReader )traverseObjectData (_baceae _daa .PdfObject )error {return _daa .ResolveReferencesDeep (_baceae ,_eeegfe ._gcefb );};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_afaec PdfModel ;_caaee *_daa .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_daa .PdfObjectName ;T *_daa .PdfObjectString ;TU *_daa .PdfObjectString ;TM *_daa .PdfObjectString ;Ff *_daa .PdfObjectInteger ;
V _daa .PdfObject ;DV _daa .PdfObject ;AA _daa .PdfObject ;VariableText *VariableText ;};func _bace (_bgfa *_daa .PdfObjectDictionary )(*PdfFieldButton ,error ){_cgbc :=&PdfFieldButton {};_cgbc .PdfField =NewPdfField ();_cgbc .PdfField .SetContext (_cgbc );
_cgbc .Opt ,_ =_daa .GetArray (_bgfa .Get ("\u004f\u0070\u0074"));_eacd :=NewPdfAnnotationWidget ();_eacd .A ,_ =_daa .GetDict (_bgfa .Get ("\u0041"));_eacd .AP ,_ =_daa .GetDict (_bgfa .Get ("\u0041\u0050"));_eacd .SetContext (_cgbc );_cgbc .PdfField .Annotations =append (_cgbc .PdfField .Annotations ,_eacd );
return _cgbc ,nil ;};func _gcda (_fbce _daa .PdfObject ,_ccefa *fontCommon )(*_cbg .CMap ,error ){_gagbb ,_cbfc :=_daa .GetStream (_fbce );if !_cbfc {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_fbce );
return nil ,_daa .ErrTypeError ;};_fdca ,_dead :=_daa .DecodeStream (_gagbb );if _dead !=nil {return nil ,_dead ;};_edee ,_dead :=_cbg .LoadCmapFromData (_fdca ,!_ccefa .isCIDFont ());if _dead !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_gagbb .ObjectNumber ,_dead );
};return _edee ,_dead ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_eafg *PdfFieldButton )IsCheckbox ()bool {return _eafg .GetType ()==ButtonTypeCheckbox };

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_dea :=NewPdfAction ();_dgf :=&PdfActionLaunch {};_dgf .PdfAction =_dea ;_dea .SetContext (_dgf );return _dgf ;};func _dcbb (_cbbb _daa .PdfObject )(*PdfColorspaceCalRGB ,error ){_edcg :=NewPdfColorspaceCalRGB ();
if _cbafa ,_dcce :=_cbbb .(*_daa .PdfIndirectObject );_dcce {_edcg ._ddbec =_cbafa ;};_cbbb =_daa .TraceToDirectObject (_cbbb );_abcc ,_gbg :=_cbbb .(*_daa .PdfObjectArray );if !_gbg {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _abcc .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_cbbb =_daa .TraceToDirectObject (_abcc .Get (0));_eada ,_gbg :=_cbbb .(*_daa .PdfObjectName );
if !_gbg {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_eada !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_c .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_cbbb =_daa .TraceToDirectObject (_abcc .Get (1));_efdbf ,_gbg :=_cbbb .(*_daa .PdfObjectDictionary );if !_gbg {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_cbbb =_efdbf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cbbb =_daa .TraceToDirectObject (_cbbb );_dfge ,_gbg :=_cbbb .(*_daa .PdfObjectArray );if !_gbg {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _dfge .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_cggff ,_aedb :=_dfge .GetAsFloat64Slice ();
if _aedb !=nil {return nil ,_aedb ;};_edcg .WhitePoint =_cggff ;_cbbb =_efdbf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cbbb !=nil {_cbbb =_daa .TraceToDirectObject (_cbbb );_bcfe ,_ffea :=_cbbb .(*_daa .PdfObjectArray );
if !_ffea {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _bcfe .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_gdbfe ,_facc :=_bcfe .GetAsFloat64Slice ();if _facc !=nil {return nil ,_facc ;};_edcg .BlackPoint =_gdbfe ;};_cbbb =_efdbf .Get ("\u0047\u0061\u006dm\u0061");if _cbbb !=nil {_cbbb =_daa .TraceToDirectObject (_cbbb );_bfb ,_daaf :=_cbbb .(*_daa .PdfObjectArray );
if !_daaf {return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _bfb .Len ()!=3{return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_fdbd ,_dccf :=_bfb .GetAsFloat64Slice ();if _dccf !=nil {return nil ,_dccf ;};_edcg .Gamma =_fdbd ;};_cbbb =_efdbf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _cbbb !=nil {_cbbb =_daa .TraceToDirectObject (_cbbb );_caaf ,_acef :=_cbbb .(*_daa .PdfObjectArray );
if !_acef {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _caaf .Len ()!=9{_ae .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_caaf .String ());
return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_efec ,_bfad :=_caaf .GetAsFloat64Slice ();if _bfad !=nil {return nil ,_bfad ;
};_edcg .Matrix =_efec ;};return _edcg ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_eefefg *PdfFunctionType4 )ToPdfObject ()_daa .PdfObject {_bgeb :=_eefefg ._ddbf ;if _bgeb ==nil {_eefefg ._ddbf =&_daa .PdfObjectStream {};_bgeb =_eefefg ._ddbf ;};_ebga :=_daa .MakeDict ();_ebga .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_daa .MakeInteger (4));
_cbde :=&_daa .PdfObjectArray {};for _ ,_cbadd :=range _eefefg .Domain {_cbde .Append (_daa .MakeFloat (_cbadd ));};_ebga .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cbde );_ggca :=&_daa .PdfObjectArray {};for _ ,_dbfgg :=range _eefefg .Range {_ggca .Append (_daa .MakeFloat (_dbfgg ));
};_ebga .Set ("\u0052\u0061\u006eg\u0065",_ggca );if _eefefg ._gcefg ==nil &&_eefefg .Program !=nil {_eefefg ._gcefg =[]byte (_eefefg .Program .String ());};_ebga .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_daa .MakeInteger (int64 (len (_eefefg ._gcefg ))));
_bgeb .Stream =_eefefg ._gcefg ;_bgeb .PdfObjectDictionary =_ebga ;return _bgeb ;};var _ggced =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// SetImage updates XObject Image with new image data.
func (_fffeb *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_fffeb .Filter .UpdateParams (img .GetParamsDict ());_cgacf ,_bcdbe :=_fffeb .Filter .EncodeBytes (img .Data );if _bcdbe !=nil {return _bcdbe ;};_fffeb .Stream =_cgacf ;_eaceb :=img .Width ;
_fffeb .Width =&_eaceb ;_agdfd :=img .Height ;_fffeb .Height =&_agdfd ;_adaaae :=img .BitsPerComponent ;_fffeb .BitsPerComponent =&_adaaae ;if cs ==nil {if img .ColorComponents ==1{_fffeb .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_fffeb .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_fffeb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ff .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_fffeb .ColorSpace =cs ;};return nil ;
};

// L returns the value of the L component of the color.
func (_fedcf *PdfColorLab )L ()float64 {return _fedcf [0]};func (_adefg *Image )resampleLowBits (_bcddb []uint32 ){_gagd :=_ac .BytesPerLine (int (_adefg .Width ),int (_adefg .BitsPerComponent ),_adefg .ColorComponents );_egaac :=make ([]byte ,_adefg .ColorComponents *_gagd *int (_adefg .Height ));
_gabab :=int (_adefg .BitsPerComponent )*_adefg .ColorComponents *int (_adefg .Width );_cege :=uint8 (8);var (_fafbc ,_gfdgg int ;_fbag uint32 ;);for _cebgd :=0;_cebgd < int (_adefg .Height );_cebgd ++{_gfdgg =_cebgd *_gagd ;for _debd :=0;_debd < _gabab ;
_debd ++{_fbag =_bcddb [_fafbc ];_cege -=uint8 (_adefg .BitsPerComponent );_egaac [_gfdgg ]|=byte (_fbag )<<_cege ;if _cege ==0{_cege =8;_gfdgg ++;};_fafbc ++;};};_adefg .Data =_egaac ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_ffdgc *PdfFieldButton )SetType (btype ButtonType ){_dgdd :=uint32 (0);if _ffdgc .Ff !=nil {_dgdd =uint32 (*_ffdgc .Ff );};switch btype {case ButtonTypePush :_dgdd |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_dgdd |=FieldFlagRadio .Mask ();
};_ffdgc .Ff =_daa .MakeInteger (int64 (_dgdd ));};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_dbee :=&PdfColorspaceDeviceN {};return _dbee };

// Fill populates `form` with values provided by `provider`.
func (_ddbge *PdfAcroForm )Fill (provider FieldValueProvider )error {return _ddbge .fill (provider ,nil )};func (_aacad *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_daa .PdfObjectArray ;ExtGState _daa .PdfObject ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_ddac *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_fcf :=NewPdfAnnotation ();_gaag :=&PdfAnnotationStrikeOut {};_gaag .PdfAnnotation =_fcf ;_gaag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcf .SetContext (_gaag );return _gaag ;};func (_bageg *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _bageg ._eccc };


// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_ffeg *_daa .PdfObjectDictionary ;_ddbec *_daa .PdfIndirectObject ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_daa .PdfObject ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_aacbc :=Permissions {};_aacbc .DocMDP =docMdp ;_beadda :=_daa .MakeDict ();_beadda .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_aacbc ._fadgg =_beadda ;return &_aacbc ;};


// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_cfebc *PdfPage )GetRotate ()(int64 ,error ){if _cfebc .Rotate !=nil {return *_cfebc .Rotate ,nil ;};_cbac :=_cfebc .Parent ;for _cbac !=nil {_cdefe ,_bcbfb :=_daa .GetDict (_cbac );if !_bcbfb {return 0,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _ggbcg :=_cdefe .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_ggbcg !=nil {_ggbga ,_gafdf :=_daa .GetInt (_ggbcg );if !_gafdf {return 0,_ff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};
if _ggbga !=nil {return int64 (*_ggbga ),nil ;};return 0,_ff .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_cbac =_cdefe .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_ff .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_dedf *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _dedf .UnderlyingCS ==nil {return nil ,_ff .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _dedf .UnderlyingCS .ColorFromFloats (vals );};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_dggef *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _dggef ._bcdee .(*PdfShadingPattern );};

// Y returns the value of the yellow component of the color.
func (_ggdge *PdfColorDeviceCMYK )Y ()float64 {return _ggdge [2]};func (_ggef *PdfReader )newPdfAnnotationFromIndirectObject (_gcdg *_daa .PdfIndirectObject )(*PdfAnnotation ,error ){_bag ,_adga :=_gcdg .PdfObject .(*_daa .PdfObjectDictionary );if !_adga {return nil ,_c .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ggef ._beaec .GetModelFromPrimitive (_bag );model !=nil {_gcfe ,_bbd :=model .(*PdfAnnotation );if !_bbd {return nil ,_c .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _gcfe ,nil ;};_cgfa :=&PdfAnnotation {};_cgfa ._gbf =_gcdg ;_ggef ._beaec .Register (_bag ,_cgfa );if _eeee :=_bag .Get ("\u0054\u0079\u0070\u0065");_eeee !=nil {_bccb ,_bdbe :=_eeee .(*_daa .PdfObjectName );if !_bdbe {_ae .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_eeee );
}else {if *_bccb !="\u0041\u006e\u006eo\u0074"{_ae .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_bccb );};};};
if _gabd :=_bag .Get ("\u0052\u0065\u0063\u0074");_gabd !=nil {_cgfa .Rect =_gabd ;};if _gacb :=_bag .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_gacb !=nil {_cgfa .Contents =_gacb ;};if _fead :=_bag .Get ("\u0050");_fead !=nil {_cgfa .P =_fead ;
};if _agee :=_bag .Get ("\u004e\u004d");_agee !=nil {_cgfa .NM =_agee ;};if _eaeb :=_bag .Get ("\u004d");_eaeb !=nil {_cgfa .M =_eaeb ;};if _fecf :=_bag .Get ("\u0046");_fecf !=nil {_cgfa .F =_fecf ;};if _aed :=_bag .Get ("\u0041\u0050");_aed !=nil {_cgfa .AP =_aed ;
};if _eeg :=_bag .Get ("\u0041\u0053");_eeg !=nil {_cgfa .AS =_eeg ;};if _efb :=_bag .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_efb !=nil {_cgfa .Border =_efb ;};if _befg :=_bag .Get ("\u0043");_befg !=nil {_cgfa .C =_befg ;};if _gccc :=_bag .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_gccc !=nil {_cgfa .StructParent =_gccc ;};if _aedd :=_bag .Get ("\u004f\u0043");_aedd !=nil {_cgfa .OC =_aedd ;};_bae :=_bag .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _bae ==nil {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_cgfa ._bea =nil ;return _cgfa ,nil ;};_gca ,_gfee :=_bae .(*_daa .PdfObjectName );if !_gfee {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bae );
return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_bae );};switch *_gca {case "\u0054\u0065\u0078\u0074":_cgcc ,_cdba :=_ggef .newPdfAnnotationTextFromDict (_bag );
if _cdba !=nil {return nil ,_cdba ;};_cgcc .PdfAnnotation =_cgfa ;_cgfa ._bea =_cgcc ;return _cgfa ,nil ;case "\u004c\u0069\u006e\u006b":_eaaa ,_eege :=_ggef .newPdfAnnotationLinkFromDict (_bag );if _eege !=nil {return nil ,_eege ;};_eaaa .PdfAnnotation =_cgfa ;
_cgfa ._bea =_eaaa ;return _cgfa ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_cecg ,_dfbb :=_ggef .newPdfAnnotationFreeTextFromDict (_bag );if _dfbb !=nil {return nil ,_dfbb ;};_cecg .PdfAnnotation =_cgfa ;_cgfa ._bea =_cecg ;return _cgfa ,nil ;
case "\u004c\u0069\u006e\u0065":_aba ,_abgf :=_ggef .newPdfAnnotationLineFromDict (_bag );if _abgf !=nil {return nil ,_abgf ;};_aba .PdfAnnotation =_cgfa ;_cgfa ._bea =_aba ;_ae .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_cgfa ,_cgfa );
_ae .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_aba ,_aba );_ae .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_aba .PdfAnnotationMarkup ,_aba .PdfAnnotationMarkup );
return _cgfa ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_bagg ,_cfba :=_ggef .newPdfAnnotationSquareFromDict (_bag );if _cfba !=nil {return nil ,_cfba ;};_bagg .PdfAnnotation =_cgfa ;_cgfa ._bea =_bagg ;return _cgfa ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_aeda ,_bdee :=_ggef .newPdfAnnotationCircleFromDict (_bag );
if _bdee !=nil {return nil ,_bdee ;};_aeda .PdfAnnotation =_cgfa ;_cgfa ._bea =_aeda ;return _cgfa ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_efdf ,_daef :=_ggef .newPdfAnnotationPolygonFromDict (_bag );if _daef !=nil {return nil ,_daef ;};_efdf .PdfAnnotation =_cgfa ;
_cgfa ._bea =_efdf ;return _cgfa ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_eaga ,_bba :=_ggef .newPdfAnnotationPolyLineFromDict (_bag );if _bba !=nil {return nil ,_bba ;};_eaga .PdfAnnotation =_cgfa ;_cgfa ._bea =_eaga ;return _cgfa ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_gabc ,_gbfc :=_ggef .newPdfAnnotationHighlightFromDict (_bag );if _gbfc !=nil {return nil ,_gbfc ;};_gabc .PdfAnnotation =_cgfa ;_cgfa ._bea =_gabc ;return _cgfa ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_aacd ,_edfd :=_ggef .newPdfAnnotationUnderlineFromDict (_bag );
if _edfd !=nil {return nil ,_edfd ;};_aacd .PdfAnnotation =_cgfa ;_cgfa ._bea =_aacd ;return _cgfa ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_efeg ,_fcee :=_ggef .newPdfAnnotationSquigglyFromDict (_bag );if _fcee !=nil {return nil ,_fcee ;
};_efeg .PdfAnnotation =_cgfa ;_cgfa ._bea =_efeg ;return _cgfa ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_ebb ,_eabb :=_ggef .newPdfAnnotationStrikeOut (_bag );if _eabb !=nil {return nil ,_eabb ;};_ebb .PdfAnnotation =_cgfa ;_cgfa ._bea =_ebb ;
return _cgfa ,nil ;case "\u0043\u0061\u0072e\u0074":_efbg ,_eddg :=_ggef .newPdfAnnotationCaretFromDict (_bag );if _eddg !=nil {return nil ,_eddg ;};_efbg .PdfAnnotation =_cgfa ;_cgfa ._bea =_efbg ;return _cgfa ,nil ;case "\u0053\u0074\u0061m\u0070":_dge ,_bbc :=_ggef .newPdfAnnotationStampFromDict (_bag );
if _bbc !=nil {return nil ,_bbc ;};_dge .PdfAnnotation =_cgfa ;_cgfa ._bea =_dge ;return _cgfa ,nil ;case "\u0049\u006e\u006b":_ecdd ,_ebfe :=_ggef .newPdfAnnotationInkFromDict (_bag );if _ebfe !=nil {return nil ,_ebfe ;};_ecdd .PdfAnnotation =_cgfa ;_cgfa ._bea =_ecdd ;
return _cgfa ,nil ;case "\u0050\u006f\u0070u\u0070":_ebc ,_cbae :=_ggef .newPdfAnnotationPopupFromDict (_bag );if _cbae !=nil {return nil ,_cbae ;};_ebc .PdfAnnotation =_cgfa ;_cgfa ._bea =_ebc ;return _cgfa ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_bff ,_bgfd :=_ggef .newPdfAnnotationFileAttachmentFromDict (_bag );
if _bgfd !=nil {return nil ,_bgfd ;};_bff .PdfAnnotation =_cgfa ;_cgfa ._bea =_bff ;return _cgfa ,nil ;case "\u0053\u006f\u0075n\u0064":_dgfe ,_bbag :=_ggef .newPdfAnnotationSoundFromDict (_bag );if _bbag !=nil {return nil ,_bbag ;};_dgfe .PdfAnnotation =_cgfa ;
_cgfa ._bea =_dgfe ;return _cgfa ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_gegab ,_ecfd :=_ggef .newPdfAnnotationRichMediaFromDict (_bag );if _ecfd !=nil {return nil ,_ecfd ;};_gegab .PdfAnnotation =_cgfa ;_cgfa ._bea =_gegab ;return _cgfa ,nil ;
case "\u004d\u006f\u0076i\u0065":_aedab ,_adcc :=_ggef .newPdfAnnotationMovieFromDict (_bag );if _adcc !=nil {return nil ,_adcc ;};_aedab .PdfAnnotation =_cgfa ;_cgfa ._bea =_aedab ;return _cgfa ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_cdbc ,_bbe :=_ggef .newPdfAnnotationScreenFromDict (_bag );
if _bbe !=nil {return nil ,_bbe ;};_cdbc .PdfAnnotation =_cgfa ;_cgfa ._bea =_cdbc ;return _cgfa ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_cggc ,_baag :=_ggef .newPdfAnnotationWidgetFromDict (_bag );if _baag !=nil {return nil ,_baag ;};_cggc .PdfAnnotation =_cgfa ;
_cgfa ._bea =_cggc ;return _cgfa ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_daeg ,_acg :=_ggef .newPdfAnnotationPrinterMarkFromDict (_bag );if _acg !=nil {return nil ,_acg ;};_daeg .PdfAnnotation =_cgfa ;_cgfa ._bea =_daeg ;
return _cgfa ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_bdcg ,_dgaa :=_ggef .newPdfAnnotationTrapNetFromDict (_bag );if _dgaa !=nil {return nil ,_dgaa ;};_bdcg .PdfAnnotation =_cgfa ;_cgfa ._bea =_bdcg ;return _cgfa ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_ggg ,_eaad :=_ggef .newPdfAnnotationWatermarkFromDict (_bag );
if _eaad !=nil {return nil ,_eaad ;};_ggg .PdfAnnotation =_cgfa ;_cgfa ._bea =_ggg ;return _cgfa ,nil ;case "\u0033\u0044":_bgg ,_cfg :=_ggef .newPdfAnnotation3DFromDict (_bag );if _cfg !=nil {return nil ,_cfg ;};_bgg .PdfAnnotation =_cgfa ;_cgfa ._bea =_bgg ;
return _cgfa ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_bge ,_dcc :=_ggef .newPdfAnnotationProjectionFromDict (_bag );if _dcc !=nil {return nil ,_dcc ;};_bge .PdfAnnotation =_cgfa ;_cgfa ._bea =_bge ;return _cgfa ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_aggg ,_gda :=_ggef .newPdfAnnotationRedactFromDict (_bag );
if _gda !=nil {return nil ,_gda ;};_aggg .PdfAnnotation =_cgfa ;_cgfa ._bea =_aggg ;return _cgfa ,nil ;};_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_gca );
return nil ,nil ;};type pdfFontSimple struct{fontCommon ;_dafge *_daa .PdfIndirectObject ;_aaef map[_df .CharCode ]float64 ;_face _df .TextEncoder ;_acefe _df .TextEncoder ;_eadg *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _daa .PdfObject ;LastChar _daa .PdfObject ;Widths _daa .PdfObject ;Encoding _daa .PdfObject ;_cgdf *_ec .RuneCharSafeMap ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _daa .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _daa .PdfObject ;Contents _daa .PdfObject ;
Rotate *int64 ;Group _daa .PdfObject ;Thumb _daa .PdfObject ;B _daa .PdfObject ;Dur _daa .PdfObject ;Trans _daa .PdfObject ;AA _daa .PdfObject ;Metadata _daa .PdfObject ;PieceInfo _daa .PdfObject ;StructParents _daa .PdfObject ;ID _daa .PdfObject ;PZ _daa .PdfObject ;
SeparationInfo _daa .PdfObject ;Tabs _daa .PdfObject ;TemplateInstantiated _daa .PdfObject ;PresSteps _daa .PdfObject ;UserUnit _daa .PdfObject ;VP _daa .PdfObject ;Annots _daa .PdfObject ;_febda []*PdfAnnotation ;_bbcff *_daa .PdfObjectDictionary ;_cfgb *_daa .PdfIndirectObject ;
_cdef _daa .PdfObjectDictionary ;_badgb *PdfReader ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_daa .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_cbcda *_daa .PdfIndirectObject ;};func _bdbbg (_dfdffd []byte )([]byte ,error ){_cgdaec :=_ba .New ();
if _ ,_geeb :=_dgg .Copy (_cgdaec ,_ag .NewReader (_dfdffd ));_geeb !=nil {return nil ,_geeb ;};return _cgdaec .Sum (nil ),nil ;};func _dbbb (_afg _daa .PdfObject )(*PdfFilespec ,error ){if _afg ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_afg );
};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_cbgc DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func (_bcaag *PdfReader )loadStructure ()error {if _bcaag ._adgcg .GetCrypter ()!=nil &&!_bcaag ._adgcg .IsAuthenticated (){return _c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dbbbc :=_bcaag ._adgcg .GetTrailer ();if _dbbbc ==nil {return _c .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fdcbc ,_aece :=_dbbbc .Get ("\u0052\u006f\u006f\u0074").(*_daa .PdfObjectReference );if !_aece {return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_dbbbc );
};_bbcec ,_gfdda :=_bcaag ._adgcg .LookupByReference (*_fdcbc );if _gfdda !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_gfdda );
return _gfdda ;};_geaac ,_aece :=_bbcec .(*_daa .PdfIndirectObject );if !_aece {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_bbcec ,*_dbbbc );
return _ff .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ebeeb ,_aece :=(*_geaac ).PdfObject .(*_daa .PdfObjectDictionary );if !_aece {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_geaac .PdfObject );
return _ff .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ae .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_ebeeb );_acdbga ,_aece :=_ebeeb .Get ("\u0050\u0061\u0067e\u0073").(*_daa .PdfObjectReference );
if !_aece {return _ff .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_ebba ,_gfdda :=_bcaag ._adgcg .LookupByReference (*_acdbga );
if _gfdda !=nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _gfdda ;};_cacgg ,_aece :=_ebba .(*_daa .PdfIndirectObject );if !_aece {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_ae .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_cacgg );return _ff .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dgdgb ,_aece :=_cacgg .PdfObject .(*_daa .PdfObjectDictionary );if !_aece {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_cacgg );
return _ff .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_gagbda ,_aece :=_daa .GetInt (_dgdgb .Get ("\u0043\u006f\u0075n\u0074"));if !_aece {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _ff .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_aece =_daa .GetName (_dgdgb .Get ("\u0054\u0079\u0070\u0065"));!_aece {_ae .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_dgdgb .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName ("\u0050\u0061\u0067e\u0073"));};if _cdegf ,_gdaaa :=_daa .GetInt (_dgdgb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_gdaaa {_gaega :=int64 (*_cdegf );_bcaag .Rotate =&_gaega ;};_bcaag ._eedgb =_fdcbc ;
_bcaag ._cgace =_ebeeb ;_bcaag ._bdeac =_dgdgb ;_bcaag ._gefdea =_cacgg ;_bcaag ._fccad =int (*_gagbda );_bcaag ._eefcbf =[]*_daa .PdfIndirectObject {};_eafa :=map[_daa .PdfObject ]struct{}{};_gfdda =_bcaag .buildPageList (_cacgg ,nil ,_eafa );if _gfdda !=nil {return _gfdda ;
};_ae .Log .Trace ("\u002d\u002d\u002d");_ae .Log .Trace ("\u0054\u004f\u0043");_ae .Log .Trace ("\u0050\u0061\u0067e\u0073");_ae .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_bcaag ._eefcbf ),_bcaag ._eefcbf );_bcaag ._bgceg ,_gfdda =_bcaag .loadOutlines ();
if _gfdda !=nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_gfdda );
return _gfdda ;};_bcaag .AcroForm ,_gfdda =_bcaag .loadForms ();if _gfdda !=nil {return _gfdda ;};_bcaag .DSS ,_gfdda =_bcaag .loadDSS ();if _gfdda !=nil {return _gfdda ;};_bcaag ._cdefg ,_gfdda =_bcaag .loadPerms ();if _gfdda !=nil {return _gfdda ;};return nil ;
};func (_ccdd *PdfReader )newPdfAnnotationLineFromDict (_bebe *_daa .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_fag :=PdfAnnotationLine {};_fecg ,_abge :=_ccdd .newPdfAnnotationMarkupFromDict (_bebe );if _abge !=nil {return nil ,_abge ;};_fag .PdfAnnotationMarkup =_fecg ;
_fag .L =_bebe .Get ("\u004c");_fag .BS =_bebe .Get ("\u0042\u0053");_fag .LE =_bebe .Get ("\u004c\u0045");_fag .IC =_bebe .Get ("\u0049\u0043");_fag .LL =_bebe .Get ("\u004c\u004c");_fag .LLE =_bebe .Get ("\u004c\u004c\u0045");_fag .Cap =_bebe .Get ("\u0043\u0061\u0070");
_fag .IT =_bebe .Get ("\u0049\u0054");_fag .LLO =_bebe .Get ("\u004c\u004c\u004f");_fag .CP =_bebe .Get ("\u0043\u0050");_fag .Measure =_bebe .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_fag .CO =_bebe .Get ("\u0043\u004f");return &_fag ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bgf *PdfActionMovie )ToPdfObject ()_daa .PdfObject {_bgf .PdfAction .ToPdfObject ();_cga :=_bgf ._ad ;_fac :=_cga .PdfObject .(*_daa .PdfObjectDictionary );_fac .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeMovie )));_fac .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_bgf .Annotation );
_fac .SetIfNotNil ("\u0054",_bgf .T );_fac .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_bgf .Operation );return _cga ;};func _gaede ()string {_gdggd .Lock ();defer _gdggd .Unlock ();if len (_cdcfe )> 0{return _cdcfe ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};

// SetOCProperties sets the optional content properties.
func (_badff *PdfWriter )SetOCProperties (ocProperties _daa .PdfObject )error {_bfcgg :=_badff ._dbae ;if ocProperties !=nil {_ae .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_bfcgg .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _badff .addObjects (ocProperties );};return nil ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;
XObjectTypeUnknown ;);type modelManager struct{_befce map[PdfModel ]_daa .PdfObject ;_cfdfd map[_daa .PdfObject ]PdfModel ;};

// ToPdfObject implements interface PdfModel.
func (_acac *PdfAnnotationCaret )ToPdfObject ()_daa .PdfObject {_acac .PdfAnnotation .ToPdfObject ();_cefb :=_acac ._gbf ;_aggf :=_cefb .PdfObject .(*_daa .PdfObjectDictionary );_acac .PdfAnnotationMarkup .appendToPdfDictionary (_aggf );_aggf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0043\u0061\u0072e\u0074"));
_aggf .SetIfNotNil ("\u0052\u0044",_acac .RD );_aggf .SetIfNotNil ("\u0053\u0079",_acac .Sy );return _cefb ;};func (_badeg *PdfReader )newPdfAcroFormFromDict (_cagc *_daa .PdfIndirectObject ,_fgacc *_daa .PdfObjectDictionary )(*PdfAcroForm ,error ){_ccgbf :=NewPdfAcroForm ();
if _cagc !=nil {_ccgbf ._bdcag =_cagc ;_cagc .PdfObject =_daa .MakeDict ();};if _abgcd :=_fgacc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_abgcd !=nil &&!_daa .IsNullObject (_abgcd ){_aced ,_ggbbg :=_daa .GetArray (_abgcd );if !_ggbbg {return nil ,_c .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_abgcd );
};var _afbecd []*PdfField ;for _ ,_ebcb :=range _aced .Elements (){_bgbae ,_badg :=_daa .GetIndirect (_ebcb );if !_badg {if _ ,_gdgca :=_ebcb .(*_daa .PdfObjectNull );_gdgca {_ae .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_ae .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_ebcb );
return nil ,_c .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gdbcc ,_agede :=_badeg .newPdfFieldFromIndirectObject (_bgbae ,nil );
if _agede !=nil {return nil ,_agede ;};_ae .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_gdbcc );_afbecd =append (_afbecd ,_gdbcc );};_ccgbf .Fields =&_afbecd ;};if _cgaf :=_fgacc .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_cgaf !=nil {_ccgaa ,_fgadd :=_daa .GetBool (_cgaf );if _fgadd {_ccgbf .NeedAppearances =_ccgaa ;}else {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_cgaf );
};};if _caca :=_fgacc .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_caca !=nil {_eabd ,_bacd :=_daa .GetInt (_caca );if _bacd {_ccgbf .SigFlags =_eabd ;}else {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_caca );
};};if _fceec :=_fgacc .Get ("\u0043\u004f");_fceec !=nil {_cdeaa ,_abfd :=_daa .GetArray (_fceec );if _abfd {_ccgbf .CO =_cdeaa ;}else {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fceec );
};};if _bcbb :=_fgacc .Get ("\u0044\u0052");_bcbb !=nil {if _aaea ,_fffb :=_daa .GetDict (_bcbb );_fffb {_gagf ,_egfae :=NewPdfPageResourcesFromDict (_aaea );if _egfae !=nil {_ae .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_egfae );
return nil ,_egfae ;};_ccgbf .DR =_gagf ;}else {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bcbb );};};if _dgadce :=_fgacc .Get ("\u0044\u0041");
_dgadce !=nil {_eafgg ,_edab :=_daa .GetString (_dgadce );if _edab {_ccgbf .DA =_eafgg ;}else {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dgadce );
};};if _egce :=_fgacc .Get ("\u0051");_egce !=nil {_daacf ,_dgda :=_daa .GetInt (_egce );if _dgda {_ccgbf .Q =_daacf ;}else {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_egce );
};};if _gdced :=_fgacc .Get ("\u0058\u0046\u0041");_gdced !=nil {_ccgbf .XFA =_gdced ;};if _cffe :=_fgacc .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_cffe !=nil {_ccgbf .ADBEEchoSign =_cffe ;};_ccgbf .ToPdfObject ();
return _ccgbf ,nil ;};func (_caddc *PdfPattern )getDict ()*_daa .PdfObjectDictionary {if _bfabg ,_adaag :=_caddc ._degd .(*_daa .PdfIndirectObject );_adaag {_adcgc ,_bcgaa :=_bfabg .PdfObject .(*_daa .PdfObjectDictionary );if !_bcgaa {return nil ;};return _adcgc ;
}else if _acde ,_ddbfd :=_caddc ._degd .(*_daa .PdfObjectStream );_ddbfd {return _acde .PdfObjectDictionary ;}else {_ae .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_caddc ._degd );
return nil ;};};func _caaeed (_fedeb *PdfField )[]*PdfField {_gbgbb :=[]*PdfField {_fedeb };for _ ,_ggbgf :=range _fedeb .Kids {_gbgbb =append (_gbgbb ,_caaeed (_ggbgf )...);};return _gbgbb ;};func (_ccgf *PdfReader )newPdfAnnotationTextFromDict (_eafd *_daa .PdfObjectDictionary )(*PdfAnnotationText ,error ){_ecce :=PdfAnnotationText {};
_gadb ,_abgd :=_ccgf .newPdfAnnotationMarkupFromDict (_eafd );if _abgd !=nil {return nil ,_abgd ;};_ecce .PdfAnnotationMarkup =_gadb ;_ecce .Open =_eafd .Get ("\u004f\u0070\u0065\u006e");_ecce .Name =_eafd .Get ("\u004e\u0061\u006d\u0065");_ecce .State =_eafd .Get ("\u0053\u0074\u0061t\u0065");
_ecce .StateModel =_eafd .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_ecce ,nil ;};func (_aeceb *PdfWriter )writeTrailer (_bbfac int ){_aeceb .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _dfffc :=0;_dfffc <=_bbfac ;
{for ;_dfffc <=_bbfac ;_dfffc ++{_bffda ,_abeba :=_aeceb ._agfc [_dfffc ];if _abeba &&(!_aeceb ._ffde ||_aeceb ._ffde &&(_bffda .Type ==1&&_bffda .Offset >=_aeceb ._dcbfe ||_bffda .Type ==0)){break ;};};var _ecfc int ;for _ecfc =_dfffc +1;_ecfc <=_bbfac ;
_ecfc ++{_ffacc ,_cffbb :=_aeceb ._agfc [_ecfc ];if _cffbb &&(!_aeceb ._ffde ||_aeceb ._ffde &&(_ffacc .Type ==1&&_ffacc .Offset > _aeceb ._dcbfe )){continue ;};break ;};_fbgg :=_c .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_dfffc ,_ecfc -_dfffc );
_aeceb .writeString (_fbgg );for _aeeeg :=_dfffc ;_aeeeg < _ecfc ;_aeeeg ++{_feaab :=_aeceb ._agfc [_aeeeg ];switch _feaab .Type {case 0:_fbgg =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_aeceb .writeString (_fbgg );
case 1:_fbgg =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_feaab .Offset ,0);_aeceb .writeString (_fbgg );};};_dfffc =_ecfc +1;};_fbcb :=_daa .MakeDict ();_fbcb .Set ("\u0049\u006e\u0066\u006f",_aeceb ._badb );
_fbcb .Set ("\u0052\u006f\u006f\u0074",_aeceb ._gcdee );_fbcb .Set ("\u0053\u0069\u007a\u0065",_daa .MakeInteger (int64 (_bbfac +1)));if _aeceb ._ffde &&_aeceb ._aeafe > 0{_fbcb .Set ("\u0050\u0072\u0065\u0076",_daa .MakeInteger (_aeceb ._aeafe ));};if _aeceb ._bcce !=nil {_fbcb .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_aeceb ._efea );
};if _aeceb ._fabed ==nil &&_aeceb ._adcff !=""&&_aeceb ._cgfaa !=""{_aeceb ._fabed =_daa .MakeArray (_daa .MakeHexString (_aeceb ._adcff ),_daa .MakeHexString (_aeceb ._cgfaa ));};if _aeceb ._fabed !=nil {_fbcb .Set ("\u0049\u0044",_aeceb ._fabed );_ae .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_aeceb ._fabed );
};_aeceb .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_aeceb .writeString (_fbcb .WriteString ());_aeceb .writeString ("\u000a");};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_aacg :=NewPdfAnnotation ();_dcbe :=&PdfAnnotation3D {};_dcbe .PdfAnnotation =_aacg ;_aacg .SetContext (_dcbe );return _dcbe ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_cgfb _daa .PdfObject ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// ToPdfObject implements interface PdfModel.
func (_abba *PdfAnnotationFileAttachment )ToPdfObject ()_daa .PdfObject {_abba .PdfAnnotation .ToPdfObject ();_fega :=_abba ._gbf ;_egba :=_fega .PdfObject .(*_daa .PdfObjectDictionary );_abba .PdfAnnotationMarkup .appendToPdfDictionary (_egba );_egba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_egba .SetIfNotNil ("\u0046\u0053",_abba .FS );_egba .SetIfNotNil ("\u004e\u0061\u006d\u0065",_abba .Name );return _fega ;};func (_babg *PdfSignature )extractChainFromCert ()([]*_e .Certificate ,error ){var _gdbbd *_daa .PdfObjectArray ;switch _bgaea :=_babg .Cert .(type ){case *_daa .PdfObjectString :_gdbbd =_daa .MakeArray (_bgaea );
case *_daa .PdfObjectArray :_gdbbd =_bgaea ;default:return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bgaea );
};var _ceeee _ag .Buffer ;for _ ,_dcbdb :=range _gdbbd .Elements (){_fdggb ,_bfdaa :=_daa .GetString (_dcbdb );if !_bfdaa {return nil ,_c .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_dcbdb );
};if _ ,_dccff :=_ceeee .Write (_fdggb .Bytes ());_dccff !=nil {return nil ,_dccff ;};};return _e .ParseCertificates (_ceeee .Bytes ());};func (_aeed *PdfReader )newPdfAnnotationTrapNetFromDict (_bfeb *_daa .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_adaf :=PdfAnnotationTrapNet {};
return &_adaf ,nil ;};func _febb (_eeffc *_daa .PdfIndirectObject )(*PdfOutline ,error ){_gdaag ,_gfgfc :=_eeffc .PdfObject .(*_daa .PdfObjectDictionary );if !_gfgfc {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_aaga :=NewPdfOutline ();if _agdgg :=_gdaag .Get ("\u0054\u0079\u0070\u0065");_agdgg !=nil {_gbba ,_ddcd :=_agdgg .(*_daa .PdfObjectName );if _ddcd {if *_gbba !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_gbba );
};};};if _ddef :=_gdaag .Get ("\u0043\u006f\u0075n\u0074");_ddef !=nil {_abfgfe ,_fgbb :=_daa .GetNumberAsInt64 (_ddef );if _fgbb !=nil {return nil ,_fgbb ;};_aaga .Count =&_abfgfe ;};return _aaga ,nil ;};func (_eggfb *LTV )validateSig (_egfe *PdfSignature )error {if _egfe ==nil ||_egfe .Contents ==nil ||len (_egfe .Contents .Bytes ())==0{return _c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_egfe );
};return nil ;};func _gfddgd (_abege *_daa .PdfObjectDictionary )(*PdfShadingType6 ,error ){_fdbeg :=PdfShadingType6 {};_bdegf :=_abege .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _bdegf ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gccff ,_bcddf :=_bdegf .(*_daa .PdfObjectInteger );if !_bcddf {_ae .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdegf );
return nil ,_daa .ErrTypeError ;};_fdbeg .BitsPerCoordinate =_gccff ;_bdegf =_abege .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bdegf ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gccff ,_bcddf =_bdegf .(*_daa .PdfObjectInteger );if !_bcddf {_ae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bdegf );
return nil ,_daa .ErrTypeError ;};_fdbeg .BitsPerComponent =_gccff ;_bdegf =_abege .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bdegf ==nil {_ae .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gccff ,_bcddf =_bdegf .(*_daa .PdfObjectInteger );if !_bcddf {_ae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bdegf );
return nil ,_daa .ErrTypeError ;};_fdbeg .BitsPerComponent =_gccff ;_bdegf =_abege .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bdegf ==nil {_ae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dbggba ,_bcddf :=_bdegf .(*_daa .PdfObjectArray );if !_bcddf {_ae .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdegf );
return nil ,_daa .ErrTypeError ;};_fdbeg .Decode =_dbggba ;if _bbdgc :=_abege .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bbdgc !=nil {_fdbeg .Function =[]PdfFunction {};if _bcac ,_acdfed :=_bbdgc .(*_daa .PdfObjectArray );_acdfed {for _ ,_bebee :=range _bcac .Elements (){_fagdg ,_ccfe :=_bcec (_bebee );
if _ccfe !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccfe );return nil ,_ccfe ;};_fdbeg .Function =append (_fdbeg .Function ,_fagdg );
};}else {_aadba ,_dabgf :=_bcec (_bbdgc );if _dabgf !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dabgf );return nil ,_dabgf ;
};_fdbeg .Function =append (_fdbeg .Function ,_aadba );};};return &_fdbeg ,nil ;};func _cfeg (_gfagg *PdfPage ){_eedab :=_agc .GetLicenseKey ();if _eedab !=nil &&_eedab .IsLicensed (){return ;};_gegff :=_daa .PdfObjectName ("\u0055\u0046\u0031");if !_gfagg .Resources .HasFontByName (_gegff ){_gfagg .Resources .SetFontByName (_gegff ,DefaultFont ().ToPdfObject ());
};var _ggagag []string ;_ggagag =append (_ggagag ,"\u0071");_ggagag =append (_ggagag ,"\u0042\u0054");_ggagag =append (_ggagag ,_c .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_gegff .String ()));_ggagag =append (_ggagag ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_ggagag =append (_ggagag ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_dgfee :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_ggagag =append (_ggagag ,_c .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_dgfee ));_ggagag =append (_ggagag ,"\u0045\u0054");_ggagag =append (_ggagag ,"\u0051");_bcaga :=_db .Join (_ggagag ,"\u000a");_gfagg .AddContentStreamByString (_bcaga );_gfagg .ToPdfObject ();
};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_bbbb *pdfFontSimple )ToPdfObject ()_daa .PdfObject {if _bbbb ._dafge ==nil {_bbbb ._dafge =&_daa .PdfIndirectObject {};};_eeef :=_bbbb .baseFields ().asPdfObjectDictionary ("");_bbbb ._dafge .PdfObject =_eeef ;if _bbbb .FirstChar !=nil {_eeef .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_bbbb .FirstChar );
};if _bbbb .LastChar !=nil {_eeef .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_bbbb .LastChar );};if _bbbb .Widths !=nil {_eeef .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_bbbb .Widths );};if _bbbb .Encoding !=nil {_eeef .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bbbb .Encoding );
}else if _bbbb ._face !=nil {_fcedb :=_bbbb ._face .ToPdfObject ();if _fcedb !=nil {_eeef .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fcedb );};};return _bbbb ._dafge ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_adad *XObjectImage )GetContainingPdfObject ()_daa .PdfObject {return _adad ._deefd };func _cafb (_bgdd _ec .StdFont )pdfFontSimple {_cdaa :=_bgdd .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_fbafe :"\u0054\u0079\u0070e\u0031",_agfd :_bgdd .Name ()},_cgdf :_bgdd .GetMetricsTable (),_eadg :&PdfFontDescriptor {FontName :_daa .MakeName (string (_cdaa .Name )),FontFamily :_daa .MakeName (_cdaa .Family ),FontWeight :_daa .MakeFloat (float64 (_cdaa .Weight )),Flags :_daa .MakeInteger (int64 (_cdaa .Flags )),FontBBox :_daa .MakeArrayFromFloats (_cdaa .BBox [:]),ItalicAngle :_daa .MakeFloat (_cdaa .ItalicAngle ),Ascent :_daa .MakeFloat (_cdaa .Ascent ),Descent :_daa .MakeFloat (_cdaa .Descent ),CapHeight :_daa .MakeFloat (_cdaa .CapHeight ),XHeight :_daa .MakeFloat (_cdaa .XHeight ),StemV :_daa .MakeFloat (_cdaa .StemV ),StemH :_daa .MakeFloat (_cdaa .StemH )},_acefe :_bgdd .Encoder ()};
};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_ebgg :=map[rune ]int {};for _ ,_gfae :=range text {_ebgg [_gfae ]++;};return _ebgg ;};

// SetDecode sets the decode image float slice.
func (_fcge *Image )SetDecode (decode []float64 ){_fcge ._bfdc =decode };

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_bbfe *PdfPage )error ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cegcd *Permissions )GetContainingPdfObject ()_daa .PdfObject {return _cegcd ._fadgg };

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_cefga *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_daa .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_bggdb :=&PdfColorPattern {};_acfa ,_dceg :=objects [len (objects )-1].(*_daa .PdfObjectName );if !_dceg {_ae .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_bggdb .PatternName =*_acfa ;if len (objects )> 1{_cdfc :=objects [0:len (objects )-1];if _cefga .UnderlyingCS ==nil {_ae .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_ff .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_cgcd ,_gcdd :=_cefga .UnderlyingCS .ColorFromPdfObjects (_cdfc );if _gcdd !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_gcdd );
return nil ,_gcdd ;};_bggdb .Color =_cgcd ;};return _bggdb ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gcgad pdfCIDFontType2 )GetRuneMetrics (r rune )(_ec .CharMetrics ,bool ){_fabb ,_eadaa :=_gcgad ._agcac [r ];if !_eadaa {_fafcg ,_ebdf :=_daa .GetInt (_gcgad .DW );if !_ebdf {return _ec .CharMetrics {},false ;};_fabb =int (*_fafcg );};return _ec .CharMetrics {Wx :float64 (_fabb )},true ;
};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_fggee :=&PdfPageResources {};_fggee ._faeeg =_daa .MakeDict ();return _fggee ;};func (_gdec *PdfReader )newPdfAnnotationProjectionFromDict (_dgfec *_daa .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_bab :=&PdfAnnotationProjection {};
_facdc ,_bffb :=_gdec .newPdfAnnotationMarkupFromDict (_dgfec );if _bffb !=nil {return nil ,_bffb ;};_bab .PdfAnnotationMarkup =_facdc ;return _bab ,nil ;};func (_cgc *PdfReader )newPdfActionURIFromDict (_ccb *_daa .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_ccb .Get ("\u0055\u0052\u0049"),IsMap :_ccb .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// ToInteger convert to an integer format.
func (_fbcd *PdfColorCalGray )ToInteger (bits int )uint32 {_bbgf :=_ce .Pow (2,float64 (bits ))-1;return uint32 (_bbgf *_fbcd .Val ());};func _adgf (_ccaa *_daa .PdfObjectDictionary ,_fgfca *fontCommon )(*pdfCIDFontType0 ,error ){if _fgfca ._fbafe !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_ae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_fgfca );
return nil ,_daa .ErrRangeError ;};_eaaegg :=_afdag (_fgfca );_fcgfe ,_gefa :=_daa .GetDict (_ccaa .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_gefa {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fgfca );
return nil ,ErrRequiredAttributeMissing ;};_eaaegg .CIDSystemInfo =_fcgfe ;_eaaegg .DW =_ccaa .Get ("\u0044\u0057");_eaaegg .W =_ccaa .Get ("\u0057");_eaaegg .DW2 =_ccaa .Get ("\u0044\u0057\u0032");_eaaegg .W2 =_ccaa .Get ("\u0057\u0032");_eaaegg ._bgcca =1000.0;
if _egabb ,_ecgcag :=_daa .GetNumberAsFloat (_eaaegg .DW );_ecgcag ==nil {_eaaegg ._bgcca =_egabb ;};_gadab ,_dfdb :=_ffafa (_eaaegg .W );if _dfdb !=nil {return nil ,_dfdb ;};if _gadab ==nil {_gadab =map[_df .CharCode ]float64 {};};_eaaegg ._dfca =_gadab ;
return _eaaegg ,nil ;};func (_eefg *PdfAppender )updateObjectsDeep (_cffd _daa .PdfObject ,_dcgd map[_daa .PdfObject ]struct{}){if _dcgd ==nil {_dcgd =map[_daa .PdfObject ]struct{}{};};if _ ,_cead :=_dcgd [_cffd ];_cead ||_cffd ==nil {return ;};_dcgd [_cffd ]=struct{}{};
_dgbd :=_daa .ResolveReferencesDeep (_cffd ,_eefg ._dbff );if _dgbd !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgbd );};switch _ccfgd :=_cffd .(type ){case *_daa .PdfIndirectObject :switch {case _ccfgd .GetParser ()==_eefg ._egaf ._adgcg :return ;
case _ccfgd .GetParser ()==_eefg .Reader ._adgcg :_cbee ,_ :=_eefg ._egaf .GetIndirectObjectByNumber (int (_ccfgd .ObjectNumber ));_eda ,_ebbce :=_cbee .(*_daa .PdfIndirectObject );if _ebbce &&_eda !=nil {if _eda .PdfObject !=_ccfgd .PdfObject &&_eda .PdfObject .WriteString ()!=_ccfgd .PdfObject .WriteString (){_eefg .addNewObject (_cffd );
_eefg ._fedb [_cffd ]=_ccfgd .ObjectNumber ;};};default:_eefg .addNewObject (_cffd );};_eefg .updateObjectsDeep (_ccfgd .PdfObject ,_dcgd );case *_daa .PdfObjectArray :for _ ,_dddd :=range _ccfgd .Elements (){_eefg .updateObjectsDeep (_dddd ,_dcgd );};
case *_daa .PdfObjectDictionary :for _ ,_dabf :=range _ccfgd .Keys (){_eefg .updateObjectsDeep (_ccfgd .Get (_dabf ),_dcgd );};case *_daa .PdfObjectStreams :if _ccfgd .GetParser ()!=_eefg ._egaf ._adgcg {for _ ,_debf :=range _ccfgd .Elements (){_eefg .updateObjectsDeep (_debf ,_dcgd );
};};case *_daa .PdfObjectStream :switch {case _ccfgd .GetParser ()==_eefg ._egaf ._adgcg :return ;case _ccfgd .GetParser ()==_eefg .Reader ._adgcg :if _begd ,_egde :=_eefg ._egaf ._adgcg .LookupByReference (_ccfgd .PdfObjectReference );_egde ==nil {var _fegd bool ;
if _aeb ,_bbge :=_daa .GetStream (_begd );_bbge &&_ag .Equal (_aeb .Stream ,_ccfgd .Stream ){_fegd =true ;};if _gbb ,_aafb :=_daa .GetDict (_begd );_fegd &&_aafb {_fegd =_gbb .WriteString ()==_ccfgd .PdfObjectDictionary .WriteString ();};if _fegd {return ;
};};if _ccfgd .ObjectNumber !=0{_eefg ._fedb [_cffd ]=_ccfgd .ObjectNumber ;};default:if _ ,_cegb :=_eefg ._bbgd [_cffd ];!_cegb {_eefg .addNewObject (_cffd );};};_eefg .updateObjectsDeep (_ccfgd .PdfObjectDictionary ,_dcgd );};};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_ccfcc *PdfReader )GetIndirectObjectByNumber (number int )(_daa .PdfObject ,error ){_gefdee ,_aeace :=_ccfcc ._adgcg .LookupByNumber (number );return _gefdee ,_aeace ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_fdfc *PdfAnnotationWidget )Field ()*PdfField {return _fdfc ._gad };

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_bfef *PdfAcroForm )ToPdfObject ()_daa .PdfObject {_acgc :=_bfef ._bdcag ;_bbae :=_acgc .PdfObject .(*_daa .PdfObjectDictionary );if _bfef .Fields !=nil {_eacbe :=_daa .PdfObjectArray {};for _ ,_fbee :=range *_bfef .Fields {_eggbb :=_fbee .GetContext ();
if _eggbb !=nil {_eacbe .Append (_eggbb .ToPdfObject ());}else {_eacbe .Append (_fbee .ToPdfObject ());};};_bbae .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_eacbe );};if _bfef .NeedAppearances !=nil {_bbae .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_bfef .NeedAppearances );
};if _bfef .SigFlags !=nil {_bbae .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_bfef .SigFlags );};if _bfef .CO !=nil {_bbae .Set ("\u0043\u004f",_bfef .CO );};if _bfef .DR !=nil {_bbae .Set ("\u0044\u0052",_bfef .DR .ToPdfObject ());};if _bfef .DA !=nil {_bbae .Set ("\u0044\u0041",_bfef .DA );
};if _bfef .Q !=nil {_bbae .Set ("\u0051",_bfef .Q );};if _bfef .XFA !=nil {_bbae .Set ("\u0058\u0046\u0041",_bfef .XFA );};if _bfef .ADBEEchoSign !=nil {_bbae .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_bfef .ADBEEchoSign );
};return _acgc ;};

// MergePageWith appends page content to source Pdf file page content.
func (_ccba *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_bebc :=pageNum -1;var _agdg *PdfPage ;for _gaba ,_aad :=range _ccba ._ffda {if _gaba ==_bebc {_agdg =_aad ;};};if _agdg ==nil {return _c .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _agdg ._cfgb !=nil &&_agdg ._cfgb .GetParser ()==_ccba ._egaf ._adgcg {_agdg =_agdg .Duplicate ();_ccba ._ffda [_bebc ]=_agdg ;};page =page .Duplicate ();_cfeg (page );_ffga :=_bdece (_agdg );_bdge :=_bdece (page );_edbe :=make (map[_daa .PdfObjectName ]_daa .PdfObjectName );
for _dgaac :=range _bdge {if _ ,_acaad :=_ffga [_dgaac ];_acaad {for _bgcc :=1;true ;_bgcc ++{_gegd :=_daa .PdfObjectName (string (_dgaac )+_af .Itoa (_bgcc ));if _ ,_afgf :=_ffga [_gegd ];!_afgf {_edbe [_dgaac ]=_gegd ;break ;};};};};_dgc ,_ecga :=page .GetContentStreams ();
if _ecga !=nil {return _ecga ;};_fbed ,_ecga :=_agdg .GetContentStreams ();if _ecga !=nil {return _ecga ;};for _afe ,_abag :=range _dgc {for _gebb ,_cbcd :=range _edbe {_abag =_db .Replace (_abag ,"\u002f"+string (_gebb ),"\u002f"+string (_cbcd ),-1);};
_dgc [_afe ]=_abag ;};_fbed =append (_fbed ,_dgc ...);if _dgd :=_agdg .SetContentStreams (_fbed ,_daa .NewFlateEncoder ());_dgd !=nil {return _dgd ;};_agdg ._febda =append (_agdg ._febda ,page ._febda ...);if _agdg .Resources ==nil {_agdg .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_agdg .Resources .Font =_ccba .mergeResources (_agdg .Resources .Font ,page .Resources .Font ,_edbe );_agdg .Resources .XObject =_ccba .mergeResources (_agdg .Resources .XObject ,page .Resources .XObject ,_edbe );_agdg .Resources .Properties =_ccba .mergeResources (_agdg .Resources .Properties ,page .Resources .Properties ,_edbe );
if _agdg .Resources .ProcSet ==nil {_agdg .Resources .ProcSet =page .Resources .ProcSet ;};_agdg .Resources .Shading =_ccba .mergeResources (_agdg .Resources .Shading ,page .Resources .Shading ,_edbe );_agdg .Resources .ExtGState =_ccba .mergeResources (_agdg .Resources .ExtGState ,page .Resources .ExtGState ,_edbe );
};_caefe ,_ecga :=_agdg .GetMediaBox ();if _ecga !=nil {return _ecga ;};_beda ,_ecga :=page .GetMediaBox ();if _ecga !=nil {return _ecga ;};var _ebeg bool ;if _caefe .Llx > _beda .Llx {_caefe .Llx =_beda .Llx ;_ebeg =true ;};if _caefe .Lly > _beda .Lly {_caefe .Lly =_beda .Lly ;
_ebeg =true ;};if _caefe .Urx < _beda .Urx {_caefe .Urx =_beda .Urx ;_ebeg =true ;};if _caefe .Ury < _beda .Ury {_caefe .Ury =_beda .Ury ;_ebeg =true ;};if _ebeg {_agdg .MediaBox =_caefe ;};return nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_ebf :=NewPdfAnnotation ();_edc :=&PdfAnnotationRichMedia {};_edc .PdfAnnotation =_ebf ;_ebf .SetContext (_edc );return _edc ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// C returns the value of the cyan component of the color.
func (_abbab *PdfColorDeviceCMYK )C ()float64 {return _abbab [0]};func (_feea *PdfAppender )addNewObject (_dabb _daa .PdfObject ){if _ ,_bdg :=_feea ._bbgd [_dabb ];!_bdg {_feea ._eccf =append (_feea ._eccf ,_dabb );_feea ._bbgd [_dabb ]=struct{}{};};};


// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_adde *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _cbfge []*PdfField ;if _adde .AcroForm !=nil {_cbfge =_adde .AcroForm .AllFields ();};_bbfgfc :=make (map[*PdfField ]struct{},len (_cbfge ));for _ ,_ebfcae :=range _cbfge {_bbfgfc [_ebfcae ]=struct{}{};
};for _ ,_gegeb :=range _adde .PageList {_dffea ,_agbdcg :=_gegeb .GetAnnotations ();if _agbdcg !=nil {return false ,_agbdcg ;};for _ ,_gceda :=range _dffea {_daacb ,_baged :=_gceda .GetContext ().(*PdfAnnotationWidget );if !_baged {continue ;};_fdfeg :=_daacb .Field ();
if _fdfeg ==nil {return true ,nil ;};if _ ,_aaegd :=_bbfgfc [_fdfeg ];!_aaegd {return true ,nil ;};};};return false ,nil ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_ebee *PdfColorCalGray )GetNumComponents ()int {return 1};

// SetFlag sets the flag for the field.
func (_gdge *PdfField )SetFlag (flag FieldFlag ){_gdge .Ff =_daa .MakeInteger (int64 (flag ))};

// ToPdfObject implements interface PdfModel.
func (_adc *PdfActionSubmitForm )ToPdfObject ()_daa .PdfObject {_adc .PdfAction .ToPdfObject ();_dad :=_adc ._ad ;_gce :=_dad .PdfObject .(*_daa .PdfObjectDictionary );_gce .SetIfNotNil ("\u0053",_daa .MakeName (string (ActionTypeSubmitForm )));if _adc .F !=nil {_gce .Set ("\u0046",_adc .F .ToPdfObject ());
};_gce .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_adc .Fields );_gce .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_adc .Flags );return _dad ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_cffea *PdfOutlineTreeNode )ToPdfObject ()_daa .PdfObject {return _cffea .GetContext ().ToPdfObject ();};func _abgdg (_gdbcg _daa .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_ae .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_gdbcg .String (),_gdbcg );
_dcag :=NewPdfColorspaceSpecialPattern ();if _ggbc ,_dafc :=_gdbcg .(*_daa .PdfIndirectObject );_dafc {_dcag ._bedc =_ggbc ;};_gdbcg =_daa .TraceToDirectObject (_gdbcg );if _dgbc ,_gbcb :=_gdbcg .(*_daa .PdfObjectName );_gbcb {if *_dgbc !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _dcag ,nil ;};_dbfeb ,_fdbdg :=_gdbcg .(*_daa .PdfObjectArray );if !_fdbdg {_ae .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_gdbcg );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _dbfeb .Len ()!=1&&_dbfeb .Len ()!=2{_ae .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_dbfeb );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_gdbcg =_dbfeb .Get (0);if _gaage ,_defdg :=_gdbcg .(*_daa .PdfObjectName );_defdg {if *_gaage !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ae .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_gaage );
return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _dbfeb .Len ()> 1{_gdbcg =_dbfeb .Get (1);_gdbcg =_daa .TraceToDirectObject (_gdbcg );_bfdbd ,_daefe :=NewPdfColorspaceFromPdfObject (_gdbcg );if _daefe !=nil {return nil ,_daefe ;
};_dcag .UnderlyingCS =_bfdbd ;};_ae .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_dcag .UnderlyingCS );
return _dcag ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_daad *PdfColorspaceDeviceCMYK )ToPdfObject ()_daa .PdfObject {return _daa .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};var ErrColorOutOfRange =_ff .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");
func _cdfdg ()_d .Time {_gdggd .Lock ();defer _gdggd .Unlock ();return _bbcbe };

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_cbcc *PdfPattern )GetContext ()PdfModel {return _cbcc ._bcdee };

// AddExtGState adds a graphics state to the XObject resources.
func (_becf *PdfPage )AddExtGState (name _daa .PdfObjectName ,egs *_daa .PdfObjectDictionary )error {if _becf .Resources ==nil {_becf .Resources =NewPdfPageResources ();};if _becf .Resources .ExtGState ==nil {_becf .Resources .ExtGState =_daa .MakeDict ();
};_fccebe ,_adcec :=_daa .TraceToDirectObject (_becf .Resources .ExtGState ).(*_daa .PdfObjectDictionary );if !_adcec {_ae .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_daa .TraceToDirectObject (_becf .Resources .ExtGState ));
return _ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fccebe .Set (name ,egs );return nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_cafd *PdfFont )CharcodesToUnicode (charcodes []_df .CharCode )[]rune {_fbabb ,_ ,_ :=_cafd .CharcodesToUnicodeWithStats (charcodes );return _fbabb ;};func (_cbfg *PdfFilespec )getDict ()*_daa .PdfObjectDictionary {if _aeg ,_dbaac :=_cbfg ._ccde .(*_daa .PdfIndirectObject );
_dbaac {_aabfb ,_cfbc :=_aeg .PdfObject .(*_daa .PdfObjectDictionary );if !_cfbc {return nil ;};return _aabfb ;}else if _gacg ,_cafef :=_cbfg ._ccde .(*_daa .PdfObjectDictionary );_cafef {return _gacg ;}else {_ae .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_cbfg ._ccde );
return nil ;};};

// Encoder returns the font's text encoder.
func (_bcdbg pdfCIDFontType0 )Encoder ()_df .TextEncoder {return _bcdbg ._ggbg };

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_fcce *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_ae .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_ae .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_ae .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_ae .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_dcdb ,_ggcc :=_ac .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bbcf ,img ._bfdc );if _ggcc !=nil {return Image {},_ggcc ;};_fbcgg ,_ggcc :=_ac .NRGBAConverter .Convert (_dcdb );if _ggcc !=nil {return Image {},_ggcc ;
};return _geda (_fbcgg .Base ()),nil ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_fadgg *_daa .PdfObjectDictionary ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_adgb *PdfColorspaceLab )ToPdfObject ()_daa .PdfObject {_edgbc :=_daa .MakeArray ();_edgbc .Append (_daa .MakeName ("\u004c\u0061\u0062"));_caga :=_daa .MakeDict ();if _adgb .WhitePoint !=nil {_addf :=_daa .MakeArray (_daa .MakeFloat (_adgb .WhitePoint [0]),_daa .MakeFloat (_adgb .WhitePoint [1]),_daa .MakeFloat (_adgb .WhitePoint [2]));
_caga .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_addf );}else {_ae .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _adgb .BlackPoint !=nil {_bage :=_daa .MakeArray (_daa .MakeFloat (_adgb .BlackPoint [0]),_daa .MakeFloat (_adgb .BlackPoint [1]),_daa .MakeFloat (_adgb .BlackPoint [2]));_caga .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bage );
};if _adgb .Range !=nil {_eefbg :=_daa .MakeArray (_daa .MakeFloat (_adgb .Range [0]),_daa .MakeFloat (_adgb .Range [1]),_daa .MakeFloat (_adgb .Range [2]),_daa .MakeFloat (_adgb .Range [3]));_caga .Set ("\u0052\u0061\u006eg\u0065",_eefbg );};_edgbc .Append (_caga );
if _adgb ._befe !=nil {_adgb ._befe .PdfObject =_edgbc ;return _adgb ._befe ;};return _edgbc ;};func (_dbcg *PdfWriter )setWriter (_dbdfd _dgg .Writer ){_dbcg ._badfb =_dbcg ._acgfc ;_dbcg ._ccbbdb =_fc .NewWriter (_dbdfd );};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_fdd :=NewPdfAction ();_cce :=&PdfActionResetForm {};_cce .PdfAction =_fdd ;_fdd .SetContext (_cce );return _cce ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_ddea *VRI )ToPdfObject ()*_daa .PdfObjectDictionary {_aggdb :=_daa .MakeDict ();_aggdb .SetIfNotNil (_daa .PdfObjectName ("\u0043\u0065\u0072\u0074"),_bdacf (_ddea .Cert ));_aggdb .SetIfNotNil (_daa .PdfObjectName ("\u004f\u0043\u0053\u0050"),_bdacf (_ddea .OCSP ));
_aggdb .SetIfNotNil (_daa .PdfObjectName ("\u0043\u0052\u004c"),_bdacf (_ddea .CRL ));_aggdb .SetIfNotNil ("\u0054\u0055",_ddea .TU );_aggdb .SetIfNotNil ("\u0054\u0053",_ddea .TS );return _aggdb ;};func (_dgadc *DSS )addCerts (_efagb [][]byte )([]*_daa .PdfObjectStream ,error ){return _dgadc .add (&_dgadc .Certs ,_dgadc ._fdga ,_efagb );
};

// ToPdfObject converts rectangle to a PDF object.
func (_ggcbg *PdfRectangle )ToPdfObject ()_daa .PdfObject {return _daa .MakeArray (_daa .MakeFloat (_ggcbg .Llx ),_daa .MakeFloat (_ggcbg .Lly ),_daa .MakeFloat (_ggcbg .Urx ),_daa .MakeFloat (_ggcbg .Ury ));};func (_ddbgf *XObjectImage )getParamsDict ()*_daa .PdfObjectDictionary {_cbdgd :=_daa .MakeDict ();
_cbdgd .Set ("\u0057\u0069\u0064t\u0068",_daa .MakeInteger (*_ddbgf .Width ));_cbdgd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_daa .MakeInteger (*_ddbgf .Height ));_cbdgd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_daa .MakeInteger (int64 (_ddbgf .ColorSpace .GetNumComponents ())));
_cbdgd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_daa .MakeInteger (*_ddbgf .BitsPerComponent ));return _cbdgd ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _daa .PdfObject ;AN _daa .PdfObject ;OP _daa .PdfObject ;JS _daa .PdfObject ;};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_caefb *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _ff .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_caefb .S =subtype ;return nil ;};func (_fgcb *PdfReader )buildNameNodes (_ggec *_daa .PdfIndirectObject ,_ggdf map[_daa .PdfObject ]struct{})error {if _ggec ==nil {return nil ;};if _ ,_agcae :=_ggdf [_ggec ];_agcae {_ae .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_ggec .ObjectNumber );
return nil ;};_ggdf [_ggec ]=struct{}{};_dccgb ,_bdabcb :=_ggec .PdfObject .(*_daa .PdfObjectDictionary );if !_bdabcb {return _ff .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _gdgfg ,_aegb :=_daa .GetDict (_dccgb .Get ("\u0044\u0065\u0073t\u0073"));
_aegb {_abgdge ,_dbdedd :=_daa .GetArray (_gdgfg .Get ("\u004b\u0069\u0064\u0073"));if !_dbdedd {return _ff .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_ae .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_abgdge );
for _dfdc ,_afgee :=range _abgdge .Elements (){_bdga ,_faceb :=_daa .GetIndirect (_afgee );if !_faceb {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_bdga );
return _ff .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_abgdge .Set (_dfdc ,_bdga );_cbagf :=_fgcb .buildNameNodes (_bdga ,_ggdf );if _cbagf !=nil {return _cbagf ;};
};};if _cgbfe ,_cgdc :=_daa .GetDict (_dccgb );_cgdc {if !_daa .IsNullObject (_cgbfe .Get ("\u004b\u0069\u0064\u0073")){if _ageb ,_bdcae :=_daa .GetArray (_cgbfe .Get ("\u004b\u0069\u0064\u0073"));_bdcae {for _bcge ,_degfc :=range _ageb .Elements (){if _ebbd ,_dabfg :=_daa .GetIndirect (_degfc );
_dabfg {_ageb .Set (_bcge ,_ebbd );_ccfab :=_fgcb .buildNameNodes (_ebbd ,_ggdf );if _ccfab !=nil {return _ccfab ;};};};};};};return nil ;};

// GetCerts returns the signature certificate chain.
func (_bbad *PdfSignature )GetCerts ()([]*_e .Certificate ,error ){var _edeec []func ()([]*_e .Certificate ,error );switch _bgedb ,_ :=_daa .GetNameVal (_bbad .SubFilter );_bgedb {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_edeec =append (_edeec ,_bbad .extractChainFromPKCS7 ,_bbad .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_edeec =append (_edeec ,_bbad .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_edeec =append (_edeec ,_bbad .extractChainFromPKCS7 );
default:return nil ,_c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_bgedb );};for _ ,_deda :=range _edeec {_agae ,_fcdfd :=_deda ();if _fcdfd !=nil {return nil ,_fcdfd ;
};if len (_agae )> 0{return _agae ,nil ;};};return nil ,ErrSignNoCertificates ;};func _eccd (_fbfab _daa .PdfObject )(*PdfFunctionType2 ,error ){_abdc :=&PdfFunctionType2 {};var _deff *_daa .PdfObjectDictionary ;if _dbag ,_adeab :=_fbfab .(*_daa .PdfIndirectObject );
_adeab {_fcdbe ,_abbcd :=_dbag .PdfObject .(*_daa .PdfObjectDictionary );if !_abbcd {return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_abdc ._accb =_dbag ;_deff =_fcdbe ;}else if _eage ,_bcbe :=_fbfab .(*_daa .PdfObjectDictionary );
_bcbe {_deff =_eage ;}else {return nil ,_ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ae .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_deff .String ());_daaag ,_eccca :=_daa .TraceToDirectObject (_deff .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_daa .PdfObjectArray );
if !_eccca {_ae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ff .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _daaag .Len ()< 0||_daaag .Len ()%2!=0{_ae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_ebefe ,_ddccc :=_daaag .ToFloat64Array ();if _ddccc !=nil {return nil ,_ddccc ;};_abdc .Domain =_ebefe ;_daaag ,_eccca =_daa .TraceToDirectObject (_deff .Get ("\u0052\u0061\u006eg\u0065")).(*_daa .PdfObjectArray );if _eccca {if _daaag .Len ()< 0||_daaag .Len ()%2!=0{return nil ,_ff .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gceg ,_bgdea :=_daaag .ToFloat64Array ();if _bgdea !=nil {return nil ,_bgdea ;};_abdc .Range =_gceg ;};_daaag ,_eccca =_daa .TraceToDirectObject (_deff .Get ("\u0043\u0030")).(*_daa .PdfObjectArray );if _eccca {_dgbec ,_babac :=_daaag .ToFloat64Array ();
if _babac !=nil {return nil ,_babac ;};_abdc .C0 =_dgbec ;};_daaag ,_eccca =_daa .TraceToDirectObject (_deff .Get ("\u0043\u0031")).(*_daa .PdfObjectArray );if _eccca {_adefd ,_dfccec :=_daaag .ToFloat64Array ();if _dfccec !=nil {return nil ,_dfccec ;};
_abdc .C1 =_adefd ;};if len (_abdc .C0 )!=len (_abdc .C1 ){_ae .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_daa .ErrRangeError ;};N ,_ddccc :=_daa .GetNumberAsFloat (_daa .TraceToDirectObject (_deff .Get ("\u004e")));
if _ddccc !=nil {_ae .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_deff .String ());return nil ,_ddccc ;};_abdc .N =N ;
return _abdc ,nil ;};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_eabad *_cbe .Document )error ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_bbgc *PdfFieldButton )ToPdfObject ()_daa .PdfObject {_bbgc .PdfField .ToPdfObject ();_befca :=_bbgc ._caaee ;_fccfb :=_befca .PdfObject .(*_daa .PdfObjectDictionary );_fccfb .Set ("\u0046\u0054",_daa .MakeName ("\u0042\u0074\u006e"));if _bbgc .Opt !=nil {_fccfb .Set ("\u004f\u0070\u0074",_bbgc .Opt );
};return _befca ;};func (_fcfgf *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _ffcg :=_fcfgf ._eccc ;_ffcg !=nil {return _ffcg ;};return _fcfgf ._eadg ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_daa .PdfObjectStream )(*XObjectForm ,error ){_eacfb :=&XObjectForm {};_eacfb ._ebedbd =stream ;_egcb :=*(stream .PdfObjectDictionary );_fbfda ,_bdaaf :=_daa .NewEncoderFromStream (stream );if _bdaaf !=nil {return nil ,_bdaaf ;
};_eacfb .Filter =_fbfda ;if _dgagfe :=_egcb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dgagfe !=nil {_fdbbd ,_ebdda :=_dgagfe .(*_daa .PdfObjectName );if !_ebdda {return nil ,_ff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_fdbbd !="\u0046\u006f\u0072\u006d"{_ae .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ff .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _fbcgfc :=_egcb .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_fbcgfc !=nil {_eacfb .FormType =_fbcgfc ;};if _bacgb :=_egcb .Get ("\u0042\u0042\u006f\u0078");_bacgb !=nil {_eacfb .BBox =_bacgb ;};if _begaa :=_egcb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_begaa !=nil {_eacfb .Matrix =_begaa ;};if _ecfba :=_egcb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ecfba !=nil {_ecfba =_daa .TraceToDirectObject (_ecfba );_abde ,_fbffa :=_ecfba .(*_daa .PdfObjectDictionary );if !_fbffa {_ae .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_daa .ErrTypeError ;};_dcdgf ,_bgdgb :=NewPdfPageResourcesFromDict (_abde );if _bgdgb !=nil {_ae .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_bgdgb ;};_eacfb .Resources =_dcdgf ;_ae .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_eacfb .Resources );};_eacfb .Group =_egcb .Get ("\u0047\u0072\u006fu\u0070");_eacfb .Ref =_egcb .Get ("\u0052\u0065\u0066");
_eacfb .MetaData =_egcb .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_eacfb .PieceInfo =_egcb .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_eacfb .LastModified =_egcb .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_eacfb .StructParent =_egcb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_eacfb .StructParents =_egcb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_eacfb .OPI =_egcb .Get ("\u004f\u0050\u0049");
_eacfb .OC =_egcb .Get ("\u004f\u0043");_eacfb .Name =_egcb .Get ("\u004e\u0061\u006d\u0065");_eacfb .Stream =stream .Stream ;return _eacfb ,nil ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;
PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_bdab *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_bdab .updateObjectsDeep (dss .ToPdfObject (),nil );};_bdab ._cfbe =dss ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_ggaff *PdfReader )GetOCProperties ()(_daa .PdfObject ,error ){_cbcce :=_ggaff ._cgace ;_cbdad :=_cbcce .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_cbdad =_daa .ResolveReference (_cbdad );if !_ggaff ._gagec {_dgdfb :=_ggaff .traverseObjectData (_cbdad );
if _dgdfb !=nil {return nil ,_dgdfb ;};};return _cbdad ,nil ;};

// Height returns the height of `rect`.
func (_cbabba *PdfRectangle )Height ()float64 {return _ce .Abs (_cbabba .Ury -_cbabba .Lly )};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_cedd :=&PdfSignature {Type :_daa .MakeName ("\u0053\u0069\u0067"),Handler :handler };_gceece :=&pdfSignDictionary {PdfObjectDictionary :_daa .MakeDict (),_ebebc :&handler ,_ebeaa :_cedd };
_cedd ._cebcc =_daa .MakeIndirectObject (_gceece );return _cedd ;};

// Encoder returns the font's text encoder.
func (_fcdfg pdfFontType3 )Encoder ()_df .TextEncoder {return _fcdfg ._bcgac };

// Items returns all children outline items.
func (_fcbgd *Outline )Items ()[]*OutlineItem {return _fcbgd .Entries };

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _daa .PdfObject ;RichMediaContent _daa .PdfObject ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_gcca *OutlineItem )Insert (index uint ,item *OutlineItem ){_agcdg :=uint (len (_gcca .Entries ));if index > _agcdg {index =_agcdg ;};_gcca .Entries =append (_gcca .Entries [:index ],append ([]*OutlineItem {item },_gcca .Entries [index :]...)...);
};func (_gfda *pdfFontType0 )bytesToCharcodes (_agdc []byte )([]_df .CharCode ,bool ){if _gfda ._faca ==nil {return nil ,false ;};_dcfbc ,_abdaf :=_gfda ._faca .BytesToCharcodes (_agdc );if !_abdaf {return nil ,false ;};_bbea :=make ([]_df .CharCode ,len (_dcfbc ));
for _daefg ,_fafb :=range _dcfbc {_bbea [_daefg ]=_df .CharCode (_fafb );};return _bbea ,true ;};func (_fda *PdfReader )newPdfAnnotationMovieFromDict (_bdd *_daa .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_aeee :=PdfAnnotationMovie {};_aeee .T =_bdd .Get ("\u0054");
_aeee .Movie =_bdd .Get ("\u004d\u006f\u0076i\u0065");_aeee .A =_bdd .Get ("\u0041");return &_aeee ,nil ;};

// SetAnnotations sets the annotations list.
func (_gfgda *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_gfgda ._febda =annotations };func _bcec (_aecf _daa .PdfObject )(PdfFunction ,error ){_aecf =_daa .ResolveReference (_aecf );if _bdbcb ,_ecff :=_aecf .(*_daa .PdfObjectStream );_ecff {_fbgc :=_bdbcb .PdfObjectDictionary ;
_bbcb ,_ccdfd :=_fbgc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_daa .PdfObjectInteger );if !_ccdfd {_ae .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bbcb ==0{return _faef (_bdbcb );}else if *_bbcb ==4{return _fdfa (_bdbcb );
}else {return nil ,_ff .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _dacag ,_aaeaf :=_aecf .(*_daa .PdfIndirectObject );_aaeaf {_fcceb ,_gadeb :=_dacag .PdfObject .(*_daa .PdfObjectDictionary );
if !_gadeb {_ae .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_beae ,_gadeb :=_fcceb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_daa .PdfObjectInteger );
if !_gadeb {_ae .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_beae ==2{return _eccd (_dacag );}else if *_beae ==3{return _dgcae (_dacag );}else {return nil ,_ff .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _cefa ,_fedd :=_aecf .(*_daa .PdfObjectDictionary );
_fedd {_bbbbd ,_gdee :=_cefa .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_daa .PdfObjectInteger );if !_gdee {_ae .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ff .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bbbbd ==2{return _eccd (_cefa );}else if *_bbbbd ==3{return _dgcae (_cefa );
}else {return nil ,_ff .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_ae .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_aecf );
return nil ,_ff .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_fgea *XObjectForm )SetContentStream (content []byte ,encoder _daa .StreamEncoder )error {_dfga :=content ;if encoder ==nil {if _fgea .Filter !=nil {encoder =_fgea .Filter ;}else {encoder =_daa .NewRawEncoder ();};};_agdac ,_dgcf :=encoder .EncodeBytes (_dfga );
if _dgcf !=nil {return _dgcf ;};_dfga =_agdac ;_fgea .Stream =_dfga ;_fgea .Filter =encoder ;return nil ;};func _cbdag (_adbdf *_daa .PdfObjectDictionary ,_abbfg *fontCommon )(*pdfCIDFontType2 ,error ){if _abbfg ._fbafe !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_abbfg );
return nil ,_daa .ErrRangeError ;};_gdeb :=_bdgdf (_abbfg );_fddb ,_efcf :=_daa .GetDict (_adbdf .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_efcf {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_abbfg );
return nil ,ErrRequiredAttributeMissing ;};_gdeb .CIDSystemInfo =_fddb ;_gdeb .DW =_adbdf .Get ("\u0044\u0057");_gdeb .W =_adbdf .Get ("\u0057");_gdeb .DW2 =_adbdf .Get ("\u0044\u0057\u0032");_gdeb .W2 =_adbdf .Get ("\u0057\u0032");_gdeb .CIDToGIDMap =_adbdf .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_gdeb ._gggg =1000.0;if _cbbd ,_fcebg :=_daa .GetNumberAsFloat (_gdeb .DW );_fcebg ==nil {_gdeb ._gggg =_cbbd ;};_dgddb ,_fcbba :=_ffafa (_gdeb .W );if _fcbba !=nil {return nil ,_fcbba ;};if _dgddb ==nil {_dgddb =map[_df .CharCode ]float64 {};};_gdeb ._gfagb =_dgddb ;
return _gdeb ,nil ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _daa .PdfObject ;BS _daa .PdfObject ;};

// GetContentStream returns the pattern cell's content stream
func (_affge *PdfTilingPattern )GetContentStream ()([]byte ,error ){_cdcb ,_ ,_eefed :=_affge .GetContentStreamWithEncoder ();return _cdcb ,_eefed ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _daa .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _cgfg *_daa .PdfIndirectObject ;var _afcc *_daa .PdfObjectName ;var _cgecc *_daa .PdfObjectArray ;if _aace ,_eaba :=obj .(*_daa .PdfIndirectObject );
_eaba {_cgfg =_aace ;};obj =_daa .TraceToDirectObject (obj );switch _gggf :=obj .(type ){case *_daa .PdfObjectArray :_cgecc =_gggf ;case *_daa .PdfObjectName :_afcc =_gggf ;};if _afcc !=nil {switch *_afcc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_ae .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_afcc );return nil ,_abbc ;};};if _cgecc !=nil &&_cgecc .Len ()> 0{var _eed _daa .PdfObject =_cgfg ;
if _cgfg ==nil {_eed =_cgecc ;};if _gceb ,_eefcb :=_daa .GetName (_cgecc .Get (0));_eefcb {switch _gceb .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _cgecc .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _cgecc .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _cgecc .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _eafbf (_eed );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _dcbb (_eed );
case "\u004c\u0061\u0062":return _bded (_eed );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _aeaa (_eed );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _abgdg (_eed );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _abffa (_eed );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _feabb (_eed );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _fcef (_eed );default:_ae .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_gceb );
};};};_ae .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// ToPdfObject implements interface PdfModel.
func (_bec *PdfAnnotationPrinterMark )ToPdfObject ()_daa .PdfObject {_bec .PdfAnnotation .ToPdfObject ();_ffgc :=_bec ._gbf ;_gace :=_ffgc .PdfObject .(*_daa .PdfObjectDictionary );_gace .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_gace .SetIfNotNil ("\u004d\u004e",_bec .MN );return _ffgc ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_gfc PdfModel ;Type _daa .PdfObject ;S _daa .PdfObject ;Next _daa .PdfObject ;_ad *_daa .PdfIndirectObject ;};func (_affdf *pdfFontType3 )baseFields ()*fontCommon {return &_affdf .fontCommon };

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_gdcce *XObjectForm )GetContainingPdfObject ()_daa .PdfObject {return _gdcce ._ebedbd };

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_egcfba *XObjectImage )SetFilter (encoder _daa .StreamEncoder )error {_gfgc :=_egcfba .Stream ;_cgfe ,_fddga :=_egcfba .Filter .DecodeBytes (_gfgc );if _fddga !=nil {return _fddga ;};_egcfba .Filter =encoder ;encoder .UpdateParams (_egcfba .getParamsDict ());
_gfgc ,_fddga =encoder .EncodeBytes (_cgfe );if _fddga !=nil {return _fddga ;};_egcfba .Stream =_gfgc ;return nil ;};func (_cgfbg *PdfReader )flattenFieldsWithOpts (_eegag bool ,_gcbbe FieldAppearanceGenerator ,_edfdf *FieldFlattenOpts )error {if _edfdf ==nil {_edfdf =&FieldFlattenOpts {};
};var _agcfc bool ;_fede :=map[*PdfAnnotation ]bool {};{var _efdc []*PdfField ;_dcfb :=_cgfbg .AcroForm ;if _dcfb !=nil {if _edfdf .FilterFunc !=nil {_efdc =_dcfb .filteredFields (_edfdf .FilterFunc ,true );_agcfc =_dcfb .Fields !=nil &&len (*_dcfb .Fields )> 0;
}else {_efdc =_dcfb .AllFields ();};};for _ ,_baaf :=range _efdc {for _ ,_baega :=range _baaf .Annotations {_fede [_baega .PdfAnnotation ]=_baaf .V !=nil ;if _gcbbe !=nil {_bfga ,_acab :=_gcbbe .GenerateAppearanceDict (_dcfb ,_baaf ,_baega );if _acab !=nil {return _acab ;
};_baega .AP =_bfga ;};};};};if _eegag {for _ ,_ebfca :=range _cgfbg .PageList {_bbed ,_abea :=_ebfca .GetAnnotations ();if _abea !=nil {return _abea ;};for _ ,_gegg :=range _bbed {_fede [_gegg ]=true ;};};};for _ ,_aaad :=range _cgfbg .PageList {var _fdff []*PdfAnnotation ;
if _gcbbe !=nil {if _dfdg :=_gcbbe .WrapContentStream (_aaad );_dfdg !=nil {return _dfdg ;};};_adedg ,_caefef :=_aaad .GetAnnotations ();if _caefef !=nil {return _caefef ;};for _ ,_aeacb :=range _adedg {_dfgdd ,_addb :=_fede [_aeacb ];if !_addb &&_edfdf .AnnotFilterFunc !=nil {if _ ,_fddd :=_aeacb .GetContext ().(*PdfAnnotationWidget );
!_fddd {_addb =_edfdf .AnnotFilterFunc (_aeacb );};};if !_addb {_fdff =append (_fdff ,_aeacb );continue ;};switch _aeacb .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_dfcb ,_eaaeg ,_cagbf :=_bgbb (_aeacb );if _cagbf !=nil {if !_dfgdd {_ae .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_cagbf );
continue ;};if _dfcb ==nil {continue ;};_bfbgg :=_aaad .Resources .GenerateXObjectName ();_aaad .Resources .SetXObjectFormByName (_bfbgg ,_dfcb );_fbabe ,_cagbf :=_bcgb (_dfcb );if _cagbf !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_cagbf );
}else {_accfa :=_bg .IdentityMatrix ();_accfa =_accfa .Translate (-_fbabe .Llx ,-_fbabe .Lly );_egfdb :=0.0;if _fbabe .Width ()> 0{_egfdb =_eaaeg .Width ()/_fbabe .Width ();};_baagg :=0.0;if _fbabe .Height ()> 0{_baagg =_eaaeg .Height ()/_fbabe .Height ();
};_accfa =_accfa .Scale (_egfdb ,_baagg );_eaaeg .Transform (_accfa );};_bbbf :=_ce .Min (_eaaeg .Llx ,_eaaeg .Urx );_bgga :=_ce .Min (_eaaeg .Lly ,_eaaeg .Ury );var _ccbace []string ;_ccbace =append (_ccbace ,"\u0071");_ccbace =append (_ccbace ,_c .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_bbbf ,_bgga ));
_ccbace =append (_ccbace ,_c .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_bfbgg .String ()));_ccbace =append (_ccbace ,"\u0051");_egcfa :=_db .Join (_ccbace ,"\u000a");_cagbf =_aaad .AppendContentStream (_egcfa );if _cagbf !=nil {return _cagbf ;};
if _dfcb .Resources !=nil {_eeegef ,_cgee :=_daa .GetDict (_dfcb .Resources .Font );if _cgee {for _ ,_cgce :=range _eeegef .Keys (){if !_aaad .Resources .HasFontByName (_cgce ){_aaad .Resources .SetFontByName (_cgce ,_eeegef .Get (_cgce ));};};};};};if len (_fdff )> 0{_aaad ._febda =_fdff ;
}else {_aaad ._febda =[]*PdfAnnotation {};};};if !_agcfc {_cgfbg .AcroForm =nil ;};return nil ;};

// AddFont adds a font dictionary to the Font resources.
func (_bacb *PdfPage )AddFont (name _daa .PdfObjectName ,font _daa .PdfObject )error {if _bacb .Resources ==nil {_bacb .Resources =NewPdfPageResources ();};if _bacb .Resources .Font ==nil {_bacb .Resources .Font =_daa .MakeDict ();};_eebebd ,_adceb :=_daa .TraceToDirectObject (_bacb .Resources .Font ).(*_daa .PdfObjectDictionary );
if !_adceb {_ae .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_daa .TraceToDirectObject (_bacb .Resources .Font ));
return _ff .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eebebd .Set (name ,font );return nil ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_dfeea :=&PdfShadingPatternType2 {};_dfeea .Matrix =_daa .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_dfeea .PdfPattern =&PdfPattern {};_dfeea .PdfPattern .PatternType =int64 (*_daa .MakeInteger (2));
_dfeea .PdfPattern ._bcdee =_dfeea ;_dfeea .PdfPattern ._degd =_daa .MakeIndirectObject (_daa .MakeDict ());return _dfeea ;};func (_cfaea *PdfShading )getShadingDict ()(*_daa .PdfObjectDictionary ,error ){_ggdde :=_cfaea ._facgg ;if _gfded ,_edbdf :=_ggdde .(*_daa .PdfIndirectObject );
_edbdf {_aafbd ,_dgead :=_gfded .PdfObject .(*_daa .PdfObjectDictionary );if !_dgead {return nil ,_daa .ErrTypeError ;};return _aafbd ,nil ;}else if _gfcdg ,_adacc :=_ggdde .(*_daa .PdfObjectStream );_adacc {return _gfcdg .PdfObjectDictionary ,nil ;}else if _beaac ,_baade :=_ggdde .(*_daa .PdfObjectDictionary );
_baade {return _beaac ,nil ;}else {_ae .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_daa .ErrTypeError ;
};};

// GetBorderWidth returns the border style's width.
func (_gecb *PdfBorderStyle )GetBorderWidth ()float64 {if _gecb .W ==nil {return 1;};return *_gecb .W ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ddab pdfFontType3 )GetCharMetrics (code _df .CharCode )(_ec .CharMetrics ,bool ){if _bdca ,_ddece :=_ddab ._cbbg [code ];_ddece {return _ec .CharMetrics {Wx :_bdca },true ;};if _ec .IsStdFont (_ec .StdFontName (_ddab ._agfd )){return _ec .CharMetrics {Wx :250},true ;
};return _ec .CharMetrics {},false ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_daadg *PdfShadingType4 )ToPdfObject ()_daa .PdfObject {_daadg .PdfShading .ToPdfObject ();_ffcdg ,_fdgbe :=_daadg .getShadingDict ();if _fdgbe !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _daadg .BitsPerCoordinate !=nil {_ffcdg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_daadg .BitsPerCoordinate );};if _daadg .BitsPerComponent !=nil {_ffcdg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_daadg .BitsPerComponent );
};if _daadg .BitsPerFlag !=nil {_ffcdg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_daadg .BitsPerFlag );};if _daadg .Decode !=nil {_ffcdg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_daadg .Decode );};if _daadg .Function !=nil {if len (_daadg .Function )==1{_ffcdg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_daadg .Function [0].ToPdfObject ());
}else {_ffgd :=_daa .MakeArray ();for _ ,_eedcb :=range _daadg .Function {_ffgd .Append (_eedcb .ToPdfObject ());};_ffcdg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffgd );};};return _daadg ._facgg ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_ddcea *Image )Resample (targetBitsPerComponent int64 ){if _ddcea .BitsPerComponent ==targetBitsPerComponent {return ;};_afaea :=_ddcea .GetSamples ();if targetBitsPerComponent < _ddcea .BitsPerComponent {_ddgbc :=_ddcea .BitsPerComponent -targetBitsPerComponent ;
for _bccddc :=range _afaea {_afaea [_bccddc ]>>=uint (_ddgbc );};}else if targetBitsPerComponent > _ddcea .BitsPerComponent {_bcefb :=targetBitsPerComponent -_ddcea .BitsPerComponent ;for _cfeda :=range _afaea {_afaea [_cfeda ]<<=uint (_bcefb );};};_ddcea .BitsPerComponent =targetBitsPerComponent ;
if _ddcea .BitsPerComponent < 8{_ddcea .resampleLowBits (_afaea );return ;};_ffef :=_ac .BytesPerLine (int (_ddcea .Width ),int (_ddcea .BitsPerComponent ),_ddcea .ColorComponents );_fceg :=make ([]byte ,_ffef *int (_ddcea .Height ));var (_ddfg ,_beeb ,_bgbdf ,_gfcbb int ;
_gcdec uint32 ;);for _bgbdf =0;_bgbdf < int (_ddcea .Height );_bgbdf ++{_ddfg =_bgbdf *_ffef ;_beeb =(_bgbdf +1)*_ffef -1;_gfgag :=_gf .ResampleUint32 (_afaea [_ddfg :_beeb ],int (targetBitsPerComponent ),8);for _gfcbb ,_gcdec =range _gfgag {_fceg [_gfcbb +_ddfg ]=byte (_gcdec );
};};_ddcea .Data =_fceg ;};

// SetVersion sets the PDF version of the output file.
func (_geecc *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_geecc ._abfcb .Major =majorVersion ;_geecc ._abfcb .Minor =minorVersion ;};

// Encoder returns the font's text encoder.
func (_dfaf *PdfFont )Encoder ()_df .TextEncoder {_fdge :=_dfaf .actualFont ();if _fdge ==nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_dfaf ._gbbee );
return nil ;};return _fdge .Encoder ();};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_bccdb *PdfFont )ToUnicode ()string {if _bccdb .baseFields ()._efedc ==nil {return "";};return _bccdb .baseFields ()._efedc .Name ();};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_afcce *PdfField )GetContext ()PdfModel {return _afcce ._afaec };

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_ecfbf *pdfCIDFontType0 )ToPdfObject ()_daa .PdfObject {return _daa .MakeNull ()};func (_dbfbc fontCommon )asPdfObjectDictionary (_cbgg string )*_daa .PdfObjectDictionary {if _cbgg !=""&&_dbfbc ._fbafe !=""&&_cbgg !=_dbfbc ._fbafe {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_cbgg ,_dbfbc );
}else if _cbgg ==""&&_dbfbc ._fbafe ==""{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dbfbc );
}else if _dbfbc ._fbafe ==""{_dbfbc ._fbafe =_cbgg ;};_fdeg :=_daa .MakeDict ();_fdeg .Set ("\u0054\u0079\u0070\u0065",_daa .MakeName ("\u0046\u006f\u006e\u0074"));_fdeg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_daa .MakeName (_dbfbc ._agfd ));
_fdeg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_daa .MakeName (_dbfbc ._fbafe ));if _dbfbc ._eccc !=nil {_fdeg .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_dbfbc ._eccc .ToPdfObject ());};if _dbfbc ._fbeba !=nil {_fdeg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_dbfbc ._fbeba );
}else if _dbfbc ._efedc !=nil {_befa ,_bgdfb :=_dbfbc ._efedc .Stream ();if _bgdfb !=nil {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_bgdfb );
}else {_fdeg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_befa );};};return _fdeg ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_ceef *PdfWriter )SetOptimizer (optimizer Optimizer ){_ceef ._dfffab =optimizer };

// AllFields returns a flattened list of all fields in the form.
func (_bfece *PdfAcroForm )AllFields ()[]*PdfField {if _bfece ==nil {return nil ;};var _gbdc []*PdfField ;if _bfece .Fields !=nil {for _ ,_bgag :=range *_bfece .Fields {_gbdc =append (_gbdc ,_caaeed (_bgag )...);};};return _gbdc ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_geggg *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_geggg .ToPdfOutline ().PdfOutlineTreeNode ;};func (_abff *PdfAppender )replaceObject (_edbd ,_gfg _daa .PdfObject ){switch _bgfb :=_edbd .(type ){case *_daa .PdfIndirectObject :_abff ._fedb [_gfg ]=_bgfb .ObjectNumber ;
case *_daa .PdfObjectStream :_abff ._fedb [_gfg ]=_bgfb .ObjectNumber ;};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_bdae *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ff .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbgd :=vals [0];if _dbgd < 0.0||_dbgd > 1.0{_ae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dbgd );
return nil ,ErrColorOutOfRange ;};_bgfdb :=vals [1];if _bgfdb < 0.0||_bgfdb > 1.0{_ae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dbgd );return nil ,ErrColorOutOfRange ;
};_cgbd :=vals [2];if _cgbd < 0.0||_cgbd > 1.0{_ae .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dbgd );return nil ,ErrColorOutOfRange ;};_abbf :=NewPdfColorDeviceRGB (_dbgd ,_bgfdb ,_cgbd );
return _abbf ,nil ;};

// ToInteger convert to an integer format.
func (_eddgg *PdfColorDeviceGray )ToInteger (bits int )uint32 {_abac :=_ce .Pow (2,float64 (bits ))-1;return uint32 (_abac *_eddgg .Val ());};func _bcbdg (_cbdgb StdFontName )(pdfFontSimple ,error ){_aaaac ,_eggfd :=_ec .NewStdFontByName (_cbdgb );if !_eggfd {return pdfFontSimple {},ErrFontNotSupported ;
};_cadf :=_cafb (_aaaac );return _cadf ,nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_daegf []byte )(_eebeg int ,_eccbg error );};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_gecgb PdfOutputIntentType )String ()string {switch _gecgb {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};