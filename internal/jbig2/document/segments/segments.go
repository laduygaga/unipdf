//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_c "encoding/binary";_cg "errors";_b "fmt";_eb "github.com/laduygaga/unipdf/v3/common";_bc "github.com/laduygaga/unipdf/v3/internal/bitwise";_gc "github.com/laduygaga/unipdf/v3/internal/jbig2/basic";_fd "github.com/laduygaga/unipdf/v3/internal/jbig2/bitmap";
_af "github.com/laduygaga/unipdf/v3/internal/jbig2/decoder/arithmetic";_gd "github.com/laduygaga/unipdf/v3/internal/jbig2/decoder/huffman";_fe "github.com/laduygaga/unipdf/v3/internal/jbig2/decoder/mmr";_bd "github.com/laduygaga/unipdf/v3/internal/jbig2/encoder/arithmetic";
_aaa "github.com/laduygaga/unipdf/v3/internal/jbig2/errors";_e "github.com/laduygaga/unipdf/v3/internal/jbig2/internal";_gb "golang.org/x/xerrors";_d "image";_a "io";_f "math";_aa "strings";_ad "time";);func (_afaa *GenericRegion )writeGBAtPixels (_gfcb _bc .BinaryWriter )(_dgg int ,_gde error ){const _gae ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _afaa .UseMMR {return 0,nil ;};_gfa :=1;if _afaa .GBTemplate ==0{_gfa =4;}else if _afaa .UseExtTemplates {_gfa =12;};if len (_afaa .GBAtX )!=_gfa {return 0,_aaa .Errorf (_gae ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_afaa .GBAtY )!=_gfa {return 0,_aaa .Errorf (_gae ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _ffde :=0;_ffde < _gfa ;_ffde ++{if _gde =_gfcb .WriteByte (byte (_afaa .GBAtX [_ffde ]));_gde !=nil {return _dgg ,_aaa .Wrap (_gde ,_gae ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_dgg ++;if _gde =_gfcb .WriteByte (byte (_afaa .GBAtY [_ffde ]));
_gde !=nil {return _dgg ,_aaa .Wrap (_gde ,_gae ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_dgg ++;};return _dgg ,nil ;};func (_degc *HalftoneRegion )computeX (_efgb ,_aaadg int )int {return _degc .shiftAndFill (int (_degc .HGridX )+_efgb *int (_degc .HRegionY )+_aaadg *int (_degc .HRegionX ));
};func (_ggcf *TableSegment )HtRS ()int32 {return _ggcf ._ggfgf };func (_gbcc *PatternDictionary )extractPatterns (_fbca *_fd .Bitmap )error {var _gcgaf int ;_deb :=make ([]*_fd .Bitmap ,_gbcc .GrayMax +1);for _gcgaf <=int (_gbcc .GrayMax ){_bbc :=int (_gbcc .HdpWidth )*_gcgaf ;
_agbc :=_d .Rect (_bbc ,0,_bbc +int (_gbcc .HdpWidth ),int (_gbcc .HdpHeight ));_adeb ,_dbfc :=_fd .Extract (_agbc ,_fbca );if _dbfc !=nil {return _dbfc ;};_deb [_gcgaf ]=_adeb ;_gcgaf ++;};_gbcc .Patterns =_deb ;return nil ;};func (_cf *GenericRefinementRegion )decodeSLTP ()(int ,error ){_cf .Template .setIndex (_cf ._cb );
return _cf ._ce .DecodeBit (_cf ._cb );};func (_adgf *PageInformationSegment )readContainsRefinement ()error {_dceb ,_bcdda :=_adgf ._ccfae .ReadBit ();if _bcdda !=nil {return _bcdda ;};if _dceb ==1{_adgf ._ecfg =true ;};return nil ;};func (_cdfb *Header )readSegmentDataLength (_dgfe *_bc .Reader )(_ggge error ){_cdfb .SegmentDataLength ,_ggge =_dgfe .ReadBits (32);
if _ggge !=nil {return _ggge ;};_cdfb .SegmentDataLength &=_f .MaxInt32 ;return nil ;};func (_ea *EndOfStripe )Init (h *Header ,r *_bc .Reader )error {_ea ._gf =r ;return _ea .parseHeader ()};func (_cfgf *TextRegion )decodeRdw ()(int64 ,error ){const _cdfa ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _cfgf .IsHuffmanEncoded {if _cfgf .SbHuffRDWidth ==3{if _cfgf ._cggd ==nil {var (_cadeb int ;_gacf error ;);if _cfgf .SbHuffFS ==3{_cadeb ++;};if _cfgf .SbHuffDS ==3{_cadeb ++;};if _cfgf .SbHuffDT ==3{_cadeb ++;};_cfgf ._cggd ,_gacf =_cfgf .getUserTable (_cadeb );
if _gacf !=nil {return 0,_aaa .Wrap (_gacf ,_cdfa ,"");};};return _cfgf ._cggd .Decode (_cfgf ._afad );};_fbe ,_bgfc :=_gd .GetStandardTable (14+int (_cfgf .SbHuffRDWidth ));if _bgfc !=nil {return 0,_aaa .Wrap (_bgfc ,_cdfa ,"");};return _fbe .Decode (_cfgf ._afad );
};_cgcd ,_ddcc :=_cfgf ._aaac .DecodeInt (_cfgf ._gedc );if _ddcc !=nil {return 0,_aaa .Wrap (_ddcc ,_cdfa ,"");};return int64 (_cgcd ),nil ;};func (_ebcd *Header )readNumberOfReferredToSegments (_dafb *_bc .Reader )(uint64 ,error ){const _egaf ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_eece ,_fdege :=_dafb .ReadBits (3);if _fdege !=nil {return 0,_aaa .Wrap (_fdege ,_egaf ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_eece &=0xf;var _bgdf []byte ;if _eece <=4{_bgdf =make ([]byte ,5);for _abdg :=0;_abdg <=4;
_abdg ++{_eafg ,_egdg :=_dafb .ReadBit ();if _egdg !=nil {return 0,_aaa .Wrap (_egdg ,_egaf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bgdf [_abdg ]=byte (_eafg );};}else {_eece ,_fdege =_dafb .ReadBits (29);if _fdege !=nil {return 0,_fdege ;
};_eece &=_f .MaxInt32 ;_eea :=(_eece +8)>>3;_eea <<=3;_bgdf =make ([]byte ,_eea );var _aag uint64 ;for _aag =0;_aag < _eea ;_aag ++{_ddbb ,_egae :=_dafb .ReadBit ();if _egae !=nil {return 0,_aaa .Wrap (_egae ,_egaf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_bgdf [_aag ]=byte (_ddbb );};};return _eece ,nil ;};func (_fadeb *HalftoneRegion )renderPattern (_gaf [][]int )(_deag error ){var _gdg ,_dadb int ;for _bbac :=0;_bbac < int (_fadeb .HGridHeight );_bbac ++{for _dbac :=0;_dbac < int (_fadeb .HGridWidth );
_dbac ++{_gdg =_fadeb .computeX (_bbac ,_dbac );_dadb =_fadeb .computeY (_bbac ,_dbac );_bbd :=_fadeb .Patterns [_gaf [_bbac ][_dbac ]];if _deag =_fd .Blit (_bbd ,_fadeb .HalftoneRegionBitmap ,_gdg +int (_fadeb .HGridX ),_dadb +int (_fadeb .HGridY ),_fadeb .CombinationOperator );
_deag !=nil {return _deag ;};};};return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_fd .Bitmap ,error );};func (_gbe *GenericRegion )copyLineAbove (_caa int )error {_fbg :=_caa *_gbe .Bitmap .RowStride ;_efgc :=_fbg -_gbe .Bitmap .RowStride ;
for _gbeb :=0;_gbeb < _gbe .Bitmap .RowStride ;_gbeb ++{_ba ,_ceff :=_gbe .Bitmap .GetByte (_efgc );if _ceff !=nil {return _ceff ;};_efgc ++;if _ceff =_gbe .Bitmap .SetByte (_fbg ,_ba );_ceff !=nil {return _ceff ;};_fbg ++;};return nil ;};func (_ffe *GenericRefinementRegion )updateOverride ()error {if _ffe .GrAtX ==nil ||_ffe .GrAtY ==nil {return _cg .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_ffe .GrAtX )!=len (_ffe .GrAtY ){return _cg .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_ffe ._dfg =make ([]bool ,len (_ffe .GrAtX ));switch _ffe .TemplateID {case 0:if _ffe .GrAtX [0]!=-1&&_ffe .GrAtY [0]!=-1{_ffe ._dfg [0]=true ;
_ffe ._fg =true ;};if _ffe .GrAtX [1]!=-1&&_ffe .GrAtY [1]!=-1{_ffe ._dfg [1]=true ;_ffe ._fg =true ;};case 1:_ffe ._fg =false ;};return nil ;};func (_ddac *SymbolDictionary )getSymbol (_badd int )(*_fd .Bitmap ,error ){const _gdf ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_eeea ,_ecaff :=_ddac ._febf .GetBitmap (_ddac ._fbad [_badd ]);if _ecaff !=nil {return nil ,_aaa .Wrap (_ecaff ,_gdf ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _eeea ,nil ;};func (_daf *GenericRefinementRegion )decodeTemplate (_cfb ,_cc ,_ged ,_dab ,_beg ,_fdac ,_eeb ,_fba ,_fca ,_dcec int ,_afde templater )(_bce error ){var (_fcb ,_efbf ,_fcae ,_cgd ,_abd int16 ;
_bgf ,_gda ,_geg ,_dbe int ;_gfc byte ;);if _fca >=1&&(_fca -1)< _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec -_dab );if _bce !=nil {return ;};_bgf =int (_gfc );};if _fca >=0&&(_fca )< _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec );
if _bce !=nil {return ;};_gda =int (_gfc );};if _fca >=-1&&(_fca +1)< _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec +_dab );if _bce !=nil {return ;};_geg =int (_gfc );};_dcec ++;if _cfb >=1{_gfc ,_bce =_daf .RegionBitmap .GetByte (_fba -_ged );
if _bce !=nil {return ;};_dbe =int (_gfc );};_fba ++;_gag :=_daf .ReferenceDX %8;_gdaa :=6+_gag ;_dac :=_dcec %_dab ;if _gdaa >=0{if _gdaa < 8{_fcb =int16 (_bgf >>uint (_gdaa ))&0x07;};if _gdaa < 8{_efbf =int16 (_gda >>uint (_gdaa ))&0x07;};if _gdaa < 8{_fcae =int16 (_geg >>uint (_gdaa ))&0x07;
};if _gdaa ==6&&_dac > 1{if _fca >=1&&(_fca -1)< _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec -_dab -2);if _bce !=nil {return _bce ;};_fcb |=int16 (_gfc <<2)&0x04;};if _fca >=0&&_fca < _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec -2);
if _bce !=nil {return _bce ;};_efbf |=int16 (_gfc <<2)&0x04;};if _fca >=-1&&_fca +1< _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec +_dab -2);if _bce !=nil {return _bce ;};_fcae |=int16 (_gfc <<2)&0x04;};};if _gdaa ==0{_bgf =0;
_gda =0;_geg =0;if _dac < _dab -1{if _fca >=1&&_fca -1< _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec -_dab );if _bce !=nil {return _bce ;};_bgf =int (_gfc );};if _fca >=0&&_fca < _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec );
if _bce !=nil {return _bce ;};_gda =int (_gfc );};if _fca >=-1&&_fca +1< _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec +_dab );if _bce !=nil {return _bce ;};_geg =int (_gfc );};};_dcec ++;};}else {_fcb =int16 (_bgf <<1)&0x07;
_efbf =int16 (_gda <<1)&0x07;_fcae =int16 (_geg <<1)&0x07;_bgf =0;_gda =0;_geg =0;if _dac < _dab -1{if _fca >=1&&_fca -1< _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec -_dab );if _bce !=nil {return _bce ;};_bgf =int (_gfc );
};if _fca >=0&&_fca < _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec );if _bce !=nil {return _bce ;};_gda =int (_gfc );};if _fca >=-1&&_fca +1< _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec +_dab );
if _bce !=nil {return _bce ;};_geg =int (_gfc );};_dcec ++;};_fcb |=int16 ((_bgf >>7)&0x07);_efbf |=int16 ((_gda >>7)&0x07);_fcae |=int16 ((_geg >>7)&0x07);};_cgd =int16 (_dbe >>6);_abd =0;_gegb :=(2-_gag )%8;_bgf <<=uint (_gegb );_gda <<=uint (_gegb );
_geg <<=uint (_gegb );_dbe <<=2;var _fgg int ;for _fdc :=0;_fdc < _cc ;_fdc ++{_bec :=_fdc &0x07;_eac :=_afde .form (_fcb ,_efbf ,_fcae ,_cgd ,_abd );if _daf ._fg {_gfc ,_bce =_daf .RegionBitmap .GetByte (_daf .RegionBitmap .GetByteIndex (_fdc ,_cfb ));
if _bce !=nil {return _bce ;};_daf ._cb .SetIndex (int32 (_daf .overrideAtTemplate0 (int (_eac ),_fdc ,_cfb ,int (_gfc ),_bec )));}else {_daf ._cb .SetIndex (int32 (_eac ));};_fgg ,_bce =_daf ._ce .DecodeBit (_daf ._cb );if _bce !=nil {return _bce ;};if _bce =_daf .RegionBitmap .SetPixel (_fdc ,_cfb ,byte (_fgg ));
_bce !=nil {return _bce ;};_fcb =((_fcb <<1)|0x01&int16 (_bgf >>7))&0x07;_efbf =((_efbf <<1)|0x01&int16 (_gda >>7))&0x07;_fcae =((_fcae <<1)|0x01&int16 (_geg >>7))&0x07;_cgd =((_cgd <<1)|0x01&int16 (_dbe >>7))&0x07;_abd =int16 (_fgg );if (_fdc -int (_daf .ReferenceDX ))%8==5{_bgf =0;
_gda =0;_geg =0;if ((_fdc -int (_daf .ReferenceDX ))/8)+1< _daf .ReferenceBitmap .RowStride {if _fca >=1&&(_fca -1)< _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec -_dab );if _bce !=nil {return _bce ;};_bgf =int (_gfc );
};if _fca >=0&&_fca < _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec );if _bce !=nil {return _bce ;};_gda =int (_gfc );};if _fca >=-1&&(_fca +1)< _daf .ReferenceBitmap .Height {_gfc ,_bce =_daf .ReferenceBitmap .GetByte (_dcec +_dab );
if _bce !=nil {return _bce ;};_geg =int (_gfc );};};_dcec ++;}else {_bgf <<=1;_gda <<=1;_geg <<=1;};if _bec ==5&&_cfb >=1{if ((_fdc >>3)+1)>=_daf .RegionBitmap .RowStride {_dbe =0;}else {_gfc ,_bce =_daf .RegionBitmap .GetByte (_fba -_ged );if _bce !=nil {return _bce ;
};_dbe =int (_gfc );};_fba ++;}else {_dbe <<=1;};};return nil ;};func (_baef *SymbolDictionary )setSymbolsArray ()error {if _baef ._feee ==nil {if _dbbb :=_baef .retrieveImportSymbols ();_dbbb !=nil {return _dbbb ;};};if _baef ._adae ==nil {_baef ._adae =append (_baef ._adae ,_baef ._feee ...);
};return nil ;};func (_ccfa *Header )String ()string {_gaeee :=&_aa .Builder {};_gaeee .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_gaeee .WriteString (_b .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_ccfa .SegmentNumber ));
_gaeee .WriteString (_b .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_ccfa .Type ));_gaeee .WriteString (_b .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_ccfa .RetainFlag ));
_gaeee .WriteString (_b .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ccfa .PageAssociation ));_gaeee .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_ccfa .PageAssociationFieldSize ));
_gaeee .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_fdcd :=range _ccfa .RTSNumbers {_gaeee .WriteString (_b .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_fdcd ));};_gaeee .WriteString (_b .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_ccfa .HeaderLength ));
_gaeee .WriteString (_b .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_ccfa .SegmentDataLength ));_gaeee .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_ccfa .SegmentDataStartOffset ));
return _gaeee .String ();};func (_fcec *PatternDictionary )parseHeader ()error {_eb .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_eb .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_cdcag :=_fcec ._gcbae .ReadBits (5);if _cdcag !=nil {return _cdcag ;};if _cdcag =_fcec .readTemplate ();_cdcag !=nil {return _cdcag ;};if _cdcag =_fcec .readIsMMREncoded ();_cdcag !=nil {return _cdcag ;};if _cdcag =_fcec .readPatternWidthAndHeight ();
_cdcag !=nil {return _cdcag ;};if _cdcag =_fcec .readGrayMax ();_cdcag !=nil {return _cdcag ;};if _cdcag =_fcec .computeSegmentDataStructure ();_cdcag !=nil {return _cdcag ;};return _fcec .checkInput ();};func (_ccb *GenericRegion )updateOverrideFlags ()error {const _egg ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _ccb .GBAtX ==nil ||_ccb .GBAtY ==nil {return nil ;};if len (_ccb .GBAtX )!=len (_ccb .GBAtY ){return _aaa .Errorf (_egg ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_ccb .GBAtX ),len (_ccb .GBAtY ));
};_ccb .GBAtOverride =make ([]bool ,len (_ccb .GBAtX ));switch _ccb .GBTemplate {case 0:if !_ccb .UseExtTemplates {if _ccb .GBAtX [0]!=3||_ccb .GBAtY [0]!=-1{_ccb .setOverrideFlag (0);};if _ccb .GBAtX [1]!=-3||_ccb .GBAtY [1]!=-1{_ccb .setOverrideFlag (1);
};if _ccb .GBAtX [2]!=2||_ccb .GBAtY [2]!=-2{_ccb .setOverrideFlag (2);};if _ccb .GBAtX [3]!=-2||_ccb .GBAtY [3]!=-2{_ccb .setOverrideFlag (3);};}else {if _ccb .GBAtX [0]!=-2||_ccb .GBAtY [0]!=0{_ccb .setOverrideFlag (0);};if _ccb .GBAtX [1]!=0||_ccb .GBAtY [1]!=-2{_ccb .setOverrideFlag (1);
};if _ccb .GBAtX [2]!=-2||_ccb .GBAtY [2]!=-1{_ccb .setOverrideFlag (2);};if _ccb .GBAtX [3]!=-1||_ccb .GBAtY [3]!=-2{_ccb .setOverrideFlag (3);};if _ccb .GBAtX [4]!=1||_ccb .GBAtY [4]!=-2{_ccb .setOverrideFlag (4);};if _ccb .GBAtX [5]!=2||_ccb .GBAtY [5]!=-1{_ccb .setOverrideFlag (5);
};if _ccb .GBAtX [6]!=-3||_ccb .GBAtY [6]!=0{_ccb .setOverrideFlag (6);};if _ccb .GBAtX [7]!=-4||_ccb .GBAtY [7]!=0{_ccb .setOverrideFlag (7);};if _ccb .GBAtX [8]!=2||_ccb .GBAtY [8]!=-2{_ccb .setOverrideFlag (8);};if _ccb .GBAtX [9]!=3||_ccb .GBAtY [9]!=-1{_ccb .setOverrideFlag (9);
};if _ccb .GBAtX [10]!=-2||_ccb .GBAtY [10]!=-2{_ccb .setOverrideFlag (10);};if _ccb .GBAtX [11]!=-3||_ccb .GBAtY [11]!=-1{_ccb .setOverrideFlag (11);};};case 1:if _ccb .GBAtX [0]!=3||_ccb .GBAtY [0]!=-1{_ccb .setOverrideFlag (0);};case 2:if _ccb .GBAtX [0]!=2||_ccb .GBAtY [0]!=-1{_ccb .setOverrideFlag (0);
};case 3:if _ccb .GBAtX [0]!=2||_ccb .GBAtY [0]!=-1{_ccb .setOverrideFlag (0);};};return nil ;};func (_ede *GenericRegion )decodeTemplate1 (_fgae ,_fdgc ,_dacgd int ,_cfbd ,_cggf int )(_dccf error ){const _cegd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_bad ,_egd int ;_aef ,_ggde int ;_cdb byte ;_eecf ,_ecc int ;);if _fgae >=1{_cdb ,_dccf =_ede .Bitmap .GetByte (_cggf );if _dccf !=nil {return _aaa .Wrap (_dccf ,_cegd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_aef =int (_cdb );};if _fgae >=2{_cdb ,_dccf =_ede .Bitmap .GetByte (_cggf -_ede .Bitmap .RowStride );
if _dccf !=nil {return _aaa .Wrap (_dccf ,_cegd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ggde =int (_cdb )<<5;};_bad =((_aef >>1)&0x1f8)|((_ggde >>1)&0x1e00);for _bdd :=0;_bdd < _dacgd ;_bdd =_eecf {var (_dafe byte ;_bfdc int ;);_eecf =_bdd +8;
if _bfeg :=_fdgc -_bdd ;_bfeg > 8{_bfdc =8;}else {_bfdc =_bfeg ;};if _fgae > 0{_aef <<=8;if _eecf < _fdgc {_cdb ,_dccf =_ede .Bitmap .GetByte (_cggf +1);if _dccf !=nil {return _aaa .Wrap (_dccf ,_cegd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");
};_aef |=int (_cdb );};};if _fgae > 1{_ggde <<=8;if _eecf < _fdgc {_cdb ,_dccf =_ede .Bitmap .GetByte (_cggf -_ede .Bitmap .RowStride +1);if _dccf !=nil {return _aaa .Wrap (_dccf ,_cegd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ggde |=int (_cdb )<<5;
};};for _bfa :=0;_bfa < _bfdc ;_bfa ++{if _ede ._fdcc {_egd =_ede .overrideAtTemplate1 (_bad ,_bdd +_bfa ,_fgae ,int (_dafe ),_bfa );_ede ._fde .SetIndex (int32 (_egd ));}else {_ede ._fde .SetIndex (int32 (_bad ));};_ecc ,_dccf =_ede ._gcbc .DecodeBit (_ede ._fde );
if _dccf !=nil {return _aaa .Wrap (_dccf ,_cegd ,"");};_dafe |=byte (_ecc )<<uint (7-_bfa );_adcb :=uint (8-_bfa );_bad =((_bad &0xefb)<<1)|_ecc |((_aef >>_adcb )&0x8)|((_ggde >>_adcb )&0x200);};if _bcgb :=_ede .Bitmap .SetByte (_cfbd ,_dafe );_bcgb !=nil {return _aaa .Wrap (_bcgb ,_cegd ,"");
};_cfbd ++;_cggf ++;};return nil ;};func (_efg *GenericRefinementRegion )readAtPixels ()error {_efg .GrAtX =make ([]int8 ,2);_efg .GrAtY =make ([]int8 ,2);_egf ,_ecg :=_efg ._df .ReadByte ();if _ecg !=nil {return _ecg ;};_efg .GrAtX [0]=int8 (_egf );_egf ,_ecg =_efg ._df .ReadByte ();
if _ecg !=nil {return _ecg ;};_efg .GrAtY [0]=int8 (_egf );_egf ,_ecg =_efg ._df .ReadByte ();if _ecg !=nil {return _ecg ;};_efg .GrAtX [1]=int8 (_egf );_egf ,_ecg =_efg ._df .ReadByte ();if _ecg !=nil {return _ecg ;};_efg .GrAtY [1]=int8 (_egf );return nil ;
};func (_gfgg *SymbolDictionary )addSymbol (_dbeae Regioner )error {_cgeg ,_fcafe :=_dbeae .GetRegionBitmap ();if _fcafe !=nil {return _fcafe ;};_gfgg ._adga [_gfgg ._edfc ]=_cgeg ;_gfgg ._adae =append (_gfgg ._adae ,_cgeg );_eb .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_cgeg );
return nil ;};func (_dae *GenericRegion )computeSegmentDataStructure ()error {_dae .DataOffset =_dae ._eef .AbsolutePosition ();_dae .DataHeaderLength =_dae .DataOffset -_dae .DataHeaderOffset ;_dae .DataLength =int64 (_dae ._eef .AbsoluteLength ())-_dae .DataHeaderLength ;
return nil ;};func (_eecd *PageInformationSegment )Size ()int {return 19};func (_cece *Header )CleanSegmentData (){if _cece .SegmentData !=nil {_cece .SegmentData =nil ;};};func (_fgfe *HalftoneRegion )computeSegmentDataStructure ()error {_fgfe .DataOffset =_fgfe ._affg .AbsolutePosition ();
_fgfe .DataHeaderLength =_fgfe .DataOffset -_fgfe .DataHeaderOffset ;_fgfe .DataLength =int64 (_fgfe ._affg .AbsoluteLength ())-_fgfe .DataHeaderLength ;return nil ;};func (_eaebg *Header )GetSegmentData ()(Segmenter ,error ){var _bdef Segmenter ;if _eaebg .SegmentData !=nil {_bdef =_eaebg .SegmentData ;
};if _bdef ==nil {_gfbc ,_gfae :=_dded [_eaebg .Type ];if !_gfae {return nil ,_b .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_eaebg .Type ,_eaebg .Type );
};_bdef =_gfbc ();_eb .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_eaebg .SegmentNumber ,_eaebg .SegmentDataStartOffset );
_egc ,_deeg :=_eaebg .subInputReader ();if _deeg !=nil {return nil ,_deeg ;};if _fef :=_bdef .Init (_eaebg ,_egc );_fef !=nil {_eb .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_fef ,_bdef );
return nil ,_fef ;};_eaebg .SegmentData =_bdef ;};return _bdef ,nil ;};func (_acbb *RegionSegment )Size ()int {return 17};func (_afbd *Header )writeReferredToSegments (_aebb _bc .BinaryWriter )(_gdca int ,_gfccf error ){const _ccge ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_efa uint16 ;_cbb uint32 ;);_febcg :=_afbd .referenceSize ();_cegad :=1;_dfgd :=make ([]byte ,_febcg );for _ ,_ecf :=range _afbd .RTSNumbers {switch _febcg {case 4:_cbb =uint32 (_ecf );_c .BigEndian .PutUint32 (_dfgd ,_cbb );_cegad ,_gfccf =_aebb .Write (_dfgd );
if _gfccf !=nil {return 0,_aaa .Wrap (_gfccf ,_ccge ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_efa =uint16 (_ecf );_c .BigEndian .PutUint16 (_dfgd ,_efa );_cegad ,_gfccf =_aebb .Write (_dfgd );if _gfccf !=nil {return 0,_aaa .Wrap (_gfccf ,_ccge ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _gfccf =_aebb .WriteByte (byte (_ecf ));_gfccf !=nil {return 0,_aaa .Wrap (_gfccf ,_ccge ,"\u0075\u0069\u006et\u0038");};};_gdca +=_cegad ;};return _gdca ,nil ;};func (_efeg *HalftoneRegion )parseHeader ()error {if _cgag :=_efeg .RegionSegment .parseHeader ();
_cgag !=nil {return _cgag ;};_fada ,_baad :=_efeg ._affg .ReadBit ();if _baad !=nil {return _baad ;};_efeg .HDefaultPixel =int8 (_fada );_ffea ,_baad :=_efeg ._affg .ReadBits (3);if _baad !=nil {return _baad ;};_efeg .CombinationOperator =_fd .CombinationOperator (_ffea &0xf);
_fada ,_baad =_efeg ._affg .ReadBit ();if _baad !=nil {return _baad ;};if _fada ==1{_efeg .HSkipEnabled =true ;};_ffea ,_baad =_efeg ._affg .ReadBits (2);if _baad !=nil {return _baad ;};_efeg .HTemplate =byte (_ffea &0xf);_fada ,_baad =_efeg ._affg .ReadBit ();
if _baad !=nil {return _baad ;};if _fada ==1{_efeg .IsMMREncoded =true ;};_ffea ,_baad =_efeg ._affg .ReadBits (32);if _baad !=nil {return _baad ;};_efeg .HGridWidth =uint32 (_ffea &_f .MaxUint32 );_ffea ,_baad =_efeg ._affg .ReadBits (32);if _baad !=nil {return _baad ;
};_efeg .HGridHeight =uint32 (_ffea &_f .MaxUint32 );_ffea ,_baad =_efeg ._affg .ReadBits (32);if _baad !=nil {return _baad ;};_efeg .HGridX =int32 (_ffea &_f .MaxInt32 );_ffea ,_baad =_efeg ._affg .ReadBits (32);if _baad !=nil {return _baad ;};_efeg .HGridY =int32 (_ffea &_f .MaxInt32 );
_ffea ,_baad =_efeg ._affg .ReadBits (16);if _baad !=nil {return _baad ;};_efeg .HRegionX =uint16 (_ffea &_f .MaxUint16 );_ffea ,_baad =_efeg ._affg .ReadBits (16);if _baad !=nil {return _baad ;};_efeg .HRegionY =uint16 (_ffea &_f .MaxUint16 );if _baad =_efeg .computeSegmentDataStructure ();
_baad !=nil {return _baad ;};return _efeg .checkInput ();};func (_bfeb *GenericRegion )decodeLine (_ggc ,_fdgd ,_acg int )error {const _gfcc ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_dacg :=_bfeb .Bitmap .GetByteIndex (0,_ggc );_eaag :=_dacg -_bfeb .Bitmap .RowStride ;
switch _bfeb .GBTemplate {case 0:if !_bfeb .UseExtTemplates {return _bfeb .decodeTemplate0a (_ggc ,_fdgd ,_acg ,_dacg ,_eaag );};return _bfeb .decodeTemplate0b (_ggc ,_fdgd ,_acg ,_dacg ,_eaag );case 1:return _bfeb .decodeTemplate1 (_ggc ,_fdgd ,_acg ,_dacg ,_eaag );
case 2:return _bfeb .decodeTemplate2 (_ggc ,_fdgd ,_acg ,_dacg ,_eaag );case 3:return _bfeb .decodeTemplate3 (_ggc ,_fdgd ,_acg ,_dacg ,_eaag );};return _aaa .Errorf (_gfcc ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_bfeb .GBTemplate );
};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_fdddf *RegionSegment )readCombinationOperator ()error {_fcca ,_edga :=_fdddf ._fdacg .ReadBits (3);if _edga !=nil {return _edga ;};_fdddf .CombinaionOperator =_fd .CombinationOperator (_fcca &0xF);
return nil ;};func (_beea *TextRegion )GetRegionInfo ()*RegionSegment {return _beea .RegionInfo };func (_cgca *RegionSegment )parseHeader ()error {const _cfff ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_eb .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_eb .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_gaaf ,_eeab :=_cgca ._fdacg .ReadBits (32);
if _eeab !=nil {return _aaa .Wrap (_eeab ,_cfff ,"\u0077\u0069\u0064t\u0068");};_cgca .BitmapWidth =uint32 (_gaaf &_f .MaxUint32 );_gaaf ,_eeab =_cgca ._fdacg .ReadBits (32);if _eeab !=nil {return _aaa .Wrap (_eeab ,_cfff ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_cgca .BitmapHeight =uint32 (_gaaf &_f .MaxUint32 );_gaaf ,_eeab =_cgca ._fdacg .ReadBits (32);if _eeab !=nil {return _aaa .Wrap (_eeab ,_cfff ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_cgca .XLocation =uint32 (_gaaf &_f .MaxUint32 );
_gaaf ,_eeab =_cgca ._fdacg .ReadBits (32);if _eeab !=nil {return _aaa .Wrap (_eeab ,_cfff ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_cgca .YLocation =uint32 (_gaaf &_f .MaxUint32 );if _ ,_eeab =_cgca ._fdacg .ReadBits (5);_eeab !=nil {return _aaa .Wrap (_eeab ,_cfff ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _eeab =_cgca .readCombinationOperator ();_eeab !=nil {return _aaa .Wrap (_eeab ,_cfff ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_fdff *TableSegment )Init (h *Header ,r *_bc .Reader )error {_fdff ._faffd =r ;
return _fdff .parseHeader ();};func (_fgga *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_fgga .SdHuffAggInstanceSelection {_bfca ,_bcfb :=_gd .GetStandardTable (1);if _bcfb !=nil {return 0,_bcfb ;};return _bfca .Decode (_fgga ._faab );
};if _fgga ._eegc ==nil {var (_ggef int ;_bge error ;);if _fgga .SdHuffDecodeHeightSelection ==3{_ggef ++;};if _fgga .SdHuffDecodeWidthSelection ==3{_ggef ++;};if _fgga .SdHuffBMSizeSelection ==3{_ggef ++;};_fgga ._eegc ,_bge =_fgga .getUserTable (_ggef );
if _bge !=nil {return 0,_bge ;};};return _fgga ._eegc .Decode (_fgga ._faab );};func NewRegionSegment (r *_bc .Reader )*RegionSegment {return &RegionSegment {_fdacg :r }};func (_gfca *TextRegion )getSymbols ()error {if _gfca .Header .RTSegments !=nil {return _gfca .initSymbols ();
};return nil ;};func (_cdbe *HalftoneRegion )GetRegionBitmap ()(*_fd .Bitmap ,error ){if _cdbe .HalftoneRegionBitmap !=nil {return _cdbe .HalftoneRegionBitmap ,nil ;};var _dffg error ;_cdbe .HalftoneRegionBitmap =_fd .New (int (_cdbe .RegionSegment .BitmapWidth ),int (_cdbe .RegionSegment .BitmapHeight ));
if _cdbe .Patterns ==nil ||len (_cdbe .Patterns )==0{_cdbe .Patterns ,_dffg =_cdbe .GetPatterns ();if _dffg !=nil {return nil ,_dffg ;};};if _cdbe .HDefaultPixel ==1{_cdbe .HalftoneRegionBitmap .SetDefaultPixel ();};_acab :=_f .Ceil (_f .Log (float64 (len (_cdbe .Patterns )))/_f .Log (2));
_cfbf :=int (_acab );var _fdagd [][]int ;_fdagd ,_dffg =_cdbe .grayScaleDecoding (_cfbf );if _dffg !=nil {return nil ,_dffg ;};if _dffg =_cdbe .renderPattern (_fdagd );_dffg !=nil {return nil ,_dffg ;};return _cdbe .HalftoneRegionBitmap ,nil ;};func (_bca *SymbolDictionary )setAtPixels ()error {if _bca .IsHuffmanEncoded {return nil ;
};_bdcc :=1;if _bca .SdTemplate ==0{_bdcc =4;};if _bfaf :=_bca .readAtPixels (_bdcc );_bfaf !=nil {return _bfaf ;};return nil ;};func (_eaab *TextRegion )decodeRdh ()(int64 ,error ){const _dbeed ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _eaab .IsHuffmanEncoded {if _eaab .SbHuffRDHeight ==3{if _eaab ._fbcef ==nil {var (_ddgcg int ;
_abaf error ;);if _eaab .SbHuffFS ==3{_ddgcg ++;};if _eaab .SbHuffDS ==3{_ddgcg ++;};if _eaab .SbHuffDT ==3{_ddgcg ++;};if _eaab .SbHuffRDWidth ==3{_ddgcg ++;};_eaab ._fbcef ,_abaf =_eaab .getUserTable (_ddgcg );if _abaf !=nil {return 0,_aaa .Wrap (_abaf ,_dbeed ,"");
};};return _eaab ._fbcef .Decode (_eaab ._afad );};_fage ,_defaf :=_gd .GetStandardTable (14+int (_eaab .SbHuffRDHeight ));if _defaf !=nil {return 0,_aaa .Wrap (_defaf ,_dbeed ,"");};return _fage .Decode (_eaab ._afad );};_aaada ,_bfgg :=_eaab ._aaac .DecodeInt (_eaab ._gbbb );
if _bfgg !=nil {return 0,_aaa .Wrap (_bfgg ,_dbeed ,"");};return int64 (_aaada ),nil ;};func (_caeg *TextRegion )computeSymbolCodeLength ()error {if _caeg .IsHuffmanEncoded {return _caeg .symbolIDCodeLengths ();};_caeg ._bfdg =int8 (_f .Ceil (_f .Log (float64 (_caeg .NumberOfSymbols ))/_f .Log (2)));
return nil ;};func (_bga *Header )writeSegmentNumber (_ggaa _bc .BinaryWriter )(_cecbf int ,_cdbf error ){_cfg :=make ([]byte ,4);_c .BigEndian .PutUint32 (_cfg ,_bga .SegmentNumber );if _cecbf ,_cdbf =_ggaa .Write (_cfg );_cdbf !=nil {return 0,_aaa .Wrap (_cdbf ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _cecbf ,nil ;};func (_ag *EndOfStripe )LineNumber ()int {return _ag ._ef };func (_dfe *GenericRegion )setParametersMMR (_eddae bool ,_bfgbf ,_adg int64 ,_gbdf ,_aea uint32 ,_gca byte ,_aac ,_dbbf bool ,_afc ,_gcac []int8 ){_dfe .DataOffset =_bfgbf ;
_dfe .DataLength =_adg ;_dfe .RegionSegment =&RegionSegment {};_dfe .RegionSegment .BitmapHeight =_gbdf ;_dfe .RegionSegment .BitmapWidth =_aea ;_dfe .GBTemplate =_gca ;_dfe .IsMMREncoded =_eddae ;_dfe .IsTPGDon =_aac ;_dfe .GBAtX =_afc ;_dfe .GBAtY =_gcac ;
};func (_gddd *GenericRegion )overrideAtTemplate1 (_cce ,_bgg ,_cge ,_gaga ,_ffbe int )int {_cce &=0x1FF7;if _gddd .GBAtY [0]==0&&_gddd .GBAtX [0]>=-int8 (_ffbe ){_cce |=(_gaga >>uint (7-(int8 (_ffbe )+_gddd .GBAtX [0]))&0x1)<<3;}else {_cce |=int (_gddd .getPixel (_bgg +int (_gddd .GBAtX [0]),_cge +int (_gddd .GBAtY [0])))<<3;
};return _cce ;};func (_ecbd *SymbolDictionary )String ()string {_dbgb :=&_aa .Builder {};_dbgb .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_dbgb .WriteString (_b .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_ecbd .SdrTemplate ));
_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_ecbd .SdTemplate ));_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_ecbd ._dede ));
_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_ecbd ._fbdf ));_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ecbd .SdHuffAggInstanceSelection ));
_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_ecbd .SdHuffBMSizeSelection ));_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ecbd .SdHuffDecodeWidthSelection ));
_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ecbd .SdHuffDecodeHeightSelection ));_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ecbd .UseRefinementAggregation ));
_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_ecbd .IsHuffmanEncoded ));_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ecbd .SdATX ));
_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ecbd .SdATY ));_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ecbd .SdrATX ));_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ecbd .SdrATY ));
_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ecbd .NumberOfExportedSymbols ));_dbgb .WriteString (_b .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_ecbd .NumberOfNewSymbols ));
_dbgb .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ecbd ._fdca ));_dbgb .WriteString (_b .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_ecbd ._edfc ));
return _dbgb .String ();};func (_cgb *PageInformationSegment )String ()string {_deffg :=&_aa .Builder {};_deffg .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_deffg .WriteString (_b .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_cgb .PageBMHeight ));_deffg .WriteString (_b .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_cgb .PageBMWidth ));
_deffg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_cgb .ResolutionX ));_deffg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_cgb .ResolutionY ));
_deffg .WriteString (_b .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_cgb ._cbea ));_deffg .WriteString (_b .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_cgb ._gdcad ));
_deffg .WriteString (_b .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_cgb .IsLossless ));_deffg .WriteString (_b .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cgb ._fgbb ));
_deffg .WriteString (_b .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_cgb ._ecfg ));_deffg .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_cgb .IsStripe ));
_deffg .WriteString (_b .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_cgb .MaxStripeSize ));return _deffg .String ();};func (_eefa *SymbolDictionary )decodeThroughTextRegion (_fcfd ,_bfdac ,_fccc uint32 )error {if _eefa ._ecd ==nil {_eefa ._ecd =_gcde (_eefa ._faab ,nil );
_eefa ._ecd .setContexts (_eefa ._dfed ,_af .NewStats (512,1),_af .NewStats (512,1),_af .NewStats (512,1),_af .NewStats (512,1),_eefa ._aeae ,_af .NewStats (512,1),_af .NewStats (512,1),_af .NewStats (512,1),_af .NewStats (512,1));};if _ddedc :=_eefa .setSymbolsArray ();
_ddedc !=nil {return _ddedc ;};_eefa ._ecd .setParameters (_eefa ._beag ,_eefa .IsHuffmanEncoded ,true ,_fcfd ,_bfdac ,_fccc ,1,_eefa ._fdca +_eefa ._edfc ,0,0,0,1,0,0,0,0,0,0,0,0,0,_eefa .SdrTemplate ,_eefa .SdrATX ,_eefa .SdrATY ,_eefa ._adae ,_eefa ._ccgag );
return _eefa .addSymbol (_eefa ._ecd );};func (_cffb *Header )parse (_bggd Documenter ,_eddd *_bc .Reader ,_aad int64 ,_efc OrganizationType )(_dfaa error ){const _afgg ="\u0070\u0061\u0072s\u0065";_eb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _dfaa !=nil {_eb .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_dfaa );}else {_eb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_dfaa =_eddd .Seek (_aad ,_a .SeekStart );if _dfaa !=nil {return _aaa .Wrap (_dfaa ,_afgg ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _dfaa =_cffb .readSegmentNumber (_eddd );_dfaa !=nil {return _aaa .Wrap (_dfaa ,_afgg ,"");
};if _dfaa =_cffb .readHeaderFlags ();_dfaa !=nil {return _aaa .Wrap (_dfaa ,_afgg ,"");};var _febc uint64 ;_febc ,_dfaa =_cffb .readNumberOfReferredToSegments (_eddd );if _dfaa !=nil {return _aaa .Wrap (_dfaa ,_afgg ,"");};_cffb .RTSNumbers ,_dfaa =_cffb .readReferredToSegmentNumbers (_eddd ,int (_febc ));
if _dfaa !=nil {return _aaa .Wrap (_dfaa ,_afgg ,"");};_dfaa =_cffb .readSegmentPageAssociation (_bggd ,_eddd ,_febc ,_cffb .RTSNumbers ...);if _dfaa !=nil {return _aaa .Wrap (_dfaa ,_afgg ,"");};if _cffb .Type !=TEndOfFile {if _dfaa =_cffb .readSegmentDataLength (_eddd );
_dfaa !=nil {return _aaa .Wrap (_dfaa ,_afgg ,"");};};_cffb .readDataStartOffset (_eddd ,_efc );_cffb .readHeaderLength (_eddd ,_aad );_eb .Log .Trace ("\u0025\u0073",_cffb );return nil ;};func (_dcgaf *GenericRefinementRegion )String ()string {_cggb :=&_aa .Builder {};
_cggb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_cggb .WriteString (_dcgaf .RegionInfo .String ()+"\u000a");_cggb .WriteString (_b .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dcgaf .IsTPGROn ));
_cggb .WriteString (_b .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_dcgaf .TemplateID ));_cggb .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dcgaf .GrAtX ));
_cggb .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dcgaf .GrAtY ));_cggb .WriteString (_b .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_dcgaf .ReferenceDX ));
_cggb .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_dcgaf .ReferenceDY ));return _cggb .String ();};func (_fff *HalftoneRegion )computeGrayScalePlanes (_cafa []*_fd .Bitmap ,_dfef int )([][]int ,error ){_baa :=make ([][]int ,_fff .HGridHeight );
for _dcgf :=0;_dcgf < len (_baa );_dcgf ++{_baa [_dcgf ]=make ([]int ,_fff .HGridWidth );};for _eada :=0;_eada < int (_fff .HGridHeight );_eada ++{for _ddgb :=0;_ddgb < int (_fff .HGridWidth );_ddgb +=8{var _gcga int ;if _edc :=int (_fff .HGridWidth )-_ddgb ;
_edc > 8{_gcga =8;}else {_gcga =_edc ;};_dcea :=_cafa [0].GetByteIndex (_ddgb ,_eada );for _dffb :=0;_dffb < _gcga ;_dffb ++{_gbc :=_dffb +_ddgb ;_baa [_eada ][_gbc ]=0;for _ggdfc :=0;_ggdfc < _dfef ;_ggdfc ++{_fcddf ,_aga :=_cafa [_ggdfc ].GetByte (_dcea );
if _aga !=nil {return nil ,_aga ;};_egga :=_fcddf >>uint (7-_gbc &7);_aaae :=_egga &1;_cacg :=1<<uint (_ggdfc );_gaee :=int (_aaae )*_cacg ;_baa [_eada ][_gbc ]+=_gaee ;};};};};return _baa ,nil ;};func (_gbbc *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _gbbc ._adda ==nil {var (_eegb int ;
_fged error ;);if _gbbc .SdHuffDecodeHeightSelection ==3{_eegb ++;};if _gbbc .SdHuffDecodeWidthSelection ==3{_eegb ++;};_gbbc ._adda ,_fged =_gbbc .getUserTable (_eegb );if _fged !=nil {return 0,_fged ;};};return _gbbc ._adda .Decode (_gbbc ._faab );};
func (_dee *GenericRegion )decodeTemplate0a (_adfg ,_gggg ,_ffc int ,_fcf ,_agg int )(_dabc error ){const _bba ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_dgfd ,_bac int ;_feg ,_cdc int ;_fcd byte ;_efgcd int ;
);if _adfg >=1{_fcd ,_dabc =_dee .Bitmap .GetByte (_agg );if _dabc !=nil {return _aaa .Wrap (_dabc ,_bba ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_feg =int (_fcd );};if _adfg >=2{_fcd ,_dabc =_dee .Bitmap .GetByte (_agg -_dee .Bitmap .RowStride );
if _dabc !=nil {return _aaa .Wrap (_dabc ,_bba ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cdc =int (_fcd )<<6;};_dgfd =(_feg &0xf0)|(_cdc &0x3800);for _cbc :=0;_cbc < _ffc ;_cbc =_efgcd {var (_cac byte ;_fcdd int ;);_efgcd =_cbc +8;if _ffb :=_gggg -_cbc ;
_ffb > 8{_fcdd =8;}else {_fcdd =_ffb ;};if _adfg > 0{_feg <<=8;if _efgcd < _gggg {_fcd ,_dabc =_dee .Bitmap .GetByte (_agg +1);if _dabc !=nil {return _aaa .Wrap (_dabc ,_bba ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_feg |=int (_fcd );};};
if _adfg > 1{_fegb :=_agg -_dee .Bitmap .RowStride +1;_cdc <<=8;if _efgcd < _gggg {_fcd ,_dabc =_dee .Bitmap .GetByte (_fegb );if _dabc !=nil {return _aaa .Wrap (_dabc ,_bba ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cdc |=int (_fcd )<<6;}else {_cdc |=0;
};};for _cfdb :=0;_cfdb < _fcdd ;_cfdb ++{_egag :=uint (7-_cfdb );if _dee ._fdcc {_bac =_dee .overrideAtTemplate0a (_dgfd ,_cbc +_cfdb ,_adfg ,int (_cac ),_cfdb ,int (_egag ));_dee ._fde .SetIndex (int32 (_bac ));}else {_dee ._fde .SetIndex (int32 (_dgfd ));
};var _aee int ;_aee ,_dabc =_dee ._gcbc .DecodeBit (_dee ._fde );if _dabc !=nil {return _aaa .Wrap (_dabc ,_bba ,"");};_cac |=byte (_aee )<<_egag ;_dgfd =((_dgfd &0x7bf7)<<1)|_aee |((_feg >>_egag )&0x10)|((_cdc >>_egag )&0x800);};if _aeb :=_dee .Bitmap .SetByte (_fcf ,_cac );
_aeb !=nil {return _aaa .Wrap (_aeb ,_bba ,"");};_fcf ++;_agg ++;};return nil ;};var _ templater =&template1 {};func (_faec *PatternDictionary )readIsMMREncoded ()error {_feab ,_ebge :=_faec ._gcbae .ReadBit ();if _ebge !=nil {return _ebge ;};if _feab !=0{_faec .IsMMREncoded =true ;
};return nil ;};func (_cage *PageInformationSegment )readCombinationOperator ()error {_cgdgd ,_efcc :=_cage ._ccfae .ReadBits (2);if _efcc !=nil {return _efcc ;};_cage ._cbea =_fd .CombinationOperator (int (_cgdgd ));return nil ;};var _ SegmentEncoder =&GenericRegion {};
func (_cbgb *SymbolDictionary )encodeFlags (_cdgc _bc .BinaryWriter )(_ddf int ,_bccc error ){const _dcca ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bccc =_cdgc .SkipBits (3);_bccc !=nil {return 0,_aaa .Wrap (_bccc ,_dcca ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");
};var _dfab int ;if _cbgb .SdrTemplate > 0{_dfab =1;};if _bccc =_cdgc .WriteBit (_dfab );_bccc !=nil {return _ddf ,_aaa .Wrap (_bccc ,_dcca ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dfab =0;if _cbgb .SdTemplate > 1{_dfab =1;};
if _bccc =_cdgc .WriteBit (_dfab );_bccc !=nil {return _ddf ,_aaa .Wrap (_bccc ,_dcca ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dfab =0;if _cbgb .SdTemplate ==1||_cbgb .SdTemplate ==3{_dfab =1;};if _bccc =_cdgc .WriteBit (_dfab );
_bccc !=nil {return _ddf ,_aaa .Wrap (_bccc ,_dcca ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dfab =0;if _cbgb ._dede {_dfab =1;};if _bccc =_cdgc .WriteBit (_dfab );_bccc !=nil {return _ddf ,_aaa .Wrap (_bccc ,_dcca ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_dfab =0;if _cbgb ._fbdf {_dfab =1;};if _bccc =_cdgc .WriteBit (_dfab );_bccc !=nil {return _ddf ,_aaa .Wrap (_bccc ,_dcca ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_dfab =0;if _cbgb .SdHuffAggInstanceSelection {_dfab =1;
};if _bccc =_cdgc .WriteBit (_dfab );_bccc !=nil {return _ddf ,_aaa .Wrap (_bccc ,_dcca ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_dfab =int (_cbgb .SdHuffBMSizeSelection );if _bccc =_cdgc .WriteBit (_dfab );_bccc !=nil {return _ddf ,_aaa .Wrap (_bccc ,_dcca ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_dfab =0;if _cbgb .SdHuffDecodeWidthSelection > 1{_dfab =1;};if _bccc =_cdgc .WriteBit (_dfab );_bccc !=nil {return _ddf ,_aaa .Wrap (_bccc ,_dcca ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dfab =0;switch _cbgb .SdHuffDecodeWidthSelection {case 1,3:_dfab =1;
};if _bccc =_cdgc .WriteBit (_dfab );_bccc !=nil {return _ddf ,_aaa .Wrap (_bccc ,_dcca ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dfab =0;if _cbgb .SdHuffDecodeHeightSelection > 1{_dfab =1;};if _bccc =_cdgc .WriteBit (_dfab );
_bccc !=nil {return _ddf ,_aaa .Wrap (_bccc ,_dcca ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_dfab =0;switch _cbgb .SdHuffDecodeHeightSelection {case 1,3:_dfab =1;};if _bccc =_cdgc .WriteBit (_dfab );_bccc !=nil {return _ddf ,_aaa .Wrap (_bccc ,_dcca ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_dfab =0;if _cbgb .UseRefinementAggregation {_dfab =1;};if _bccc =_cdgc .WriteBit (_dfab );_bccc !=nil {return _ddf ,_aaa .Wrap (_bccc ,_dcca ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_dfab =0;if _cbgb .IsHuffmanEncoded {_dfab =1;};if _bccc =_cdgc .WriteBit (_dfab );
_bccc !=nil {return _ddf ,_aaa .Wrap (_bccc ,_dcca ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};type EncodeInitializer interface{InitEncode ();};func (_abb *template1 )form (_dgc ,_bdg ,_fdce ,_adf ,_bebb int16 )int16 {return ((_dgc &0x02)<<8)|(_bdg <<6)|((_fdce &0x03)<<4)|(_adf <<1)|_bebb ;
};type GenericRefinementRegion struct{_ab templater ;_ac templater ;_df *_bc .Reader ;_ace *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_fd .Bitmap ;ReferenceBitmap *_fd .Bitmap ;
ReferenceDX int32 ;ReferenceDY int32 ;_ce *_af .Decoder ;_cb *_af .DecoderStats ;_fg bool ;_dfg []bool ;};type OrganizationType uint8 ;func (_gafd *SymbolDictionary )decodeNewSymbols (_bbbg ,_eebf uint32 ,_bdda *_fd .Bitmap ,_bcde ,_fcfc int32 )error {if _gafd ._deed ==nil {_gafd ._deed =_eabc (_gafd ._faab ,nil );
if _gafd ._beag ==nil {var _ccfd error ;_gafd ._beag ,_ccfd =_af .New (_gafd ._faab );if _ccfd !=nil {return _ccfd ;};};if _gafd ._dfed ==nil {_gafd ._dfed =_af .NewStats (65536,1);};};_gafd ._deed .setParameters (_gafd ._dfed ,_gafd ._beag ,_gafd .SdrTemplate ,_bbbg ,_eebf ,_bdda ,_bcde ,_fcfc ,false ,_gafd .SdrATX ,_gafd .SdrATY );
return _gafd .addSymbol (_gafd ._deed );};func (_dadbe *SymbolDictionary )setRetainedCodingContexts (_ccdc *SymbolDictionary ){_dadbe ._beag =_ccdc ._beag ;_dadbe .IsHuffmanEncoded =_ccdc .IsHuffmanEncoded ;_dadbe .UseRefinementAggregation =_ccdc .UseRefinementAggregation ;
_dadbe .SdTemplate =_ccdc .SdTemplate ;_dadbe .SdrTemplate =_ccdc .SdrTemplate ;_dadbe .SdATX =_ccdc .SdATX ;_dadbe .SdATY =_ccdc .SdATY ;_dadbe .SdrATX =_ccdc .SdrATX ;_dadbe .SdrATY =_ccdc .SdrATY ;_dadbe ._dfed =_ccdc ._dfed ;};func (_feec *TableSegment )HtPS ()int32 {return _feec ._ecebg };
func (_bae *Header )pageSize ()uint {if _bae .PageAssociation <=255{return 1;};return 4;};func (_geb *GenericRegion )Init (h *Header ,r *_bc .Reader )error {_geb .RegionSegment =NewRegionSegment (r );_geb ._eef =r ;return _geb .parseHeader ();};type HalftoneRegion struct{_affg *_bc .Reader ;
_cfbe *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _fd .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_fd .Bitmap ;Patterns []*_fd .Bitmap ;};func (_ebea *TextRegion )checkInput ()error {const _ggeg ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_ebea .UseRefinement {if _ebea .SbrTemplate !=0{_eb .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ebea .SbrTemplate =0;};};if _ebea .SbHuffFS ==2||_ebea .SbHuffRDWidth ==2||_ebea .SbHuffRDHeight ==2||_ebea .SbHuffRDX ==2||_ebea .SbHuffRDY ==2{return _aaa .Error (_ggeg ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_ebea .UseRefinement {if _ebea .SbHuffRSize !=0{_eb .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ebea .SbHuffRSize =0;};if _ebea .SbHuffRDY !=0{_eb .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_ebea .SbHuffRDY =0;};if _ebea .SbHuffRDX !=0{_eb .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_ebea .SbHuffRDX =0;};if _ebea .SbHuffRDWidth !=0{_eb .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_ebea .SbHuffRDWidth =0;};if _ebea .SbHuffRDHeight !=0{_eb .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_ebea .SbHuffRDHeight =0;};};return nil ;
};func (_ebdd *PatternDictionary )computeSegmentDataStructure ()error {_ebdd .DataOffset =_ebdd ._gcbae .AbsolutePosition ();_ebdd .DataHeaderLength =_ebdd .DataOffset -_ebdd .DataHeaderOffset ;_ebdd .DataLength =int64 (_ebdd ._gcbae .AbsoluteLength ())-_ebdd .DataHeaderLength ;
return nil ;};func (_fgag *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _fgag .IsHuffmanEncoded {return _fgag .decodeHeightClassDeltaHeightWithHuffman ();};_ebeb ,_edeab :=_fgag ._beag .DecodeInt (_fgag ._bdcdb );if _edeab !=nil {return 0,_edeab ;
};return int64 (_ebeb ),nil ;};func (_afcd *TextRegion )decodeIb (_fag ,_cgbcg int64 )(*_fd .Bitmap ,error ){const _gabc ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_debd error ;_dfc *_fd .Bitmap ;);if _fag ==0{if int (_cgbcg )> len (_afcd .Symbols )-1{return nil ,_aaa .Error (_gabc ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _afcd .Symbols [int (_cgbcg )],nil ;};var _afaab ,_adcdd ,_gcdf ,_fefd int64 ;_afaab ,_debd =_afcd .decodeRdw ();if _debd !=nil {return nil ,_aaa .Wrap (_debd ,_gabc ,"");};_adcdd ,_debd =_afcd .decodeRdh ();if _debd !=nil {return nil ,_aaa .Wrap (_debd ,_gabc ,"");
};_gcdf ,_debd =_afcd .decodeRdx ();if _debd !=nil {return nil ,_aaa .Wrap (_debd ,_gabc ,"");};_fefd ,_debd =_afcd .decodeRdy ();if _debd !=nil {return nil ,_aaa .Wrap (_debd ,_gabc ,"");};if _afcd .IsHuffmanEncoded {if _ ,_debd =_afcd .decodeSymInRefSize ();
_debd !=nil {return nil ,_aaa .Wrap (_debd ,_gabc ,"");};_afcd ._afad .Align ();};_gcgd :=_afcd .Symbols [_cgbcg ];_egfb :=uint32 (_gcgd .Width );_ffed :=uint32 (_gcgd .Height );_fggd :=int32 (uint32 (_afaab )>>1)+int32 (_gcdf );_bgcdf :=int32 (uint32 (_adcdd )>>1)+int32 (_fefd );
if _afcd ._efed ==nil {_afcd ._efed =_eabc (_afcd ._afad ,nil );};_afcd ._efed .setParameters (_afcd ._cedb ,_afcd ._aaac ,_afcd .SbrTemplate ,_egfb +uint32 (_afaab ),_ffed +uint32 (_adcdd ),_gcgd ,_fggd ,_bgcdf ,false ,_afcd .SbrATX ,_afcd .SbrATY );_dfc ,_debd =_afcd ._efed .GetRegionBitmap ();
if _debd !=nil {return nil ,_aaa .Wrap (_debd ,_gabc ,"\u0067\u0072\u0066");};if _afcd .IsHuffmanEncoded {_afcd ._afad .Align ();};return _dfc ,nil ;};func (_fdda *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_aacc :=range _fdda .Header .RTSegments {if _aacc .Type ==0{_bfge ,_edfa :=_aacc .GetSegmentData ();
if _edfa !=nil {return _edfa ;};_geeb ,_dcb :=_bfge .(*SymbolDictionary );if !_dcb {return _b .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_bfge );
};_gcbg ,_edfa :=_geeb .GetDictionary ();if _edfa !=nil {return _b .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_aacc .SegmentNumber ,_edfa .Error ());
};_fdda ._feee =append (_fdda ._feee ,_gcbg ...);_fdda ._fdca +=_geeb .NumberOfExportedSymbols ;};};return nil ;};func (_egde *SymbolDictionary )parseHeader ()(_aeed error ){_eb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _aeed !=nil {_eb .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_aeed );
}else {_eb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _aeed =_egde .readRegionFlags ();_aeed !=nil {return _aeed ;};if _aeed =_egde .setAtPixels ();_aeed !=nil {return _aeed ;};if _aeed =_egde .setRefinementAtPixels ();_aeed !=nil {return _aeed ;};if _aeed =_egde .readNumberOfExportedSymbols ();_aeed !=nil {return _aeed ;
};if _aeed =_egde .readNumberOfNewSymbols ();_aeed !=nil {return _aeed ;};if _aeed =_egde .setInSyms ();_aeed !=nil {return _aeed ;};if _egde ._fbdf {_beae :=_egde .Header .RTSegments ;for _adbg :=len (_beae )-1;_adbg >=0;_adbg --{if _beae [_adbg ].Type ==0{_cbad ,_bcfba :=_beae [_adbg ].SegmentData .(*SymbolDictionary );
if !_bcfba {_aeed =_b .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_beae [_adbg ]);
return _aeed ;};if _cbad ._fbdf {_egde .setRetainedCodingContexts (_cbad );};break ;};};};if _aeed =_egde .checkInput ();_aeed !=nil {return _aeed ;};return nil ;};func (_dceba *TextRegion )setContexts (_cdfc *_af .DecoderStats ,_ggdc *_af .DecoderStats ,_deabe *_af .DecoderStats ,_ebcgb *_af .DecoderStats ,_cdfgd *_af .DecoderStats ,_fega *_af .DecoderStats ,_baec *_af .DecoderStats ,_cgga *_af .DecoderStats ,_eeed *_af .DecoderStats ,_aeagd *_af .DecoderStats ){_dceba ._cffd =_ggdc ;
_dceba ._gfbcf =_deabe ;_dceba ._bgcd =_ebcgb ;_dceba ._efgfa =_cdfgd ;_dceba ._gedc =_baec ;_dceba ._gbbb =_cgga ;_dceba ._dffbg =_fega ;_dceba ._bdab =_eeed ;_dceba ._cbceb =_aeagd ;_dceba ._cedb =_cdfc ;};func (_gefc *TextRegion )readRegionFlags ()error {var (_ffdc int ;
_bgddg uint64 ;_ddca error ;);_ffdc ,_ddca =_gefc ._afad .ReadBit ();if _ddca !=nil {return _ddca ;};_gefc .SbrTemplate =int8 (_ffdc );_bgddg ,_ddca =_gefc ._afad .ReadBits (5);if _ddca !=nil {return _ddca ;};_gefc .SbDsOffset =int8 (_bgddg );if _gefc .SbDsOffset > 0x0f{_gefc .SbDsOffset -=0x20;
};_ffdc ,_ddca =_gefc ._afad .ReadBit ();if _ddca !=nil {return _ddca ;};_gefc .DefaultPixel =int8 (_ffdc );_bgddg ,_ddca =_gefc ._afad .ReadBits (2);if _ddca !=nil {return _ddca ;};_gefc .CombinationOperator =_fd .CombinationOperator (int (_bgddg )&0x3);
_ffdc ,_ddca =_gefc ._afad .ReadBit ();if _ddca !=nil {return _ddca ;};_gefc .IsTransposed =int8 (_ffdc );_bgddg ,_ddca =_gefc ._afad .ReadBits (2);if _ddca !=nil {return _ddca ;};_gefc .ReferenceCorner =int16 (_bgddg )&0x3;_bgddg ,_ddca =_gefc ._afad .ReadBits (2);
if _ddca !=nil {return _ddca ;};_gefc .LogSBStrips =int16 (_bgddg )&0x3;_gefc .SbStrips =1<<uint (_gefc .LogSBStrips );_ffdc ,_ddca =_gefc ._afad .ReadBit ();if _ddca !=nil {return _ddca ;};if _ffdc ==1{_gefc .UseRefinement =true ;};_ffdc ,_ddca =_gefc ._afad .ReadBit ();
if _ddca !=nil {return _ddca ;};if _ffdc ==1{_gefc .IsHuffmanEncoded =true ;};return nil ;};func (_cbfg *TextRegion )Init (header *Header ,r *_bc .Reader )error {_cbfg .Header =header ;_cbfg ._afad =r ;_cbfg .RegionInfo =NewRegionSegment (_cbfg ._afad );
return _cbfg .parseHeader ();};type PatternDictionary struct{_gcbae *_bc .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;
Patterns []*_fd .Bitmap ;GrayMax uint32 ;};const (ORandom OrganizationType =iota ;OSequential ;);type TableSegment struct{_faffd *_bc .Reader ;_cccg int32 ;_ecebg int32 ;_ggfgf int32 ;_dafge int32 ;_effd int32 ;};func (_eaed *SymbolDictionary )decodeHeightClassBitmap (_ceegf *_fd .Bitmap ,_faffb int64 ,_cggeb int ,_gaff []int )error {for _caffe :=_faffb ;
_caffe < int64 (_eaed ._edfc );_caffe ++{var _bega int ;for _ffbf :=_faffb ;_ffbf <=_caffe -1;_ffbf ++{_bega +=_gaff [_ffbf ];};_ddae :=_d .Rect (_bega ,0,_bega +_gaff [_caffe ],_cggeb );_ebcb ,_fgcg :=_fd .Extract (_ddae ,_ceegf );if _fgcg !=nil {return _fgcg ;
};_eaed ._adga [_caffe ]=_ebcb ;_eaed ._adae =append (_eaed ._adae ,_ebcb );};return nil ;};func (_bbcg *PatternDictionary )readTemplate ()error {_bgca ,_bfgbfe :=_bbcg ._gcbae .ReadBits (2);if _bfgbfe !=nil {return _bfgbfe ;};_bbcg .HDTemplate =byte (_bgca );
return nil ;};func (_fggf *TextRegion )decodeCurrentT ()(int64 ,error ){if _fggf .SbStrips !=1{if _fggf .IsHuffmanEncoded {_bggg ,_ddeg :=_fggf ._afad .ReadBits (byte (_fggf .LogSBStrips ));return int64 (_bggg ),_ddeg ;};_gbdae ,_eaebf :=_fggf ._aaac .DecodeInt (_fggf ._efgfa );
if _eaebf !=nil {return 0,_eaebf ;};return int64 (_gbdae ),nil ;};return 0,nil ;};func (_cgfb *GenericRegion )overrideAtTemplate2 (_eeec ,_abda ,_cbf ,_cdf ,_ggf int )int {_eeec &=0x3FB;if _cgfb .GBAtY [0]==0&&_cgfb .GBAtX [0]>=-int8 (_ggf ){_eeec |=(_cdf >>uint (7-(int8 (_ggf )+_cgfb .GBAtX [0]))&0x1)<<2;
}else {_eeec |=int (_cgfb .getPixel (_abda +int (_cgfb .GBAtX [0]),_cbf +int (_cgfb .GBAtY [0])))<<2;};return _eeec ;};func (_fbf *GenericRegion )overrideAtTemplate0a (_fcdg ,_ecb ,_ggdf ,_cfdbe ,_dege ,_adbb int )int {if _fbf .GBAtOverride [0]{_fcdg &=0xFFEF;
if _fbf .GBAtY [0]==0&&_fbf .GBAtX [0]>=-int8 (_dege ){_fcdg |=(_cfdbe >>uint (int8 (_adbb )-_fbf .GBAtX [0]&0x1))<<4;}else {_fcdg |=int (_fbf .getPixel (_ecb +int (_fbf .GBAtX [0]),_ggdf +int (_fbf .GBAtY [0])))<<4;};};if _fbf .GBAtOverride [1]{_fcdg &=0xFBFF;
if _fbf .GBAtY [1]==0&&_fbf .GBAtX [1]>=-int8 (_dege ){_fcdg |=(_cfdbe >>uint (int8 (_adbb )-_fbf .GBAtX [1]&0x1))<<10;}else {_fcdg |=int (_fbf .getPixel (_ecb +int (_fbf .GBAtX [1]),_ggdf +int (_fbf .GBAtY [1])))<<10;};};if _fbf .GBAtOverride [2]{_fcdg &=0xF7FF;
if _fbf .GBAtY [2]==0&&_fbf .GBAtX [2]>=-int8 (_dege ){_fcdg |=(_cfdbe >>uint (int8 (_adbb )-_fbf .GBAtX [2]&0x1))<<11;}else {_fcdg |=int (_fbf .getPixel (_ecb +int (_fbf .GBAtX [2]),_ggdf +int (_fbf .GBAtY [2])))<<11;};};if _fbf .GBAtOverride [3]{_fcdg &=0x7FFF;
if _fbf .GBAtY [3]==0&&_fbf .GBAtX [3]>=-int8 (_dege ){_fcdg |=(_cfdbe >>uint (int8 (_adbb )-_fbf .GBAtX [3]&0x1))<<15;}else {_fcdg |=int (_fbf .getPixel (_ecb +int (_fbf .GBAtX [3]),_ggdf +int (_fbf .GBAtY [3])))<<15;};};return _fcdg ;};func NewGenericRegion (r *_bc .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_eef :r };
};func (_gedf *Header )readHeaderFlags ()error {const _efbfag ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_cca ,_efcb :=_gedf .Reader .ReadBit ();if _efcb !=nil {return _aaa .Wrap (_efcb ,_efbfag ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _cca !=0{_gedf .RetainFlag =true ;};_cca ,_efcb =_gedf .Reader .ReadBit ();if _efcb !=nil {return _aaa .Wrap (_efcb ,_efbfag ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _cca !=0{_gedf .PageAssociationFieldSize =true ;
};_fcda ,_efcb :=_gedf .Reader .ReadBits (6);if _efcb !=nil {return _aaa .Wrap (_efcb ,_efbfag ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_gedf .Type =Type (int (_fcda ));return nil ;};type template1 struct{};func (_cecd *RegionSegment )Encode (w _bc .BinaryWriter )(_afae int ,_bfbe error ){const _gbee ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_begf :=make ([]byte ,4);_c .BigEndian .PutUint32 (_begf ,_cecd .BitmapWidth );_afae ,_bfbe =w .Write (_begf );if _bfbe !=nil {return 0,_aaa .Wrap (_bfbe ,_gbee ,"\u0057\u0069\u0064t\u0068");};_c .BigEndian .PutUint32 (_begf ,_cecd .BitmapHeight );var _ffdb int ;
_ffdb ,_bfbe =w .Write (_begf );if _bfbe !=nil {return 0,_aaa .Wrap (_bfbe ,_gbee ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_afae +=_ffdb ;_c .BigEndian .PutUint32 (_begf ,_cecd .XLocation );_ffdb ,_bfbe =w .Write (_begf );if _bfbe !=nil {return 0,_aaa .Wrap (_bfbe ,_gbee ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_afae +=_ffdb ;_c .BigEndian .PutUint32 (_begf ,_cecd .YLocation );_ffdb ,_bfbe =w .Write (_begf );if _bfbe !=nil {return 0,_aaa .Wrap (_bfbe ,_gbee ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_afae +=_ffdb ;if _bfbe =w .WriteByte (byte (_cecd .CombinaionOperator )&0x07);
_bfbe !=nil {return 0,_aaa .Wrap (_bfbe ,_gbee ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_afae ++;return _afae ,nil ;};func (_bdbe *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_fd .Points ,symbols *_fd .Bitmaps ,classIDs *_gc .IntSlice ,boxes *_fd .Boxes ,width ,height ,symBits int ){_bdbe .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_bdbe ._bdgb =globalSymbolsMap ;_bdbe ._ecafa =localSymbolsMap ;_bdbe ._gbcca =comps ;_bdbe ._abbd =inLL ;_bdbe ._agafd =symbols ;_bdbe ._ddafd =classIDs ;_bdbe ._acbg =boxes ;_bdbe ._cdgcb =symBits ;};func (_bcgg *GenericRegion )overrideAtTemplate0b (_cdca ,_dfdb ,_fbc ,_aggd ,_agce ,_afeb int )int {if _bcgg .GBAtOverride [0]{_cdca &=0xFFFD;
if _bcgg .GBAtY [0]==0&&_bcgg .GBAtX [0]>=-int8 (_agce ){_cdca |=(_aggd >>uint (int8 (_afeb )-_bcgg .GBAtX [0]&0x1))<<1;}else {_cdca |=int (_bcgg .getPixel (_dfdb +int (_bcgg .GBAtX [0]),_fbc +int (_bcgg .GBAtY [0])))<<1;};};if _bcgg .GBAtOverride [1]{_cdca &=0xDFFF;
if _bcgg .GBAtY [1]==0&&_bcgg .GBAtX [1]>=-int8 (_agce ){_cdca |=(_aggd >>uint (int8 (_afeb )-_bcgg .GBAtX [1]&0x1))<<13;}else {_cdca |=int (_bcgg .getPixel (_dfdb +int (_bcgg .GBAtX [1]),_fbc +int (_bcgg .GBAtY [1])))<<13;};};if _bcgg .GBAtOverride [2]{_cdca &=0xFDFF;
if _bcgg .GBAtY [2]==0&&_bcgg .GBAtX [2]>=-int8 (_agce ){_cdca |=(_aggd >>uint (int8 (_afeb )-_bcgg .GBAtX [2]&0x1))<<9;}else {_cdca |=int (_bcgg .getPixel (_dfdb +int (_bcgg .GBAtX [2]),_fbc +int (_bcgg .GBAtY [2])))<<9;};};if _bcgg .GBAtOverride [3]{_cdca &=0xBFFF;
if _bcgg .GBAtY [3]==0&&_bcgg .GBAtX [3]>=-int8 (_agce ){_cdca |=(_aggd >>uint (int8 (_afeb )-_bcgg .GBAtX [3]&0x1))<<14;}else {_cdca |=int (_bcgg .getPixel (_dfdb +int (_bcgg .GBAtX [3]),_fbc +int (_bcgg .GBAtY [3])))<<14;};};if _bcgg .GBAtOverride [4]{_cdca &=0xEFFF;
if _bcgg .GBAtY [4]==0&&_bcgg .GBAtX [4]>=-int8 (_agce ){_cdca |=(_aggd >>uint (int8 (_afeb )-_bcgg .GBAtX [4]&0x1))<<12;}else {_cdca |=int (_bcgg .getPixel (_dfdb +int (_bcgg .GBAtX [4]),_fbc +int (_bcgg .GBAtY [4])))<<12;};};if _bcgg .GBAtOverride [5]{_cdca &=0xFFDF;
if _bcgg .GBAtY [5]==0&&_bcgg .GBAtX [5]>=-int8 (_agce ){_cdca |=(_aggd >>uint (int8 (_afeb )-_bcgg .GBAtX [5]&0x1))<<5;}else {_cdca |=int (_bcgg .getPixel (_dfdb +int (_bcgg .GBAtX [5]),_fbc +int (_bcgg .GBAtY [5])))<<5;};};if _bcgg .GBAtOverride [6]{_cdca &=0xFFFB;
if _bcgg .GBAtY [6]==0&&_bcgg .GBAtX [6]>=-int8 (_agce ){_cdca |=(_aggd >>uint (int8 (_afeb )-_bcgg .GBAtX [6]&0x1))<<2;}else {_cdca |=int (_bcgg .getPixel (_dfdb +int (_bcgg .GBAtX [6]),_fbc +int (_bcgg .GBAtY [6])))<<2;};};if _bcgg .GBAtOverride [7]{_cdca &=0xFFF7;
if _bcgg .GBAtY [7]==0&&_bcgg .GBAtX [7]>=-int8 (_agce ){_cdca |=(_aggd >>uint (int8 (_afeb )-_bcgg .GBAtX [7]&0x1))<<3;}else {_cdca |=int (_bcgg .getPixel (_dfdb +int (_bcgg .GBAtX [7]),_fbc +int (_bcgg .GBAtY [7])))<<3;};};if _bcgg .GBAtOverride [8]{_cdca &=0xF7FF;
if _bcgg .GBAtY [8]==0&&_bcgg .GBAtX [8]>=-int8 (_agce ){_cdca |=(_aggd >>uint (int8 (_afeb )-_bcgg .GBAtX [8]&0x1))<<11;}else {_cdca |=int (_bcgg .getPixel (_dfdb +int (_bcgg .GBAtX [8]),_fbc +int (_bcgg .GBAtY [8])))<<11;};};if _bcgg .GBAtOverride [9]{_cdca &=0xFFEF;
if _bcgg .GBAtY [9]==0&&_bcgg .GBAtX [9]>=-int8 (_agce ){_cdca |=(_aggd >>uint (int8 (_afeb )-_bcgg .GBAtX [9]&0x1))<<4;}else {_cdca |=int (_bcgg .getPixel (_dfdb +int (_bcgg .GBAtX [9]),_fbc +int (_bcgg .GBAtY [9])))<<4;};};if _bcgg .GBAtOverride [10]{_cdca &=0x7FFF;
if _bcgg .GBAtY [10]==0&&_bcgg .GBAtX [10]>=-int8 (_agce ){_cdca |=(_aggd >>uint (int8 (_afeb )-_bcgg .GBAtX [10]&0x1))<<15;}else {_cdca |=int (_bcgg .getPixel (_dfdb +int (_bcgg .GBAtX [10]),_fbc +int (_bcgg .GBAtY [10])))<<15;};};if _bcgg .GBAtOverride [11]{_cdca &=0xFDFF;
if _bcgg .GBAtY [11]==0&&_bcgg .GBAtX [11]>=-int8 (_agce ){_cdca |=(_aggd >>uint (int8 (_afeb )-_bcgg .GBAtX [11]&0x1))<<10;}else {_cdca |=int (_bcgg .getPixel (_dfdb +int (_bcgg .GBAtX [11]),_fbc +int (_bcgg .GBAtY [11])))<<10;};};return _cdca ;};func (_gcgg *PageInformationSegment )readDefaultPixelValue ()error {_ggff ,_fgbd :=_gcgg ._ccfae .ReadBit ();
if _fgbd !=nil {return _fgbd ;};_gcgg .DefaultPixelValue =uint8 (_ggff &0xf);return nil ;};func (_bee *Header )referenceSize ()uint {switch {case _bee .SegmentNumber <=255:return 1;case _bee .SegmentNumber <=65535:return 2;default:return 4;};};func (_bgfg *SymbolDictionary )readNumberOfNewSymbols ()error {_ebce ,_cffe :=_bgfg ._faab .ReadBits (32);
if _cffe !=nil {return _cffe ;};_bgfg .NumberOfNewSymbols =uint32 (_ebce &_f .MaxUint32 );return nil ;};func (_gebf *TextRegion )blit (_cbfa *_fd .Bitmap ,_deaa int64 )error {if _gebf .IsTransposed ==0&&(_gebf .ReferenceCorner ==2||_gebf .ReferenceCorner ==3){_gebf ._ddbg +=int64 (_cbfa .Width -1);
}else if _gebf .IsTransposed ==1&&(_gebf .ReferenceCorner ==0||_gebf .ReferenceCorner ==2){_gebf ._ddbg +=int64 (_cbfa .Height -1);};_bgga :=_gebf ._ddbg ;if _gebf .IsTransposed ==1{_bgga ,_deaa =_deaa ,_bgga ;};switch _gebf .ReferenceCorner {case 0:_deaa -=int64 (_cbfa .Height -1);
case 2:_deaa -=int64 (_cbfa .Height -1);_bgga -=int64 (_cbfa .Width -1);case 3:_bgga -=int64 (_cbfa .Width -1);};_aacd :=_fd .Blit (_cbfa ,_gebf .RegionBitmap ,int (_bgga ),int (_deaa ),_gebf .CombinationOperator );if _aacd !=nil {return _aacd ;};if _gebf .IsTransposed ==0&&(_gebf .ReferenceCorner ==0||_gebf .ReferenceCorner ==1){_gebf ._ddbg +=int64 (_cbfa .Width -1);
};if _gebf .IsTransposed ==1&&(_gebf .ReferenceCorner ==1||_gebf .ReferenceCorner ==3){_gebf ._ddbg +=int64 (_cbfa .Height -1);};return nil ;};func _gcde (_eaeg *_bc .Reader ,_cebg *Header )*TextRegion {_ggbe :=&TextRegion {_afad :_eaeg ,Header :_cebg ,RegionInfo :NewRegionSegment (_eaeg )};
return _ggbe ;};func (_abf *GenericRefinementRegion )setParameters (_dbge *_af .DecoderStats ,_agb *_af .Decoder ,_bgb int8 ,_bfffc ,_dabd uint32 ,_cec *_fd .Bitmap ,_dcga ,_fdg int32 ,_bbe bool ,_dfd []int8 ,_gce []int8 ){_eb .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _dbge !=nil {_abf ._cb =_dbge ;};if _agb !=nil {_abf ._ce =_agb ;};_abf .TemplateID =_bgb ;_abf .RegionInfo .BitmapWidth =_bfffc ;_abf .RegionInfo .BitmapHeight =_dabd ;_abf .ReferenceBitmap =_cec ;_abf .ReferenceDX =_dcga ;_abf .ReferenceDY =_fdg ;
_abf .IsTPGROn =_bbe ;_abf .GrAtX =_dfd ;_abf .GrAtY =_gce ;_abf .RegionBitmap =nil ;_eb .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_abf );
};func (_aab *Header )writeFlags (_dafg _bc .BinaryWriter )(_gbda error ){const _aedf ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_egdc :=byte (_aab .Type );if _gbda =_dafg .WriteByte (_egdc );_gbda !=nil {return _aaa .Wrap (_gbda ,_aedf ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_aab .RetainFlag &&!_aab .PageAssociationFieldSize {return nil ;};if _gbda =_dafg .SkipBits (-8);_gbda !=nil {return _aaa .Wrap (_gbda ,_aedf ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _cega int ;if _aab .RetainFlag {_cega =1;};if _gbda =_dafg .WriteBit (_cega );_gbda !=nil {return _aaa .Wrap (_gbda ,_aedf ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_cega =0;if _aab .PageAssociationFieldSize {_cega =1;
};if _gbda =_dafg .WriteBit (_cega );_gbda !=nil {return _aaa .Wrap (_gbda ,_aedf ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_dafg .FinishByte ();return nil ;};func (_bbdd *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_fffg ,_feef :=_bbdd ._ccfae .ReadBit ();
if _feef !=nil {return _feef ;};if _fffg ==1{_bbdd ._gdcad =true ;};return nil ;};func (_faed *SymbolDictionary )decodeAggregate (_fgdf ,_geff uint32 )error {var (_cfcf int64 ;_dffcb error ;);if _faed .IsHuffmanEncoded {_cfcf ,_dffcb =_faed .huffDecodeRefAggNInst ();
if _dffcb !=nil {return _dffcb ;};}else {_fcgg ,_fed :=_faed ._beag .DecodeInt (_faed ._gab );if _fed !=nil {return _fed ;};_cfcf =int64 (_fcgg );};if _cfcf > 1{return _faed .decodeThroughTextRegion (_fgdf ,_geff ,uint32 (_cfcf ));}else if _cfcf ==1{return _faed .decodeRefinedSymbol (_fgdf ,_geff );
};return nil ;};func (_fccb Type )String ()string {switch _fccb {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_ced *HalftoneRegion )grayScaleDecoding (_gaec int )([][]int ,error ){var (_gage []int8 ;
_fdgg []int8 ;);if !_ced .IsMMREncoded {_gage =make ([]int8 ,4);_fdgg =make ([]int8 ,4);if _ced .HTemplate <=1{_gage [0]=3;}else if _ced .HTemplate >=2{_gage [0]=2;};_fdgg [0]=-1;_gage [1]=-3;_fdgg [1]=-1;_gage [2]=2;_fdgg [2]=-2;_gage [3]=-2;_fdgg [3]=-2;
};_gfd :=make ([]*_fd .Bitmap ,_gaec );_fbcc :=NewGenericRegion (_ced ._affg );_fbcc .setParametersMMR (_ced .IsMMREncoded ,_ced .DataOffset ,_ced .DataLength ,_ced .HGridHeight ,_ced .HGridWidth ,_ced .HTemplate ,false ,_ced .HSkipEnabled ,_gage ,_fdgg );
_cbce :=_gaec -1;var _eddb error ;_gfd [_cbce ],_eddb =_fbcc .GetRegionBitmap ();if _eddb !=nil {return nil ,_eddb ;};for _cbce > 0{_cbce --;_fbcc .Bitmap =nil ;_gfd [_cbce ],_eddb =_fbcc .GetRegionBitmap ();if _eddb !=nil {return nil ,_eddb ;};if _eddb =_ced .combineGrayscalePlanes (_gfd ,_cbce );
_eddb !=nil {return nil ,_eddb ;};};return _ced .computeGrayScalePlanes (_gfd ,_gaec );};func (_bcc *GenericRefinementRegion )decodeTypicalPredictedLine (_dc ,_ddc ,_gbd ,_ge ,_gdd ,_da int )error {_be :=_dc -int (_bcc .ReferenceDY );_cd :=_bcc .ReferenceBitmap .GetByteIndex (0,_be );
_faa :=_bcc .RegionBitmap .GetByteIndex (0,_dc );var _bff error ;switch _bcc .TemplateID {case 0:_bff =_bcc .decodeTypicalPredictedLineTemplate0 (_dc ,_ddc ,_gbd ,_ge ,_gdd ,_da ,_faa ,_be ,_cd );case 1:_bff =_bcc .decodeTypicalPredictedLineTemplate1 (_dc ,_ddc ,_gbd ,_ge ,_gdd ,_da ,_faa ,_be ,_cd );
};return _bff ;};func (_eda *HalftoneRegion )checkInput ()error {if _eda .IsMMREncoded {if _eda .HTemplate !=0{_eb .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_eda .HTemplate );
};if _eda .HSkipEnabled {_eb .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_eda .HSkipEnabled );
};};return nil ;};func (_ggd *template0 )form (_dff ,_cgf ,_cgge ,_ccf ,_cag int16 )int16 {return (_dff <<10)|(_cgf <<7)|(_cgge <<4)|(_ccf <<1)|_cag ;};func (_gabga *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _ggce ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _gabga .SbHuffRSize ==0{_ecbag ,_defe :=_gd .GetStandardTable (1);if _defe !=nil {return 0,_aaa .Wrap (_defe ,_ggce ,"");};return _ecbag .Decode (_gabga ._afad );};if _gabga ._dafeg ==nil {var (_agaae int ;_degec error ;);if _gabga .SbHuffFS ==3{_agaae ++;
};if _gabga .SbHuffDS ==3{_agaae ++;};if _gabga .SbHuffDT ==3{_agaae ++;};if _gabga .SbHuffRDWidth ==3{_agaae ++;};if _gabga .SbHuffRDHeight ==3{_agaae ++;};if _gabga .SbHuffRDX ==3{_agaae ++;};if _gabga .SbHuffRDY ==3{_agaae ++;};_gabga ._dafeg ,_degec =_gabga .getUserTable (_agaae );
if _degec !=nil {return 0,_aaa .Wrap (_degec ,_ggce ,"");};};_cgdd ,_agag :=_gabga ._dafeg .Decode (_gabga ._afad );if _agag !=nil {return 0,_aaa .Wrap (_agag ,_ggce ,"");};return _cgdd ,nil ;};func (_dbff *Header )writeSegmentDataLength (_bbb _bc .BinaryWriter )(_cfeg int ,_dgb error ){_egfd :=make ([]byte ,4);
_c .BigEndian .PutUint32 (_egfd ,uint32 (_dbff .SegmentDataLength ));if _cfeg ,_dgb =_bbb .Write (_egfd );_dgb !=nil {return 0,_aaa .Wrap (_dgb ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _cfeg ,nil ;};func (_fbb *HalftoneRegion )combineGrayscalePlanes (_gagf []*_fd .Bitmap ,_cdgd int )error {_ccg :=0;for _eaf :=0;_eaf < _gagf [_cdgd ].Height ;_eaf ++{for _gfccd :=0;_gfccd < _gagf [_cdgd ].Width ;_gfccd +=8{_fcdgc ,_cfe :=_gagf [_cdgd +1].GetByte (_ccg );
if _cfe !=nil {return _cfe ;};_edb ,_cfe :=_gagf [_cdgd ].GetByte (_ccg );if _cfe !=nil {return _cfe ;};_cfe =_gagf [_cdgd ].SetByte (_ccg ,_fd .CombineBytes (_edb ,_fcdgc ,_fd .CmbOpXor ));if _cfe !=nil {return _cfe ;};_ccg ++;};};return nil ;};func (_fbge *TextRegion )decodeDfs ()(int64 ,error ){if _fbge .IsHuffmanEncoded {if _fbge .SbHuffFS ==3{if _fbge ._ccbg ==nil {var _acde error ;
_fbge ._ccbg ,_acde =_fbge .getUserTable (0);if _acde !=nil {return 0,_acde ;};};return _fbge ._ccbg .Decode (_fbge ._afad );};_dfagc ,_gaac :=_gd .GetStandardTable (6+int (_fbge .SbHuffFS ));if _gaac !=nil {return 0,_gaac ;};return _dfagc .Decode (_fbge ._afad );
};_gffgc ,_gaece :=_fbge ._aaac .DecodeInt (_fbge ._gfbcf );if _gaece !=nil {return 0,_gaece ;};return int64 (_gffgc ),nil ;};func (_dadba *PageInformationSegment )parseHeader ()(_caff error ){_eb .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _fcg ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _caff !=nil {_fcg +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_caff .Error ();}else {_fcg +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_eb .Log .Trace (_fcg );}();if _caff =_dadba .readWidthAndHeight ();
_caff !=nil {return _caff ;};if _caff =_dadba .readResolution ();_caff !=nil {return _caff ;};_ ,_caff =_dadba ._ccfae .ReadBit ();if _caff !=nil {return _caff ;};if _caff =_dadba .readCombinationOperatorOverrideAllowed ();_caff !=nil {return _caff ;};
if _caff =_dadba .readRequiresAuxiliaryBuffer ();_caff !=nil {return _caff ;};if _caff =_dadba .readCombinationOperator ();_caff !=nil {return _caff ;};if _caff =_dadba .readDefaultPixelValue ();_caff !=nil {return _caff ;};if _caff =_dadba .readContainsRefinement ();
_caff !=nil {return _caff ;};if _caff =_dadba .readIsLossless ();_caff !=nil {return _caff ;};if _caff =_dadba .readIsStriped ();_caff !=nil {return _caff ;};if _caff =_dadba .readMaxStripeSize ();_caff !=nil {return _caff ;};if _caff =_dadba .checkInput ();
_caff !=nil {return _caff ;};_eb .Log .Trace ("\u0025\u0073",_dadba );return nil ;};func (_db *GenericRefinementRegion )decodeOptimized (_afe ,_bf ,_ca ,_ebe ,_age ,_agc ,_bgd int )error {var (_fa error ;_fae int ;_dba int ;);_fgb :=_afe -int (_db .ReferenceDY );
if _afg :=int (-_db .ReferenceDX );_afg > 0{_fae =_afg ;};_ec :=_db .ReferenceBitmap .GetByteIndex (_fae ,_fgb );if _db .ReferenceDX > 0{_dba =int (_db .ReferenceDX );};_agcf :=_db .RegionBitmap .GetByteIndex (_dba ,_afe );switch _db .TemplateID {case 0:_fa =_db .decodeTemplate (_afe ,_bf ,_ca ,_ebe ,_age ,_agc ,_bgd ,_agcf ,_fgb ,_ec ,_db ._ab );
case 1:_fa =_db .decodeTemplate (_afe ,_bf ,_ca ,_ebe ,_age ,_agc ,_bgd ,_agcf ,_fgb ,_ec ,_db ._ac );};return _fa ;};func (_bfdce *SymbolDictionary )encodeSymbols (_baag _bc .BinaryWriter )(_fgcd int ,_adcbe error ){const _ddad ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_bafg :=_bd .New ();_bafg .Init ();_ggfg ,_adcbe :=_bfdce ._febf .SelectByIndexes (_bfdce ._fbad );if _adcbe !=nil {return 0,_aaa .Wrap (_adcbe ,_ddad ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_cade :=map[*_fd .Bitmap ]int {};for _afeg ,_gdeg :=range _ggfg .Values {_cade [_gdeg ]=_afeg ;
};_ggfg .SortByHeight ();var _fafc ,_aaca int ;_dbea ,_adcbe :=_ggfg .GroupByHeight ();if _adcbe !=nil {return 0,_aaa .Wrap (_adcbe ,_ddad ,"");};for _ ,_bcb :=range _dbea .Values {_fge :=_bcb .Values [0].Height ;_eccf :=_fge -_fafc ;if _adcbe =_bafg .EncodeInteger (_bd .IADH ,_eccf );
_adcbe !=nil {return 0,_aaa .Wrapf (_adcbe ,_ddad ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_eccf );};_fafc =_fge ;_ggga ,_fcacb :=_bcb .GroupByWidth ();if _fcacb !=nil {return 0,_aaa .Wrapf (_fcacb ,_ddad ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fge );
};var _agab int ;for _ ,_eged :=range _ggga .Values {for _ ,_cba :=range _eged .Values {_aebc :=_cba .Width ;_dbee :=_aebc -_agab ;if _fcacb =_bafg .EncodeInteger (_bd .IADW ,_dbee );_fcacb !=nil {return 0,_aaa .Wrapf (_fcacb ,_ddad ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_dbee );
};_agab +=_dbee ;if _fcacb =_bafg .EncodeBitmap (_cba ,false );_fcacb !=nil {return 0,_aaa .Wrapf (_fcacb ,_ddad ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_fge ,_aebc );};_edae :=_cade [_cba ];_bfdce ._dced [_edae ]=_aaca ;
_aaca ++;};};if _fcacb =_bafg .EncodeOOB (_bd .IADW );_fcacb !=nil {return 0,_aaa .Wrap (_fcacb ,_ddad ,"\u0049\u0041\u0044\u0057");};};if _adcbe =_bafg .EncodeInteger (_bd .IAEX ,0);_adcbe !=nil {return 0,_aaa .Wrap (_adcbe ,_ddad ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _adcbe =_bafg .EncodeInteger (_bd .IAEX ,len (_bfdce ._fbad ));_adcbe !=nil {return 0,_aaa .Wrap (_adcbe ,_ddad ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_bafg .Final ();_gceb ,_adcbe :=_bafg .WriteTo (_baag );
if _adcbe !=nil {return 0,_aaa .Wrap (_adcbe ,_ddad ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_gceb ),nil ;};func (_gbbce *SymbolDictionary )setCodingStatistics ()error {if _gbbce ._ffge ==nil {_gbbce ._ffge =_af .NewStats (512,1);};if _gbbce ._bdcdb ==nil {_gbbce ._bdcdb =_af .NewStats (512,1);};if _gbbce ._ccgf ==nil {_gbbce ._ccgf =_af .NewStats (512,1);
};if _gbbce ._gab ==nil {_gbbce ._gab =_af .NewStats (512,1);};if _gbbce ._abg ==nil {_gbbce ._abg =_af .NewStats (512,1);};if _gbbce .UseRefinementAggregation &&_gbbce ._aeae ==nil {_gbbce ._aeae =_af .NewStats (1<<uint (_gbbce ._ccgag ),1);_gbbce ._eadc =_af .NewStats (512,1);
_gbbce ._cgdgb =_af .NewStats (512,1);};if _gbbce ._dfed ==nil {_gbbce ._dfed =_af .NewStats (65536,1);};if _gbbce ._beag ==nil {var _faag error ;_gbbce ._beag ,_faag =_af .New (_gbbce ._faab );if _faag !=nil {return _faag ;};};return nil ;};func (_fbda *GenericRegion )decodeTemplate2 (_dffe ,_abbf ,_cgdfa int ,_afed ,_bdgf int )(_bef error ){const _bbef ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_abfb ,_dada int ;_aeg ,_gfb int ;_cdga byte ;_efdg ,_ccc int ;);if _dffe >=1{_cdga ,_bef =_fbda .Bitmap .GetByte (_bdgf );if _bef !=nil {return _aaa .Wrap (_bef ,_bbef ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_aeg =int (_cdga );};if _dffe >=2{_cdga ,_bef =_fbda .Bitmap .GetByte (_bdgf -_fbda .Bitmap .RowStride );if _bef !=nil {return _aaa .Wrap (_bef ,_bbef ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_gfb =int (_cdga )<<4;
};_abfb =(_aeg >>3&0x7c)|(_gfb >>3&0x380);for _cacf :=0;_cacf < _cgdfa ;_cacf =_efdg {var (_agea byte ;_aed int ;);_efdg =_cacf +8;if _aca :=_abbf -_cacf ;_aca > 8{_aed =8;}else {_aed =_aca ;};if _dffe > 0{_aeg <<=8;if _efdg < _abbf {_cdga ,_bef =_fbda .Bitmap .GetByte (_bdgf +1);
if _bef !=nil {return _aaa .Wrap (_bef ,_bbef ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_aeg |=int (_cdga );};};if _dffe > 1{_gfb <<=8;if _efdg < _abbf {_cdga ,_bef =_fbda .Bitmap .GetByte (_bdgf -_fbda .Bitmap .RowStride +1);
if _bef !=nil {return _aaa .Wrap (_bef ,_bbef ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_gfb |=int (_cdga )<<4;};};for _dcad :=0;_dcad < _aed ;_dcad ++{_cad :=uint (10-_dcad );if _fbda ._fdcc {_dada =_fbda .overrideAtTemplate2 (_abfb ,_cacf +_dcad ,_dffe ,int (_agea ),_dcad );
_fbda ._fde .SetIndex (int32 (_dada ));}else {_fbda ._fde .SetIndex (int32 (_abfb ));};_ccc ,_bef =_fbda ._gcbc .DecodeBit (_fbda ._fde );if _bef !=nil {return _aaa .Wrap (_bef ,_bbef ,"");};_agea |=byte (_ccc <<uint (7-_dcad ));_abfb =((_abfb &0x1bd)<<1)|_ccc |((_aeg >>_cad )&0x4)|((_gfb >>_cad )&0x80);
};if _acdb :=_fbda .Bitmap .SetByte (_afed ,_agea );_acdb !=nil {return _aaa .Wrap (_acdb ,_bbef ,"");};_afed ++;_bdgf ++;};return nil ;};func (_cdfg *GenericRegion )setOverrideFlag (_gecf int ){_cdfg .GBAtOverride [_gecf ]=true ;_cdfg ._fdcc =true ;};
func (_bfg *GenericRegion )GetRegionBitmap ()(_cecb *_fd .Bitmap ,_begg error ){if _bfg .Bitmap !=nil {return _bfg .Bitmap ,nil ;};if _bfg .IsMMREncoded {if _bfg ._fdd ==nil {_bfg ._fdd ,_begg =_fe .New (_bfg ._eef ,int (_bfg .RegionSegment .BitmapWidth ),int (_bfg .RegionSegment .BitmapHeight ),_bfg .DataOffset ,_bfg .DataLength );
if _begg !=nil {return nil ,_begg ;};};_bfg .Bitmap ,_begg =_bfg ._fdd .UncompressMMR ();return _bfg .Bitmap ,_begg ;};if _begg =_bfg .updateOverrideFlags ();_begg !=nil {return nil ,_begg ;};var _fdb int ;if _bfg ._gcbc ==nil {_bfg ._gcbc ,_begg =_af .New (_bfg ._eef );
if _begg !=nil {return nil ,_begg ;};};if _bfg ._fde ==nil {_bfg ._fde =_af .NewStats (65536,1);};_bfg .Bitmap =_fd .New (int (_bfg .RegionSegment .BitmapWidth ),int (_bfg .RegionSegment .BitmapHeight ));_fbd :=int (uint32 (_bfg .Bitmap .Width +7)&(^uint32 (7)));
for _fdae :=0;_fdae < _bfg .Bitmap .Height ;_fdae ++{if _bfg .IsTPGDon {var _ffd int ;_ffd ,_begg =_bfg .decodeSLTP ();if _begg !=nil {return nil ,_begg ;};_fdb ^=_ffd ;};if _fdb ==1{if _fdae > 0{if _begg =_bfg .copyLineAbove (_fdae );_begg !=nil {return nil ,_begg ;
};};}else {if _begg =_bfg .decodeLine (_fdae ,_bfg .Bitmap .Width ,_fbd );_begg !=nil {return nil ,_begg ;};};};return _bfg .Bitmap ,nil ;};func (_fegd *SymbolDictionary )decodeRefinedSymbol (_degfd ,_gfe uint32 )error {var (_bbbf int ;_efdd ,_ggaca int32 ;
);if _fegd .IsHuffmanEncoded {_bdee ,_ggacaf :=_fegd ._faab .ReadBits (byte (_fegd ._ccgag ));if _ggacaf !=nil {return _ggacaf ;};_bbbf =int (_bdee );_cgbg ,_ggacaf :=_gd .GetStandardTable (15);if _ggacaf !=nil {return _ggacaf ;};_gbb ,_ggacaf :=_cgbg .Decode (_fegd ._faab );
if _ggacaf !=nil {return _ggacaf ;};_efdd =int32 (_gbb );_gbb ,_ggacaf =_cgbg .Decode (_fegd ._faab );if _ggacaf !=nil {return _ggacaf ;};_ggaca =int32 (_gbb );_cgbg ,_ggacaf =_gd .GetStandardTable (1);if _ggacaf !=nil {return _ggacaf ;};if _ ,_ggacaf =_cgbg .Decode (_fegd ._faab );
_ggacaf !=nil {return _ggacaf ;};_fegd ._faab .Align ();}else {_ccce ,_gfga :=_fegd ._beag .DecodeIAID (uint64 (_fegd ._ccgag ),_fegd ._aeae );if _gfga !=nil {return _gfga ;};_bbbf =int (_ccce );_efdd ,_gfga =_fegd ._beag .DecodeInt (_fegd ._eadc );if _gfga !=nil {return _gfga ;
};_ggaca ,_gfga =_fegd ._beag .DecodeInt (_fegd ._cgdgb );if _gfga !=nil {return _gfga ;};};if _cegc :=_fegd .setSymbolsArray ();_cegc !=nil {return _cegc ;};_cbeag :=_fegd ._adae [_bbbf ];if _gfac :=_fegd .decodeNewSymbols (_degfd ,_gfe ,_cbeag ,_efdd ,_ggaca );
_gfac !=nil {return _gfac ;};if _fegd .IsHuffmanEncoded {_fegd ._faab .Align ();};return nil ;};func (_bfga *PageInformationSegment )CombinationOperator ()_fd .CombinationOperator {return _bfga ._cbea ;};func (_gdda *TableSegment )HtHigh ()int32 {return _gdda ._effd };
func (_dggd *PageInformationSegment )readMaxStripeSize ()error {_gfbg ,_ecgc :=_dggd ._ccfae .ReadBits (15);if _ecgc !=nil {return _ecgc ;};_dggd .MaxStripeSize =uint16 (_gfbg &_f .MaxUint16 );return nil ;};func (_fddd *GenericRegion )setParametersWithAt (_gedb bool ,_ddcg byte ,_adca ,_cgfbg bool ,_edg ,_gccf []int8 ,_ecbc ,_efgf uint32 ,_eaeb *_af .DecoderStats ,_afb *_af .Decoder ){_fddd .IsMMREncoded =_gedb ;
_fddd .GBTemplate =_ddcg ;_fddd .IsTPGDon =_adca ;_fddd .GBAtX =_edg ;_fddd .GBAtY =_gccf ;_fddd .RegionSegment .BitmapHeight =_efgf ;_fddd .RegionSegment .BitmapWidth =_ecbc ;_fddd ._fdd =nil ;_fddd .Bitmap =nil ;if _eaeb !=nil {_fddd ._fde =_eaeb ;};
if _afb !=nil {_fddd ._gcbc =_afb ;};_eb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_fddd );
};func (_ccga *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_feae ,_gfcf :=_ccga ._ccfae .ReadBit ();if _gfcf !=nil {return _gfcf ;};if _feae ==1{_ccga ._fgbb =true ;};return nil ;};func (_fdeg *GenericRegion )setParameters (_cgfg bool ,_bfcf ,_fcbg int64 ,_eacg ,_bgbe uint32 ){_fdeg .IsMMREncoded =_cgfg ;
_fdeg .DataOffset =_bfcf ;_fdeg .DataLength =_fcbg ;_fdeg .RegionSegment .BitmapHeight =_eacg ;_fdeg .RegionSegment .BitmapWidth =_bgbe ;_fdeg ._fdd =nil ;_fdeg .Bitmap =nil ;};func (_fgdcf *TextRegion )String ()string {_bcgc :=&_aa .Builder {};_bcgc .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_bcgc .WriteString (_fgdcf .RegionInfo .String ()+"\u000a");_bcgc .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_fgdcf .SbrTemplate ));_bcgc .WriteString (_b .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_fgdcf .SbDsOffset ));
_bcgc .WriteString (_b .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_fgdcf .DefaultPixel ));_bcgc .WriteString (_b .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_fgdcf .CombinationOperator ));
_bcgc .WriteString (_b .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_fgdcf .IsTransposed ));_bcgc .WriteString (_b .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_fgdcf .ReferenceCorner ));
_bcgc .WriteString (_b .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_fgdcf .UseRefinement ));_bcgc .WriteString (_b .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_fgdcf .IsHuffmanEncoded ));
if _fgdcf .IsHuffmanEncoded {_bcgc .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fgdcf .SbHuffRSize ));_bcgc .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_fgdcf .SbHuffRDY ));
_bcgc .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_fgdcf .SbHuffRDX ));_bcgc .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_fgdcf .SbHuffRDHeight ));
_bcgc .WriteString (_b .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_fgdcf .SbHuffRDWidth ));_bcgc .WriteString (_b .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_fgdcf .SbHuffDT ));
_bcgc .WriteString (_b .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_fgdcf .SbHuffDS ));_bcgc .WriteString (_b .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_fgdcf .SbHuffFS ));
};_bcgc .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_fgdcf .SbrATX ));_bcgc .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_fgdcf .SbrATY ));
_bcgc .WriteString (_b .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_fgdcf .NumberOfSymbolInstances ));_bcgc .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_fgdcf .SbrATX ));
return _bcgc .String ();};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_bc .Reader ;
SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_aeag *TextRegion )decodeDT ()(_bfaa int64 ,_fgca error ){if _aeag .IsHuffmanEncoded {if _aeag .SbHuffDT ==3{_bfaa ,_fgca =_aeag ._beaef .Decode (_aeag ._afad );if _fgca !=nil {return 0,_fgca ;
};}else {var _gbcb _gd .Tabler ;_gbcb ,_fgca =_gd .GetStandardTable (11+int (_aeag .SbHuffDT ));if _fgca !=nil {return 0,_fgca ;};_bfaa ,_fgca =_gbcb .Decode (_aeag ._afad );if _fgca !=nil {return 0,_fgca ;};};}else {var _effb int32 ;_effb ,_fgca =_aeag ._aaac .DecodeInt (_aeag ._cffd );
if _fgca !=nil {return ;};_bfaa =int64 (_effb );};_bfaa *=int64 (_aeag .SbStrips );return _bfaa ,nil ;};func (_fce *PageInformationSegment )readResolution ()error {_aefd ,_cbfb :=_fce ._ccfae .ReadBits (32);if _cbfb !=nil {return _cbfb ;};_fce .ResolutionX =int (_aefd &_f .MaxInt32 );
_aefd ,_cbfb =_fce ._ccfae .ReadBits (32);if _cbfb !=nil {return _cbfb ;};_fce .ResolutionY =int (_aefd &_f .MaxInt32 );return nil ;};func (_ggbd *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _ggbd ._gdcad };func (_cab *GenericRegion )decodeSLTP ()(int ,error ){switch _cab .GBTemplate {case 0:_cab ._fde .SetIndex (0x9B25);
case 1:_cab ._fde .SetIndex (0x795);case 2:_cab ._fde .SetIndex (0xE5);case 3:_cab ._fde .SetIndex (0x195);};return _cab ._gcbc .DecodeBit (_cab ._fde );};func (_ecgcf *SymbolDictionary )checkInput ()error {if _ecgcf .SdHuffDecodeHeightSelection ==2{_eb .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_ecgcf .SdHuffDecodeHeightSelection );
};if _ecgcf .SdHuffDecodeWidthSelection ==2{_eb .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_ecgcf .SdHuffDecodeWidthSelection );
};if _ecgcf .IsHuffmanEncoded {if _ecgcf .SdTemplate !=0{_eb .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_ecgcf .SdTemplate );
};if !_ecgcf .UseRefinementAggregation {if !_ecgcf .UseRefinementAggregation {if _ecgcf ._dede {_eb .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_ecgcf ._dede =false ;};if _ecgcf ._fbdf {_eb .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_ecgcf ._fbdf =false ;};};};}else {if _ecgcf .SdHuffBMSizeSelection !=0{_eb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ecgcf .SdHuffBMSizeSelection =0;};if _ecgcf .SdHuffDecodeWidthSelection !=0{_eb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_ecgcf .SdHuffDecodeWidthSelection =0;};if _ecgcf .SdHuffDecodeHeightSelection !=0{_eb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ecgcf .SdHuffDecodeHeightSelection =0;};};if !_ecgcf .UseRefinementAggregation {if _ecgcf .SdrTemplate !=0{_eb .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ecgcf .SdrTemplate );
_ecgcf .SdrTemplate =0;};};if !_ecgcf .IsHuffmanEncoded ||!_ecgcf .UseRefinementAggregation {if _ecgcf .SdHuffAggInstanceSelection {_eb .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ecgcf .SdHuffAggInstanceSelection );
};};return nil ;};func (_fded *TextRegion )initSymbols ()error {const _agbf ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_bddb :=range _fded .Header .RTSegments {if _bddb ==nil {return _aaa .Error (_agbf ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _bddb .Type ==0{_fdef ,_dfagg :=_bddb .GetSegmentData ();if _dfagg !=nil {return _aaa .Wrap (_dfagg ,_agbf ,"");};_efcec ,_cadb :=_fdef .(*SymbolDictionary );if !_cadb {return _aaa .Error (_agbf ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_efcec ._aeae =_fded ._dffbg ;_febcd ,_dfagg :=_efcec .GetDictionary ();if _dfagg !=nil {return _aaa .Wrap (_dfagg ,_agbf ,"");};_fded .Symbols =append (_fded .Symbols ,_febcd ...);};};_fded .NumberOfSymbols =uint32 (len (_fded .Symbols ));return nil ;
};func (_eeceb *TextRegion )decodeRdy ()(int64 ,error ){const _bcbb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _eeceb .IsHuffmanEncoded {if _eeceb .SbHuffRDY ==3{if _eeceb ._bdac ==nil {var (_gaafb int ;_beff error ;);if _eeceb .SbHuffFS ==3{_gaafb ++;
};if _eeceb .SbHuffDS ==3{_gaafb ++;};if _eeceb .SbHuffDT ==3{_gaafb ++;};if _eeceb .SbHuffRDWidth ==3{_gaafb ++;};if _eeceb .SbHuffRDHeight ==3{_gaafb ++;};if _eeceb .SbHuffRDX ==3{_gaafb ++;};_eeceb ._bdac ,_beff =_eeceb .getUserTable (_gaafb );if _beff !=nil {return 0,_aaa .Wrap (_beff ,_bcbb ,"");
};};return _eeceb ._bdac .Decode (_eeceb ._afad );};_cbfbc ,_befe :=_gd .GetStandardTable (14+int (_eeceb .SbHuffRDY ));if _befe !=nil {return 0,_befe ;};return _cbfbc .Decode (_eeceb ._afad );};_dffbd ,_ffcg :=_eeceb ._aaac .DecodeInt (_eeceb ._cbceb );
if _ffcg !=nil {return 0,_aaa .Wrap (_ffcg ,_bcbb ,"");};return int64 (_dffbd ),nil ;};var (_ggac Segmenter ;_dded =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _ggac },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _ggac },TProfiles :func ()Segmenter {return _ggac },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _ggac },TBitmap :func ()Segmenter {return _ggac }};
);func (_aaf *TextRegion )decodeRdx ()(int64 ,error ){const _agabe ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _aaf .IsHuffmanEncoded {if _aaf .SbHuffRDX ==3{if _aaf ._cdgb ==nil {var (_gaaff int ;_fced error ;);if _aaf .SbHuffFS ==3{_gaaff ++;};
if _aaf .SbHuffDS ==3{_gaaff ++;};if _aaf .SbHuffDT ==3{_gaaff ++;};if _aaf .SbHuffRDWidth ==3{_gaaff ++;};if _aaf .SbHuffRDHeight ==3{_gaaff ++;};_aaf ._cdgb ,_fced =_aaf .getUserTable (_gaaff );if _fced !=nil {return 0,_aaa .Wrap (_fced ,_agabe ,"");
};};return _aaf ._cdgb .Decode (_aaf ._afad );};_fgff ,_fgbe :=_gd .GetStandardTable (14+int (_aaf .SbHuffRDX ));if _fgbe !=nil {return 0,_aaa .Wrap (_fgbe ,_agabe ,"");};return _fgff .Decode (_aaf ._afad );};_fegc ,_ceefg :=_aaf ._aaac .DecodeInt (_aaf ._bdab );
if _ceefg !=nil {return 0,_aaa .Wrap (_ceefg ,_agabe ,"");};return int64 (_fegc ),nil ;};func (_ddadd *TextRegion )setParameters (_cbec *_af .Decoder ,_efff ,_dffa bool ,_bfbd ,_fbgc uint32 ,_ddacc uint32 ,_beed int8 ,_afea uint32 ,_gfcab int8 ,_eadec _fd .CombinationOperator ,_fcef int8 ,_ggdg int16 ,_edaf ,_bccdf ,_efda ,_dbgde ,_dbbe ,_dggeg ,_edab ,_cdaa ,_beeb ,_dcaa int8 ,_fffe ,_becc []int8 ,_gfee []*_fd .Bitmap ,_gabb int8 ){_ddadd ._aaac =_cbec ;
_ddadd .IsHuffmanEncoded =_efff ;_ddadd .UseRefinement =_dffa ;_ddadd .RegionInfo .BitmapWidth =_bfbd ;_ddadd .RegionInfo .BitmapHeight =_fbgc ;_ddadd .NumberOfSymbolInstances =_ddacc ;_ddadd .SbStrips =_beed ;_ddadd .NumberOfSymbols =_afea ;_ddadd .DefaultPixel =_gfcab ;
_ddadd .CombinationOperator =_eadec ;_ddadd .IsTransposed =_fcef ;_ddadd .ReferenceCorner =_ggdg ;_ddadd .SbDsOffset =_edaf ;_ddadd .SbHuffFS =_bccdf ;_ddadd .SbHuffDS =_efda ;_ddadd .SbHuffDT =_dbgde ;_ddadd .SbHuffRDWidth =_dbbe ;_ddadd .SbHuffRDHeight =_dggeg ;
_ddadd .SbHuffRSize =_beeb ;_ddadd .SbHuffRDX =_edab ;_ddadd .SbHuffRDY =_cdaa ;_ddadd .SbrTemplate =_dcaa ;_ddadd .SbrATX =_fffe ;_ddadd .SbrATY =_becc ;_ddadd .Symbols =_gfee ;_ddadd ._bfdg =_gabb ;};func NewHeader (d Documenter ,r *_bc .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_cfag :=&Header {Reader :r };
if _fgfc :=_cfag .parse (d ,r ,offset ,organizationType );_fgfc !=nil {return nil ,_aaa .Wrap (_fgfc ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _cfag ,nil ;};func (_efdf *SymbolDictionary )Encode (w _bc .BinaryWriter )(_ecdg int ,_gaeb error ){const _degd ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _efdf ==nil {return 0,_aaa .Error (_degd ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _ecdg ,_gaeb =_efdf .encodeFlags (w );_gaeb !=nil {return _ecdg ,_aaa .Wrap (_gaeb ,_degd ,"");
};_ccda ,_gaeb :=_efdf .encodeATFlags (w );if _gaeb !=nil {return _ecdg ,_aaa .Wrap (_gaeb ,_degd ,"");};_ecdg +=_ccda ;if _ccda ,_gaeb =_efdf .encodeRefinementATFlags (w );_gaeb !=nil {return _ecdg ,_aaa .Wrap (_gaeb ,_degd ,"");};_ecdg +=_ccda ;if _ccda ,_gaeb =_efdf .encodeNumSyms (w );
_gaeb !=nil {return _ecdg ,_aaa .Wrap (_gaeb ,_degd ,"");};_ecdg +=_ccda ;if _ccda ,_gaeb =_efdf .encodeSymbols (w );_gaeb !=nil {return _ecdg ,_aaa .Wrap (_gaeb ,_degd ,"");};_ecdg +=_ccda ;return _ecdg ,nil ;};func (_dbfcc *SymbolDictionary )encodeNumSyms (_bgbc _bc .BinaryWriter )(_cbff int ,_bbbe error ){const _dfb ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_gfad :=make ([]byte ,4);_c .BigEndian .PutUint32 (_gfad ,_dbfcc .NumberOfExportedSymbols );if _cbff ,_bbbe =_bgbc .Write (_gfad );_bbbe !=nil {return _cbff ,_aaa .Wrap (_bbbe ,_dfb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_c .BigEndian .PutUint32 (_gfad ,_dbfcc .NumberOfNewSymbols );_dbed ,_bbbe :=_bgbc .Write (_gfad );if _bbbe !=nil {return _cbff ,_aaa .Wrap (_bbbe ,_dfb ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _cbff +_dbed ,nil ;};func (_bgee *TextRegion )readAmountOfSymbolInstances ()error {_dbagf ,_ggdb :=_bgee ._afad .ReadBits (32);
if _ggdb !=nil {return _ggdb ;};_bgee .NumberOfSymbolInstances =uint32 (_dbagf &_f .MaxUint32 );_bgbd :=_bgee .RegionInfo .BitmapWidth *_bgee .RegionInfo .BitmapHeight ;if _bgbd < _bgee .NumberOfSymbolInstances {_eb .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_bgbd ,_bgee .NumberOfSymbolInstances );
_bgee .NumberOfSymbolInstances =_bgbd ;};return nil ;};type templater interface{form (_ebf ,_gcd ,_ade ,_cbe ,_fec int16 )int16 ;setIndex (_egbg *_af .DecoderStats );};func (_fcc *GenericRefinementRegion )GetRegionBitmap ()(*_fd .Bitmap ,error ){var _add error ;
_eb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _add !=nil {_eb .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_add );
}else {_eb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _fcc .RegionBitmap !=nil {return _fcc .RegionBitmap ,nil ;};_eg :=0;if _fcc .ReferenceBitmap ==nil {_fcc .ReferenceBitmap ,_add =_fcc .getGrReference ();if _add !=nil {return nil ,_add ;};};if _fcc ._ce ==nil {_fcc ._ce ,_add =_af .New (_fcc ._df );
if _add !=nil {return nil ,_add ;};};if _fcc ._cb ==nil {_fcc ._cb =_af .NewStats (8192,1);};_fcc .RegionBitmap =_fd .New (int (_fcc .RegionInfo .BitmapWidth ),int (_fcc .RegionInfo .BitmapHeight ));if _fcc .TemplateID ==0{if _add =_fcc .updateOverride ();
_add !=nil {return nil ,_add ;};};_bb :=(_fcc .RegionBitmap .Width +7)&-8;var _bg int ;if _fcc .IsTPGROn {_bg =int (-_fcc .ReferenceDY )*_fcc .ReferenceBitmap .RowStride ;};_bde :=_bg +1;for _de :=0;_de < _fcc .RegionBitmap .Height ;_de ++{if _fcc .IsTPGROn {_eae ,_dd :=_fcc .decodeSLTP ();
if _dd !=nil {return nil ,_dd ;};_eg ^=_eae ;};if _eg ==0{_add =_fcc .decodeOptimized (_de ,_fcc .RegionBitmap .Width ,_fcc .RegionBitmap .RowStride ,_fcc .ReferenceBitmap .RowStride ,_bb ,_bg ,_bde );if _add !=nil {return nil ,_add ;};}else {_add =_fcc .decodeTypicalPredictedLine (_de ,_fcc .RegionBitmap .Width ,_fcc .RegionBitmap .RowStride ,_fcc .ReferenceBitmap .RowStride ,_bb ,_bg );
if _add !=nil {return nil ,_add ;};};};return _fcc .RegionBitmap ,nil ;};func (_gffaf *TextRegion )getUserTable (_ffbb int )(_gd .Tabler ,error ){const _cecda ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _bed int ;for _ ,_fffgb :=range _gffaf .Header .RTSegments {if _fffgb .Type ==53{if _bed ==_ffbb {_daadf ,_badg :=_fffgb .GetSegmentData ();
if _badg !=nil {return nil ,_badg ;};_adaa ,_gdag :=_daadf .(*TableSegment );if !_gdag {_eb .Log .Debug (_b .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_fffgb .SegmentNumber ));
return nil ,_aaa .Error (_cecda ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _gd .NewEncodedTable (_adaa );};_bed ++;};};return nil ,nil ;};type Segmenter interface{Init (_agcg *Header ,_agcc *_bc .Reader )error ;};func (_fdag *GenericRegion )GetRegionInfo ()*RegionSegment {return _fdag .RegionSegment };func (_caec *TextRegion )readHuffmanFlags ()error {var (_geeg int ;
_acfd uint64 ;_fbceg error ;);_ ,_fbceg =_caec ._afad .ReadBit ();if _fbceg !=nil {return _fbceg ;};_geeg ,_fbceg =_caec ._afad .ReadBit ();if _fbceg !=nil {return _fbceg ;};_caec .SbHuffRSize =int8 (_geeg );_acfd ,_fbceg =_caec ._afad .ReadBits (2);if _fbceg !=nil {return _fbceg ;
};_caec .SbHuffRDY =int8 (_acfd )&0xf;_acfd ,_fbceg =_caec ._afad .ReadBits (2);if _fbceg !=nil {return _fbceg ;};_caec .SbHuffRDX =int8 (_acfd )&0xf;_acfd ,_fbceg =_caec ._afad .ReadBits (2);if _fbceg !=nil {return _fbceg ;};_caec .SbHuffRDHeight =int8 (_acfd )&0xf;
_acfd ,_fbceg =_caec ._afad .ReadBits (2);if _fbceg !=nil {return _fbceg ;};_caec .SbHuffRDWidth =int8 (_acfd )&0xf;_acfd ,_fbceg =_caec ._afad .ReadBits (2);if _fbceg !=nil {return _fbceg ;};_caec .SbHuffDT =int8 (_acfd )&0xf;_acfd ,_fbceg =_caec ._afad .ReadBits (2);
if _fbceg !=nil {return _fbceg ;};_caec .SbHuffDS =int8 (_acfd )&0xf;_acfd ,_fbceg =_caec ._afad .ReadBits (2);if _fbceg !=nil {return _fbceg ;};_caec .SbHuffFS =int8 (_acfd )&0xf;return nil ;};type Type int ;func (_agcfg *SymbolDictionary )setExportedSymbols (_fead []int ){for _fcdab :=uint32 (0);
_fcdab < _agcfg ._fdca +_agcfg .NumberOfNewSymbols ;_fcdab ++{if _fead [_fcdab ]==1{var _efbb *_fd .Bitmap ;if _fcdab < _agcfg ._fdca {_efbb =_agcfg ._feee [_fcdab ];}else {_efbb =_agcfg ._adga [_fcdab -_agcfg ._fdca ];};_eb .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_efbb );
_agcfg ._agac =append (_agcfg ._agac ,_efbb );};};};func (_ceb *PatternDictionary )readPatternWidthAndHeight ()error {_dbbc ,_gaeg :=_ceb ._gcbae .ReadByte ();if _gaeg !=nil {return _gaeg ;};_ceb .HdpWidth =_dbbc ;_dbbc ,_gaeg =_ceb ._gcbae .ReadByte ();
if _gaeg !=nil {return _gaeg ;};_ceb .HdpHeight =_dbbc ;return nil ;};type SymbolDictionary struct{_faab *_bc .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_dede bool ;_fbdf bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;
SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_fdca uint32 ;_feee []*_fd .Bitmap ;
_edfc uint32 ;_adga []*_fd .Bitmap ;_dgfg _gd .Tabler ;_fbcg _gd .Tabler ;_adda _gd .Tabler ;_eegc _gd .Tabler ;_agac []*_fd .Bitmap ;_adae []*_fd .Bitmap ;_beag *_af .Decoder ;_ecd *TextRegion ;_ccgd *GenericRegion ;_deed *GenericRefinementRegion ;_dfed *_af .DecoderStats ;
_bdcdb *_af .DecoderStats ;_ccgf *_af .DecoderStats ;_gab *_af .DecoderStats ;_abg *_af .DecoderStats ;_eadc *_af .DecoderStats ;_cgdgb *_af .DecoderStats ;_ffge *_af .DecoderStats ;_aeae *_af .DecoderStats ;_ccgag int8 ;_febf *_fd .Bitmaps ;_fbad []int ;
_dced map[int ]int ;_bdfa bool ;};func (_egec *PageInformationSegment )Init (h *Header ,r *_bc .Reader )(_bccd error ){_egec ._ccfae =r ;if _bccd =_egec .parseHeader ();_bccd !=nil {return _aaa .Wrap (_bccd ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_agaf *TableSegment )HtOOB ()int32 {return _agaf ._cccg };func (_eadaf *PageInformationSegment )readWidthAndHeight ()error {_feed ,_dffc :=_eadaf ._ccfae .ReadBits (32);if _dffc !=nil {return _dffc ;};_eadaf .PageBMWidth =int (_feed &_f .MaxInt32 );
_feed ,_dffc =_eadaf ._ccfae .ReadBits (32);if _dffc !=nil {return _dffc ;};_eadaf .PageBMHeight =int (_feed &_f .MaxInt32 );return nil ;};func (_daa *GenericRegion )String ()string {_dbgd :=&_aa .Builder {};_dbgd .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_dbgd .WriteString (_daa .RegionSegment .String ()+"\u000a");_dbgd .WriteString (_b .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_daa .UseExtTemplates ));_dbgd .WriteString (_b .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_daa .IsTPGDon ));
_dbgd .WriteString (_b .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_daa .GBTemplate ));_dbgd .WriteString (_b .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_daa .IsMMREncoded ));
_dbgd .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_daa .GBAtX ));_dbgd .WriteString (_b .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_daa .GBAtY ));
_dbgd .WriteString (_b .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_daa .GBAtOverride ));return _dbgd .String ();};func (_ceab *HalftoneRegion )computeY (_caga ,_eabg int )int {return _ceab .shiftAndFill (int (_ceab .HGridY )+_caga *int (_ceab .HRegionX )-_eabg *int (_ceab .HRegionY ));
};func (_bcgf *PageInformationSegment )checkInput ()error {if _bcgf .PageBMHeight ==_f .MaxInt32 {if !_bcgf .IsStripe {_eb .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_dg *GenericRefinementRegion )getGrReference ()(*_fd .Bitmap ,error ){segments :=_dg ._ace .RTSegments ;if len (segments )==0{return nil ,_cg .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_acf ,_gff :=segments [0].GetSegmentData ();if _gff !=nil {return nil ,_gff ;};_fda ,_fb :=_acf .(Regioner );if !_fb {return nil ,_b .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_acf );
};return _fda .GetRegionBitmap ();};type EndOfStripe struct{_gf *_bc .Reader ;_ef int ;};func (_gbf *GenericRegion )parseHeader ()(_gbdd error ){_eb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _gbdd !=nil {_eb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_gbdd );
}else {_eb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_gac int ;_bdc uint64 ;);if _gbdd =_gbf .RegionSegment .parseHeader ();_gbdd !=nil {return _gbdd ;};if _ ,_gbdd =_gbf ._eef .ReadBits (3);_gbdd !=nil {return _gbdd ;};_gac ,_gbdd =_gbf ._eef .ReadBit ();if _gbdd !=nil {return _gbdd ;};if _gac ==1{_gbf .UseExtTemplates =true ;
};_gac ,_gbdd =_gbf ._eef .ReadBit ();if _gbdd !=nil {return _gbdd ;};if _gac ==1{_gbf .IsTPGDon =true ;};_bdc ,_gbdd =_gbf ._eef .ReadBits (2);if _gbdd !=nil {return _gbdd ;};_gbf .GBTemplate =byte (_bdc &0xf);_gac ,_gbdd =_gbf ._eef .ReadBit ();if _gbdd !=nil {return _gbdd ;
};if _gac ==1{_gbf .IsMMREncoded =true ;};if !_gbf .IsMMREncoded {_fga :=1;if _gbf .GBTemplate ==0{_fga =4;if _gbf .UseExtTemplates {_fga =12;};};if _gbdd =_gbf .readGBAtPixels (_fga );_gbdd !=nil {return _gbdd ;};};if _gbdd =_gbf .computeSegmentDataStructure ();
_gbdd !=nil {return _gbdd ;};_eb .Log .Trace ("\u0025\u0073",_gbf );return nil ;};func (_fecb *PageInformationSegment )readIsLossless ()error {_egdb ,_eade :=_fecb ._ccfae .ReadBit ();if _eade !=nil {return _eade ;};if _egdb ==1{_fecb .IsLossless =true ;
};return nil ;};func (_eecb *template0 )setIndex (_ege *_af .DecoderStats ){_ege .SetIndex (0x100)};var _ templater =&template0 {};func (_fdfe *TextRegion )decodeRI ()(int64 ,error ){if !_fdfe .UseRefinement {return 0,nil ;};if _fdfe .IsHuffmanEncoded {_dcd ,_cgfd :=_fdfe ._afad .ReadBit ();
return int64 (_dcd ),_cgfd ;};_gagd ,_fabg :=_fdfe ._aaac .DecodeInt (_fdfe ._aacb );return int64 (_gagd ),_fabg ;};func (_gef *HalftoneRegion )GetPatterns ()([]*_fd .Bitmap ,error ){var (_ddgc []*_fd .Bitmap ;_gba error ;);for _ ,_gcbd :=range _gef ._cfbe .RTSegments {var _gga Segmenter ;
_gga ,_gba =_gcbd .GetSegmentData ();if _gba !=nil {_eb .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_gba );return nil ,_gba ;};_bcea ,_eceg :=_gga .(*PatternDictionary );
if !_eceg {_gba =_b .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_gga );
return nil ,_gba ;};var _geba []*_fd .Bitmap ;_geba ,_gba =_bcea .GetDictionary ();if _gba !=nil {_eb .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gba );
return nil ,_gba ;};_ddgc =append (_ddgc ,_geba ...);};return _ddgc ,nil ;};func (_dde *Header )readSegmentNumber (_fafff *_bc .Reader )error {const _dbba ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_gdcd :=make ([]byte ,4);_ ,_bacg :=_fafff .Read (_gdcd );if _bacg !=nil {return _aaa .Wrap (_bacg ,_dbba ,"");};_dde .SegmentNumber =_c .BigEndian .Uint32 (_gdcd );return nil ;};type Regioner interface{GetRegionBitmap ()(*_fd .Bitmap ,error );GetRegionInfo ()*RegionSegment ;
};func (_cefa *GenericRefinementRegion )getPixel (_aff *_fd .Bitmap ,_cgdg ,_dbce int )int {if _cgdg < 0||_cgdg >=_aff .Width {return 0;};if _dbce < 0||_dbce >=_aff .Height {return 0;};if _aff .GetPixel (_cgdg ,_dbce ){return 1;};return 0;};func (_caeb *TextRegion )decodeStripT ()(_dcaf int64 ,_fgaef error ){if _caeb .IsHuffmanEncoded {if _caeb .SbHuffDT ==3{if _caeb ._beaef ==nil {var _gaccb int ;
if _caeb .SbHuffFS ==3{_gaccb ++;};if _caeb .SbHuffDS ==3{_gaccb ++;};_caeb ._beaef ,_fgaef =_caeb .getUserTable (_gaccb );if _fgaef !=nil {return 0,_fgaef ;};};_dcaf ,_fgaef =_caeb ._beaef .Decode (_caeb ._afad );if _fgaef !=nil {return 0,_fgaef ;};}else {var _dbcc _gd .Tabler ;
_dbcc ,_fgaef =_gd .GetStandardTable (11+int (_caeb .SbHuffDT ));if _fgaef !=nil {return 0,_fgaef ;};_dcaf ,_fgaef =_dbcc .Decode (_caeb ._afad );if _fgaef !=nil {return 0,_fgaef ;};};}else {var _ddaa int32 ;_ddaa ,_fgaef =_caeb ._aaac .DecodeInt (_caeb ._cffd );
if _fgaef !=nil {return 0,_fgaef ;};_dcaf =int64 (_ddaa );};_dcaf *=int64 (-_caeb .SbStrips );return _dcaf ,nil ;};func (_gdad *SymbolDictionary )readNumberOfExportedSymbols ()error {_gebe ,_adee :=_gdad ._faab .ReadBits (32);if _adee !=nil {return _adee ;
};_gdad .NumberOfExportedSymbols =uint32 (_gebe &_f .MaxUint32 );return nil ;};func (_dfa *GenericRefinementRegion )overrideAtTemplate0 (_bgdd ,_cfa ,_beb ,_fac ,_facb int )int {if _dfa ._dfg [0]{_bgdd &=0xfff7;if _dfa .GrAtY [0]==0&&int (_dfa .GrAtX [0])>=-_facb {_bgdd |=(_fac >>uint (7-(_facb +int (_dfa .GrAtX [0])))&0x1)<<3;
}else {_bgdd |=_dfa .getPixel (_dfa .RegionBitmap ,_cfa +int (_dfa .GrAtX [0]),_beb +int (_dfa .GrAtY [0]))<<3;};};if _dfa ._dfg [1]{_bgdd &=0xefff;if _dfa .GrAtY [1]==0&&int (_dfa .GrAtX [1])>=-_facb {_bgdd |=(_fac >>uint (7-(_facb +int (_dfa .GrAtX [1])))&0x1)<<12;
}else {_bgdd |=_dfa .getPixel (_dfa .ReferenceBitmap ,_cfa +int (_dfa .GrAtX [1]),_beb +int (_dfa .GrAtY [1]));};};return _bgdd ;};func (_dcece *PageInformationSegment )encodeFlags (_fbcf _bc .BinaryWriter )(_gcbf error ){const _fbce ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _gcbf =_fbcf .SkipBits (1);_gcbf !=nil {return _aaa .Wrap (_gcbf ,_fbce ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _ecba int ;if _dcece .CombinationOperatorOverrideAllowed (){_ecba =1;};if _gcbf =_fbcf .WriteBit (_ecba );
_gcbf !=nil {return _aaa .Wrap (_gcbf ,_fbce ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_ecba =0;if _dcece ._fgbb {_ecba =1;
};if _gcbf =_fbcf .WriteBit (_ecba );_gcbf !=nil {return _aaa .Wrap (_gcbf ,_fbce ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _gcbf =_fbcf .WriteBit ((int (_dcece ._cbea )>>1)&0x01);
_gcbf !=nil {return _aaa .Wrap (_gcbf ,_fbce ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _gcbf =_fbcf .WriteBit (int (_dcece ._cbea )&0x01);
_gcbf !=nil {return _aaa .Wrap (_gcbf ,_fbce ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_ecba =int (_dcece .DefaultPixelValue );
if _gcbf =_fbcf .WriteBit (_ecba );_gcbf !=nil {return _aaa .Wrap (_gcbf ,_fbce ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_ecba =0;if _dcece ._ecfg {_ecba =1;
};if _gcbf =_fbcf .WriteBit (_ecba );_gcbf !=nil {return _aaa .Wrap (_gcbf ,_fbce ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_ecba =0;if _dcece .IsLossless {_ecba =1;};if _gcbf =_fbcf .WriteBit (_ecba );
_gcbf !=nil {return _aaa .Wrap (_gcbf ,_fbce ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_bace *Header )readHeaderLength (_gacc *_bc .Reader ,_bfcg int64 ){_bace .HeaderLength =_gacc .AbsolutePosition ()-_bfcg ;
};type TextRegion struct{_afad *_bc .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _fd .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;
IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_ddbg int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;
RegionBitmap *_fd .Bitmap ;Symbols []*_fd .Bitmap ;_aaac *_af .Decoder ;_efed *GenericRefinementRegion ;_cffd *_af .DecoderStats ;_gfbcf *_af .DecoderStats ;_bgcd *_af .DecoderStats ;_efgfa *_af .DecoderStats ;_aacb *_af .DecoderStats ;_gedc *_af .DecoderStats ;
_gbbb *_af .DecoderStats ;_dffbg *_af .DecoderStats ;_bdab *_af .DecoderStats ;_cbceb *_af .DecoderStats ;_cedb *_af .DecoderStats ;_bfdg int8 ;_gfdg *_gd .FixedSizeTable ;Header *Header ;_ccbg _gd .Tabler ;_ggca _gd .Tabler ;_beaef _gd .Tabler ;_cggd _gd .Tabler ;
_fbcef _gd .Tabler ;_cdgb _gd .Tabler ;_bdac _gd .Tabler ;_dafeg _gd .Tabler ;_bdgb ,_ecafa map[int ]int ;_gbcca []int ;_abbd *_fd .Points ;_agafd *_fd .Bitmaps ;_ddafd *_gc .IntSlice ;_dcba ,_cdgcb int ;_acbg *_fd .Boxes ;};func (_dcf *TableSegment )StreamReader ()*_bc .Reader {return _dcf ._faffd };
func (_abab *GenericRegion )getPixel (_bfgb ,_abaa int )int8 {if _bfgb < 0||_bfgb >=_abab .Bitmap .Width {return 0;};if _abaa < 0||_abaa >=_abab .Bitmap .Height {return 0;};if _abab .Bitmap .GetPixel (_bfgb ,_abaa ){return 1;};return 0;};func (_fdf *SymbolDictionary )readRegionFlags ()error {var (_ccdb uint64 ;
_fgbg int ;);_ ,_fdeb :=_fdf ._faab .ReadBits (3);if _fdeb !=nil {return _fdeb ;};_fgbg ,_fdeb =_fdf ._faab .ReadBit ();if _fdeb !=nil {return _fdeb ;};_fdf .SdrTemplate =int8 (_fgbg );_ccdb ,_fdeb =_fdf ._faab .ReadBits (2);if _fdeb !=nil {return _fdeb ;
};_fdf .SdTemplate =int8 (_ccdb &0xf);_fgbg ,_fdeb =_fdf ._faab .ReadBit ();if _fdeb !=nil {return _fdeb ;};if _fgbg ==1{_fdf ._dede =true ;};_fgbg ,_fdeb =_fdf ._faab .ReadBit ();if _fdeb !=nil {return _fdeb ;};if _fgbg ==1{_fdf ._fbdf =true ;};_fgbg ,_fdeb =_fdf ._faab .ReadBit ();
if _fdeb !=nil {return _fdeb ;};if _fgbg ==1{_fdf .SdHuffAggInstanceSelection =true ;};_fgbg ,_fdeb =_fdf ._faab .ReadBit ();if _fdeb !=nil {return _fdeb ;};_fdf .SdHuffBMSizeSelection =int8 (_fgbg );_ccdb ,_fdeb =_fdf ._faab .ReadBits (2);if _fdeb !=nil {return _fdeb ;
};_fdf .SdHuffDecodeWidthSelection =int8 (_ccdb &0xf);_ccdb ,_fdeb =_fdf ._faab .ReadBits (2);if _fdeb !=nil {return _fdeb ;};_fdf .SdHuffDecodeHeightSelection =int8 (_ccdb &0xf);_fgbg ,_fdeb =_fdf ._faab .ReadBit ();if _fdeb !=nil {return _fdeb ;};if _fgbg ==1{_fdf .UseRefinementAggregation =true ;
};_fgbg ,_fdeb =_fdf ._faab .ReadBit ();if _fdeb !=nil {return _fdeb ;};if _fgbg ==1{_fdf .IsHuffmanEncoded =true ;};return nil ;};func (_bgda *Header )writeReferredToCount (_fffa _bc .BinaryWriter )(_eed int ,_ggcb error ){const _gaab ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_bgda .RTSNumbers =make ([]int ,len (_bgda .RTSegments ));for _cdcb ,_eacge :=range _bgda .RTSegments {_bgda .RTSNumbers [_cdcb ]=int (_eacge .SegmentNumber );};if len (_bgda .RTSNumbers )<=4{var _gfgb byte ;if len (_bgda .RetainBits )>=1{_gfgb =_bgda .RetainBits [0];
};_gfgb |=byte (len (_bgda .RTSNumbers ))<<5;if _ggcb =_fffa .WriteByte (_gfgb );_ggcb !=nil {return 0,_aaa .Wrap (_ggcb ,_gaab ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_gee :=uint32 (len (_bgda .RTSNumbers ));
_ddbd :=make ([]byte ,4+_gc .Ceil (len (_bgda .RTSNumbers )+1,8));_gee |=0x7<<29;_c .BigEndian .PutUint32 (_ddbd ,_gee );copy (_ddbd [1:],_bgda .RetainBits );_eed ,_ggcb =_fffa .Write (_ddbd );if _ggcb !=nil {return 0,_aaa .Wrap (_ggcb ,_gaab ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _eed ,nil ;};func (_ffca *GenericRegion )decodeTemplate3 (_aba ,_ccd ,_bbfc int ,_ece ,_gbff int )(_deec error ){const _ddaf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_acb ,_aedg int ;_eee int ;_degf byte ;
_bgdc ,_eag int ;);if _aba >=1{_degf ,_deec =_ffca .Bitmap .GetByte (_gbff );if _deec !=nil {return _aaa .Wrap (_deec ,_ddaf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_eee =int (_degf );};_acb =(_eee >>1)&0x70;for _eebc :=0;_eebc < _bbfc ;_eebc =_bgdc {var (_acfa byte ;
_fgf int ;);_bgdc =_eebc +8;if _edda :=_ccd -_eebc ;_edda > 8{_fgf =8;}else {_fgf =_edda ;};if _aba >=1{_eee <<=8;if _bgdc < _ccd {_degf ,_deec =_ffca .Bitmap .GetByte (_gbff +1);if _deec !=nil {return _aaa .Wrap (_deec ,_ddaf ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_eee |=int (_degf );};};for _bfdd :=0;_bfdd < _fgf ;_bfdd ++{if _ffca ._fdcc {_aedg =_ffca .overrideAtTemplate3 (_acb ,_eebc +_bfdd ,_aba ,int (_acfa ),_bfdd );_ffca ._fde .SetIndex (int32 (_aedg ));}else {_ffca ._fde .SetIndex (int32 (_acb ));};_eag ,_deec =_ffca ._gcbc .DecodeBit (_ffca ._fde );
if _deec !=nil {return _aaa .Wrap (_deec ,_ddaf ,"");};_acfa |=byte (_eag )<<byte (7-_bfdd );_acb =((_acb &0x1f7)<<1)|_eag |((_eee >>uint (8-_bfdd ))&0x010);};if _gcdc :=_ffca .Bitmap .SetByte (_ece ,_acfa );_gcdc !=nil {return _aaa .Wrap (_gcdc ,_ddaf ,"");
};_ece ++;_gbff ++;};return nil ;};func (_cbac *TextRegion )encodeSymbols (_dccaf _bc .BinaryWriter )(_eedg int ,_fdgdf error ){const _egef ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_gfdc :=make ([]byte ,4);_c .BigEndian .PutUint32 (_gfdc ,_cbac .NumberOfSymbols );
if _eedg ,_fdgdf =_dccaf .Write (_gfdc );_fdgdf !=nil {return _eedg ,_aaa .Wrap (_fdgdf ,_egef ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_ccbd ,_fdgdf :=_fd .NewClassedPoints (_cbac ._abbd ,_cbac ._gbcca );
if _fdgdf !=nil {return 0,_aaa .Wrap (_fdgdf ,_egef ,"");};var _bbde ,_bdag int ;_dabb :=_bd .New ();_dabb .Init ();if _fdgdf =_dabb .EncodeInteger (_bd .IADT ,0);_fdgdf !=nil {return _eedg ,_aaa .Wrap (_fdgdf ,_egef ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_cacd ,_fdgdf :=_ccbd .GroupByY ();if _fdgdf !=nil {return 0,_aaa .Wrap (_fdgdf ,_egef ,"");};for _ ,_abdag :=range _cacd {_effbb :=int (_abdag .YAtIndex (0));_fcbgc :=_effbb -_bbde ;if _fdgdf =_dabb .EncodeInteger (_bd .IADT ,_fcbgc );_fdgdf !=nil {return _eedg ,_aaa .Wrap (_fdgdf ,_egef ,"");
};var _gbga int ;for _bgfa ,_faac :=range _abdag .IntSlice {switch _bgfa {case 0:_abef :=int (_abdag .XAtIndex (_bgfa ))-_bdag ;if _fdgdf =_dabb .EncodeInteger (_bd .IAFS ,_abef );_fdgdf !=nil {return _eedg ,_aaa .Wrap (_fdgdf ,_egef ,"");};_bdag +=_abef ;
_gbga =_bdag ;default:_eaeba :=int (_abdag .XAtIndex (_bgfa ))-_gbga ;if _fdgdf =_dabb .EncodeInteger (_bd .IADS ,_eaeba );_fdgdf !=nil {return _eedg ,_aaa .Wrap (_fdgdf ,_egef ,"");};_gbga +=_eaeba ;};_cgee ,_gdgd :=_cbac ._ddafd .Get (_faac );if _gdgd !=nil {return _eedg ,_aaa .Wrap (_gdgd ,_egef ,"");
};_edge ,_cbbf :=_cbac ._bdgb [_cgee ];if !_cbbf {_edge ,_cbbf =_cbac ._ecafa [_cgee ];if !_cbbf {return _eedg ,_aaa .Errorf (_egef ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_cgee );
};};if _gdgd =_dabb .EncodeIAID (_cbac ._cdgcb ,_edge );_gdgd !=nil {return _eedg ,_aaa .Wrap (_gdgd ,_egef ,"");};};if _fdgdf =_dabb .EncodeOOB (_bd .IADS );_fdgdf !=nil {return _eedg ,_aaa .Wrap (_fdgdf ,_egef ,"");};};_dabb .Final ();_ecfcd ,_fdgdf :=_dabb .WriteTo (_dccaf );
if _fdgdf !=nil {return _eedg ,_aaa .Wrap (_fdgdf ,_egef ,"");};_eedg +=int (_ecfcd );return _eedg ,nil ;};func (_cdg *GenericRegion )InitEncode (bm *_fd .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _ddg ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _aaa .Error (_ddg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _aaa .Error (_ddg ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_cdg .Bitmap =bm ;_cdg .GBTemplate =byte (template );switch _cdg .GBTemplate {case 0:_cdg .GBAtX =[]int8 {3,-3,2,-2};_cdg .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_cdg .GBAtX =[]int8 {3};_cdg .GBAtY =[]int8 {-1};case 2,3:_cdg .GBAtX =[]int8 {2};_cdg .GBAtY =[]int8 {-1};
default:return _aaa .Errorf (_ddg ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_cdg .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_cdg .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_acc *PatternDictionary )Init (h *Header ,r *_bc .Reader )error {_acc ._gcbae =r ;
return _acc .parseHeader ();};func (_bfe *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_ceg ,_dbag ,_ga ,_cga ,_aaad ,_cgg ,_ddcf ,_def ,_gg int )error {var (_bgc ,_dbc ,_cee ,_ega ,_gdc ,_ed int ;_cef byte ;_ceef error ;);if _ceg > 0{_cef ,_ceef =_bfe .RegionBitmap .GetByte (_ddcf -_ga );
if _ceef !=nil {return _ceef ;};_cee =int (_cef );};if _def > 0&&_def <=_bfe .ReferenceBitmap .Height {_cef ,_ceef =_bfe .ReferenceBitmap .GetByte (_gg -_cga +_cgg );if _ceef !=nil {return _ceef ;};_ega =int (_cef )<<4;};if _def >=0&&_def < _bfe .ReferenceBitmap .Height {_cef ,_ceef =_bfe .ReferenceBitmap .GetByte (_gg +_cgg );
if _ceef !=nil {return _ceef ;};_gdc =int (_cef )<<1;};if _def > -2&&_def < _bfe .ReferenceBitmap .Height -1{_cef ,_ceef =_bfe .ReferenceBitmap .GetByte (_gg +_cga +_cgg );if _ceef !=nil {return _ceef ;};_ed =int (_cef );};_bgc =((_cee >>5)&0x6)|((_ed >>2)&0x30)|(_gdc &0x180)|(_ega &0xc00);
var _dcg int ;for _gcc :=0;_gcc < _aaad ;_gcc =_dcg {var _gad int ;_dcg =_gcc +8;var _bfb int ;if _bfb =_dbag -_gcc ;_bfb > 8{_bfb =8;};_acd :=_dcg < _dbag ;_deg :=_dcg < _bfe .ReferenceBitmap .Width ;_cbd :=_cgg +1;if _ceg > 0{_cef =0;if _acd {_cef ,_ceef =_bfe .RegionBitmap .GetByte (_ddcf -_ga +1);
if _ceef !=nil {return _ceef ;};};_cee =(_cee <<8)|int (_cef );};if _def > 0&&_def <=_bfe .ReferenceBitmap .Height {var _cbg int ;if _deg {_cef ,_ceef =_bfe .ReferenceBitmap .GetByte (_gg -_cga +_cbd );if _ceef !=nil {return _ceef ;};_cbg =int (_cef )<<4;
};_ega =(_ega <<8)|_cbg ;};if _def >=0&&_def < _bfe .ReferenceBitmap .Height {var _dda int ;if _deg {_cef ,_ceef =_bfe .ReferenceBitmap .GetByte (_gg +_cbd );if _ceef !=nil {return _ceef ;};_dda =int (_cef )<<1;};_gdc =(_gdc <<8)|_dda ;};if _def > -2&&_def < (_bfe .ReferenceBitmap .Height -1){_cef =0;
if _deg {_cef ,_ceef =_bfe .ReferenceBitmap .GetByte (_gg +_cga +_cbd );if _ceef !=nil {return _ceef ;};};_ed =(_ed <<8)|int (_cef );};for _caf :=0;_caf < _bfb ;_caf ++{var _cea int ;_dgf :=false ;_gcb :=(_bgc >>4)&0x1ff;if _gcb ==0x1ff{_dgf =true ;_cea =1;
}else if _gcb ==0x00{_dgf =true ;};if !_dgf {if _bfe ._fg {_dbc =_bfe .overrideAtTemplate0 (_bgc ,_gcc +_caf ,_ceg ,_gad ,_caf );_bfe ._cb .SetIndex (int32 (_dbc ));}else {_bfe ._cb .SetIndex (int32 (_bgc ));};_cea ,_ceef =_bfe ._ce .DecodeBit (_bfe ._cb );
if _ceef !=nil {return _ceef ;};};_egb :=uint (7-_caf );_gad |=_cea <<_egb ;_bgc =((_bgc &0xdb6)<<1)|_cea |(_cee >>_egb +5)&0x002|((_ed >>_egb +2)&0x010)|((_gdc >>_egb )&0x080)|((_ega >>_egb )&0x400);};_ceef =_bfe .RegionBitmap .SetByte (_ddcf ,byte (_gad ));
if _ceef !=nil {return _ceef ;};_ddcf ++;_gg ++;};return nil ;};func (_cbgc *SymbolDictionary )Init (h *Header ,r *_bc .Reader )error {_cbgc .Header =h ;_cbgc ._faab =r ;return _cbgc .parseHeader ();};func (_fgba *SymbolDictionary )InitEncode (symbols *_fd .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _cfc ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_fgba .SdATX =[]int8 {3,-3,2,-2};_fgba .SdATY =[]int8 {-1,-1,-2,-2};_fgba ._febf =symbols ;_fgba ._fbad =make ([]int ,len (symbolList ));copy (_fgba ._fbad ,symbolList );if len (_fgba ._fbad )!=_fgba ._febf .Size (){return _aaa .Error (_cfc ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_fgba .NumberOfNewSymbols =uint32 (symbols .Size ());_fgba .NumberOfExportedSymbols =uint32 (symbols .Size ());_fgba ._dced =symbolMap ;_fgba ._bdfa =unborderSymbols ;return nil ;};func _faff (_gcdce int )int {if _gcdce ==0{return 0;};_gcdce |=_gcdce >>1;
_gcdce |=_gcdce >>2;_gcdce |=_gcdce >>4;_gcdce |=_gcdce >>8;_gcdce |=_gcdce >>16;return (_gcdce +1)>>1;};func (_bgbf *HalftoneRegion )shiftAndFill (_ceeg int )int {_ceeg >>=8;if _ceeg < 0{_decf :=int (_f .Log (float64 (_faff (_ceeg )))/_f .Log (2));_fcag :=31-_decf ;
for _deff :=1;_deff < _fcag ;_deff ++{_ceeg |=1<<uint (31-_deff );};};return _ceeg ;};func (_gabg *SymbolDictionary )getUserTable (_eecbc int )(_gd .Tabler ,error ){var _gbed int ;for _ ,_gdcf :=range _gabg .Header .RTSegments {if _gdcf .Type ==53{if _gbed ==_eecbc {_cggef ,_ddga :=_gdcf .GetSegmentData ();
if _ddga !=nil {return nil ,_ddga ;};_gbec :=_cggef .(_gd .BasicTabler );return _gd .NewEncodedTable (_gbec );};_gbed ++;};};return nil ,nil ;};func (_gedfb *PatternDictionary )setGbAtPixels (){if _gedfb .HDTemplate ==0{_gedfb .GBAtX =make ([]int8 ,4);
_gedfb .GBAtY =make ([]int8 ,4);_gedfb .GBAtX [0]=-int8 (_gedfb .HdpWidth );_gedfb .GBAtY [0]=0;_gedfb .GBAtX [1]=-3;_gedfb .GBAtY [1]=-1;_gedfb .GBAtX [2]=2;_gedfb .GBAtY [2]=-2;_gedfb .GBAtX [3]=-2;_gedfb .GBAtY [3]=-2;}else {_gedfb .GBAtX =[]int8 {-int8 (_gedfb .HdpWidth )};
_gedfb .GBAtY =[]int8 {0};};};func (_fgfeg *Header )readDataStartOffset (_dbbaf *_bc .Reader ,_ecaa OrganizationType ){if _ecaa ==OSequential {_fgfeg .SegmentDataStartOffset =uint64 (_dbbaf .AbsolutePosition ());};};func (_fcac *GenericRegion )decodeTemplate0b (_bfd ,_fdgdc ,_dcc int ,_faf ,_cgaa int )(_geaf error ){const _cae ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_ecaf ,_facf int ;_bea ,_gcbab int ;_cgde byte ;_bfc int ;);if _bfd >=1{_cgde ,_geaf =_fcac .Bitmap .GetByte (_cgaa );if _geaf !=nil {return _aaa .Wrap (_geaf ,_cae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bea =int (_cgde );};if _bfd >=2{_cgde ,_geaf =_fcac .Bitmap .GetByte (_cgaa -_fcac .Bitmap .RowStride );
if _geaf !=nil {return _aaa .Wrap (_geaf ,_cae ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gcbab =int (_cgde )<<6;};_ecaf =(_bea &0xf0)|(_gcbab &0x3800);for _adb :=0;_adb < _dcc ;_adb =_bfc {var (_cabc byte ;_cgc int ;);_bfc =_adb +8;if _bcg :=_fdgdc -_adb ;
_bcg > 8{_cgc =8;}else {_cgc =_bcg ;};if _bfd > 0{_bea <<=8;if _bfc < _fdgdc {_cgde ,_geaf =_fcac .Bitmap .GetByte (_cgaa +1);if _geaf !=nil {return _aaa .Wrap (_geaf ,_cae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bea |=int (_cgde );};};
if _bfd > 1{_gcbab <<=8;if _bfc < _fdgdc {_cgde ,_geaf =_fcac .Bitmap .GetByte (_cgaa -_fcac .Bitmap .RowStride +1);if _geaf !=nil {return _aaa .Wrap (_geaf ,_cae ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gcbab |=int (_cgde )<<6;};};for _deca :=0;
_deca < _cgc ;_deca ++{_gcf :=uint (7-_deca );if _fcac ._fdcc {_facf =_fcac .overrideAtTemplate0b (_ecaf ,_adb +_deca ,_bfd ,int (_cabc ),_deca ,int (_gcf ));_fcac ._fde .SetIndex (int32 (_facf ));}else {_fcac ._fde .SetIndex (int32 (_ecaf ));};var _gccg int ;
_gccg ,_geaf =_fcac ._gcbc .DecodeBit (_fcac ._fde );if _geaf !=nil {return _aaa .Wrap (_geaf ,_cae ,"");};_cabc |=byte (_gccg <<_gcf );_ecaf =((_ecaf &0x7bf7)<<1)|_gccg |((_bea >>_gcf )&0x10)|((_gcbab >>_gcf )&0x800);};if _efd :=_fcac .Bitmap .SetByte (_faf ,_cabc );
_efd !=nil {return _aaa .Wrap (_efd ,_cae ,"");};_faf ++;_cgaa ++;};return nil ;};func (_daad *SymbolDictionary )setInSyms ()error {if _daad .Header .RTSegments !=nil {return _daad .retrieveImportSymbols ();};_daad ._feee =make ([]*_fd .Bitmap ,0);return nil ;
};func (_cecg *Header )Encode (w _bc .BinaryWriter )(_adfa int ,_cadc error ){const _cdge ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _ggb _bc .BinaryWriter ;_eb .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _cadc !=nil {_eb .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_cadc );}else {_eb .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_cecg );
_eb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _cecg .SegmentData !=nil {_fdgf ,_dbab :=_cecg .SegmentData .(SegmentEncoder );
if !_dbab {return 0,_aaa .Errorf (_cdge ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_cecg .SegmentData );
};_ggb =_bc .BufferedMSB ();_adfa ,_cadc =_fdgf .Encode (_ggb );if _cadc !=nil {return 0,_aaa .Wrap (_cadc ,_cdge ,"");};_cecg .SegmentDataLength =uint64 (_adfa );};if _cecg .pageSize ()==4{_cecg .PageAssociationFieldSize =true ;};var _ebc int ;_ebc ,_cadc =_cecg .writeSegmentNumber (w );
if _cadc !=nil {return 0,_aaa .Wrap (_cadc ,_cdge ,"");};_adfa +=_ebc ;if _cadc =_cecg .writeFlags (w );_cadc !=nil {return _adfa ,_aaa .Wrap (_cadc ,_cdge ,"");};_adfa ++;_ebc ,_cadc =_cecg .writeReferredToCount (w );if _cadc !=nil {return 0,_aaa .Wrap (_cadc ,_cdge ,"");
};_adfa +=_ebc ;_ebc ,_cadc =_cecg .writeReferredToSegments (w );if _cadc !=nil {return 0,_aaa .Wrap (_cadc ,_cdge ,"");};_adfa +=_ebc ;_ebc ,_cadc =_cecg .writeSegmentPageAssociation (w );if _cadc !=nil {return 0,_aaa .Wrap (_cadc ,_cdge ,"");};_adfa +=_ebc ;
_ebc ,_cadc =_cecg .writeSegmentDataLength (w );if _cadc !=nil {return 0,_aaa .Wrap (_cadc ,_cdge ,"");};_adfa +=_ebc ;_cecg .HeaderLength =int64 (_adfa )-int64 (_cecg .SegmentDataLength );if _ggb !=nil {if _ ,_cadc =w .Write (_ggb .Data ());_cadc !=nil {return _adfa ,_aaa .Wrap (_cadc ,_cdge ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _adfa ,nil ;};func (_adba *TableSegment )HtLow ()int32 {return _adba ._dafge };func (_cagg *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _cagg .SdHuffDecodeHeightSelection {case 0:_gfbd ,_gagg :=_gd .GetStandardTable (4);
if _gagg !=nil {return 0,_gagg ;};return _gfbd .Decode (_cagg ._faab );case 1:_befb ,_ebdg :=_gd .GetStandardTable (5);if _ebdg !=nil {return 0,_ebdg ;};return _befb .Decode (_cagg ._faab );case 3:if _cagg ._dgfg ==nil {_faeg ,_fcggb :=_gd .GetStandardTable (0);
if _fcggb !=nil {return 0,_fcggb ;};_cagg ._dgfg =_faeg ;};return _cagg ._dgfg .Decode (_cagg ._faab );};return 0,nil ;};func (_acfaa *TextRegion )symbolIDCodeLengths ()error {var (_aadf []*_gd .Code ;_agfg uint64 ;_cfga _gd .Tabler ;_gdgc error ;);for _dfbfd :=0;
_dfbfd < 35;_dfbfd ++{_agfg ,_gdgc =_acfaa ._afad .ReadBits (4);if _gdgc !=nil {return _gdgc ;};_gdfd :=int (_agfg &0xf);if _gdfd > 0{_aadf =append (_aadf ,_gd .NewCode (int32 (_gdfd ),0,int32 (_dfbfd ),false ));};};_cfga ,_gdgc =_gd .NewFixedSizeTable (_aadf );
if _gdgc !=nil {return _gdgc ;};var (_baeb int64 ;_bcfa uint32 ;_dcdd []*_gd .Code ;_fdad int64 ;);for _bcfa < _acfaa .NumberOfSymbols {_fdad ,_gdgc =_cfga .Decode (_acfaa ._afad );if _gdgc !=nil {return _gdgc ;};if _fdad < 32{if _fdad > 0{_dcdd =append (_dcdd ,_gd .NewCode (int32 (_fdad ),0,int32 (_bcfa ),false ));
};_baeb =_fdad ;_bcfa ++;}else {var _afff ,_ebfc int64 ;switch _fdad {case 32:_agfg ,_gdgc =_acfaa ._afad .ReadBits (2);if _gdgc !=nil {return _gdgc ;};_afff =3+int64 (_agfg );if _bcfa > 0{_ebfc =_baeb ;};case 33:_agfg ,_gdgc =_acfaa ._afad .ReadBits (3);
if _gdgc !=nil {return _gdgc ;};_afff =3+int64 (_agfg );case 34:_agfg ,_gdgc =_acfaa ._afad .ReadBits (7);if _gdgc !=nil {return _gdgc ;};_afff =11+int64 (_agfg );};for _dbeeg :=0;_dbeeg < int (_afff );_dbeeg ++{if _ebfc > 0{_dcdd =append (_dcdd ,_gd .NewCode (int32 (_ebfc ),0,int32 (_bcfa ),false ));
};_bcfa ++;};};};_acfaa ._afad .Align ();_acfaa ._gfdg ,_gdgc =_gd .NewFixedSizeTable (_dcdd );return _gdgc ;};func (_ecbg *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_agba int ;_fgad int32 ;_gbffe error ;_eega =int32 (_ecbg ._fdca +_ecbg .NumberOfNewSymbols );
_afdg =make ([]int ,_eega ););for _fgbbd :=int32 (0);_fgbbd < _eega ;_fgbbd +=_fgad {if _ecbg .IsHuffmanEncoded {_edgb ,_adge :=_gd .GetStandardTable (1);if _adge !=nil {return nil ,_adge ;};_aagd ,_adge :=_edgb .Decode (_ecbg ._faab );if _adge !=nil {return nil ,_adge ;
};_fgad =int32 (_aagd );}else {_fgad ,_gbffe =_ecbg ._beag .DecodeInt (_ecbg ._abg );if _gbffe !=nil {return nil ,_gbffe ;};};if _fgad !=0{if _fgbbd +_fgad > _eega {return nil ,_aaa .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _dgcf :=_fgbbd ;_dgcf < _fgbbd +_fgad ;_dgcf ++{_afdg [_dgcf ]=_agba ;};};if _agba ==0{_agba =1;}else {_agba =0;};};return _afdg ,nil ;};func (_ecee *TextRegion )createRegionBitmap ()error {_ecee .RegionBitmap =_fd .New (int (_ecee .RegionInfo .BitmapWidth ),int (_ecee .RegionInfo .BitmapHeight ));
if _ecee .DefaultPixel !=0{_ecee .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_bcfe *SymbolDictionary )setRefinementAtPixels ()error {if !_bcfe .UseRefinementAggregation ||_bcfe .SdrTemplate !=0{return nil ;};if _fdge :=_bcfe .readRefinementAtPixels (2);
_fdge !=nil {return _fdge ;};return nil ;};func (_bdbd *SymbolDictionary )encodeRefinementATFlags (_bdaa _bc .BinaryWriter )(_fcaee int ,_aedfe error ){const _cdcc ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_bdbd .UseRefinementAggregation ||_bdbd .SdrTemplate !=0{return 0,nil ;};for _gebbe :=0;_gebbe < 2;_gebbe ++{if _aedfe =_bdaa .WriteByte (byte (_bdbd .SdrATX [_gebbe ]));_aedfe !=nil {return _fcaee ,_aaa .Wrapf (_aedfe ,_cdcc ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_gebbe );
};_fcaee ++;if _aedfe =_bdaa .WriteByte (byte (_bdbd .SdrATY [_gebbe ]));_aedfe !=nil {return _fcaee ,_aaa .Wrapf (_aedfe ,_cdcc ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_gebbe );};_fcaee ++;};return _fcaee ,nil ;};func (_eaa *GenericRegion )Encode (w _bc .BinaryWriter )(_fdee int ,_bda error ){const _fee ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _eaa .Bitmap ==nil {return 0,_aaa .Error (_fee ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_edd ,_bda :=_eaa .RegionSegment .Encode (w );if _bda !=nil {return 0,_aaa .Wrap (_bda ,_fee ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_fdee +=_edd ;if _bda =w .SkipBits (4);_bda !=nil {return _fdee ,_aaa .Wrap (_bda ,_fee ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _cgdf int ;if _eaa .IsTPGDon {_cgdf =1;};if _bda =w .WriteBit (_cgdf );
_bda !=nil {return _fdee ,_aaa .Wrap (_bda ,_fee ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_cgdf =0;if _bda =w .WriteBit (int (_eaa .GBTemplate >>1)&0x01);_bda !=nil {return _fdee ,_aaa .Wrap (_bda ,_fee ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _bda =w .WriteBit (int (_eaa .GBTemplate )&0x01);_bda !=nil {return _fdee ,_aaa .Wrap (_bda ,_fee ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _eaa .UseMMR {_cgdf =1;};if _bda =w .WriteBit (_cgdf );
_bda !=nil {return _fdee ,_aaa .Wrap (_bda ,_fee ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_fdee ++;if _edd ,_bda =_eaa .writeGBAtPixels (w );_bda !=nil {return _fdee ,_aaa .Wrap (_bda ,_fee ,"");};_fdee +=_edd ;_cfd :=_bd .New ();
if _bda =_cfd .EncodeBitmap (_eaa .Bitmap ,_eaa .IsTPGDon );_bda !=nil {return _fdee ,_aaa .Wrap (_bda ,_fee ,"");};_cfd .Final ();var _bbf int64 ;if _bbf ,_bda =_cfd .WriteTo (w );_bda !=nil {return _fdee ,_aaa .Wrap (_bda ,_fee ,"");};_fdee +=int (_bbf );
return _fdee ,nil ;};func (_caed *TextRegion )decodeID ()(int64 ,error ){if _caed .IsHuffmanEncoded {if _caed ._gfdg ==nil {_aec ,_efgcb :=_caed ._afad .ReadBits (byte (_caed ._bfdg ));return int64 (_aec ),_efgcb ;};return _caed ._gfdg .Decode (_caed ._afad );
};return _caed ._aaac .DecodeIAID (uint64 (_caed ._bfdg ),_caed ._dffbg );};func (_gdgb *SymbolDictionary )readAtPixels (_cde int )error {_gdgb .SdATX =make ([]int8 ,_cde );_gdgb .SdATY =make ([]int8 ,_cde );var (_gcgf byte ;_gbad error ;);for _gcfb :=0;
_gcfb < _cde ;_gcfb ++{_gcgf ,_gbad =_gdgb ._faab .ReadByte ();if _gbad !=nil {return _gbad ;};_gdgb .SdATX [_gcfb ]=int8 (_gcgf );_gcgf ,_gbad =_gdgb ._faab .ReadByte ();if _gbad !=nil {return _gbad ;};_gdgb .SdATY [_gcfb ]=int8 (_gcgf );};return nil ;
};var _ _gd .BasicTabler =&TableSegment {};func (_bcf *PatternDictionary )readGrayMax ()error {_agfd ,_beaf :=_bcf ._gcbae .ReadBits (32);if _beaf !=nil {return _beaf ;};_bcf .GrayMax =uint32 (_agfd &_f .MaxUint32 );return nil ;};const (TSymbolDictionary Type =0;
TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;
TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;
TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_dccc *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _dccc .RegionSegment };func (_gcg *HalftoneRegion )Init (hd *Header ,r *_bc .Reader )error {_gcg ._affg =r ;
_gcg ._cfbe =hd ;_gcg .RegionSegment =NewRegionSegment (r );return _gcg .parseHeader ();};func (_ffcd *RegionSegment )String ()string {_ddbc :=&_aa .Builder {};_ddbc .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_ddbc .WriteString (_b .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_ffcd .BitmapWidth ,_ffcd .BitmapHeight ));
_ddbc .WriteString (_b .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_ffcd .XLocation ,_ffcd .YLocation ));_ddbc .WriteString (_b .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_ffcd .CombinaionOperator ));
return _ddbc .String ();};func (_ff *EndOfStripe )parseHeader ()error {_ee ,_fc :=_ff ._gf .ReadBits (32);if _fc !=nil {return _fc ;};_ff ._ef =int (_ee &_f .MaxInt32 );return nil ;};type PageInformationSegment struct{_ccfae *_bc .Reader ;PageBMHeight int ;
PageBMWidth int ;ResolutionX int ;ResolutionY int ;_gdcad bool ;_cbea _fd .CombinationOperator ;_fgbb bool ;DefaultPixelValue uint8 ;_ecfg bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_dcff *TextRegion )GetRegionBitmap ()(*_fd .Bitmap ,error ){if _dcff .RegionBitmap !=nil {return _dcff .RegionBitmap ,nil ;
};if !_dcff .IsHuffmanEncoded {if _bdgd :=_dcff .setCodingStatistics ();_bdgd !=nil {return nil ,_bdgd ;};};if _geacg :=_dcff .createRegionBitmap ();_geacg !=nil {return nil ,_geacg ;};if _fcfb :=_dcff .decodeSymbolInstances ();_fcfb !=nil {return nil ,_fcfb ;
};return _dcff .RegionBitmap ,nil ;};var _ SegmentEncoder =&RegionSegment {};func (_fgbf *PatternDictionary )checkInput ()error {if _fgbf .HdpHeight < 1||_fgbf .HdpWidth < 1{return _cg .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _fgbf .IsMMREncoded {if _fgbf .HDTemplate !=0{_eb .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_bfgbfa *PageInformationSegment )Encode (w _bc .BinaryWriter )(_dgge int ,_gdb error ){const _agcb ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_fgdc :=make ([]byte ,4);_c .BigEndian .PutUint32 (_fgdc ,uint32 (_bfgbfa .PageBMWidth ));_dgge ,_gdb =w .Write (_fgdc );if _gdb !=nil {return _dgge ,_aaa .Wrap (_gdb ,_agcb ,"\u0077\u0069\u0064t\u0068");};_c .BigEndian .PutUint32 (_fgdc ,uint32 (_bfgbfa .PageBMHeight ));
var _ecfc int ;_ecfc ,_gdb =w .Write (_fgdc );if _gdb !=nil {return _ecfc +_dgge ,_aaa .Wrap (_gdb ,_agcb ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_dgge +=_ecfc ;_c .BigEndian .PutUint32 (_fgdc ,uint32 (_bfgbfa .ResolutionX ));_ecfc ,_gdb =w .Write (_fgdc );
if _gdb !=nil {return _ecfc +_dgge ,_aaa .Wrap (_gdb ,_agcb ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_dgge +=_ecfc ;_c .BigEndian .PutUint32 (_fgdc ,uint32 (_bfgbfa .ResolutionY ));if _ecfc ,_gdb =w .Write (_fgdc );_gdb !=nil {return _ecfc +_dgge ,_aaa .Wrap (_gdb ,_agcb ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_dgge +=_ecfc ;if _gdb =_bfgbfa .encodeFlags (w );_gdb !=nil {return _dgge ,_aaa .Wrap (_gdb ,_agcb ,"");};_dgge ++;if _ecfc ,_gdb =_bfgbfa .encodeStripingInformation (w );_gdb !=nil {return _dgge ,_aaa .Wrap (_gdb ,_agcb ,"");};_dgge +=_ecfc ;return _dgge ,nil ;
};func (_deab *GenericRegion )Size ()int {return _deab .RegionSegment .Size ()+1+2*len (_deab .GBAtX )};func (_ggeb *Header )writeSegmentPageAssociation (_agga _bc .BinaryWriter )(_gebb int ,_adgd error ){const _dga ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _ggeb .pageSize ()!=4{if _adgd =_agga .WriteByte (byte (_ggeb .PageAssociation ));_adgd !=nil {return 0,_aaa .Wrap (_adgd ,_dga ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_defb :=make ([]byte ,4);
_c .BigEndian .PutUint32 (_defb ,uint32 (_ggeb .PageAssociation ));if _gebb ,_adgd =_agga .Write (_defb );_adgd !=nil {return 0,_aaa .Wrap (_adgd ,_dga ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _gebb ,nil ;
};func (_gccb *Header )readReferredToSegmentNumbers (_bfef *_bc .Reader ,_cgeb int )([]int ,error ){const _fcaf ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_egbc :=make ([]int ,_cgeb );if _cgeb > 0{_gccb .RTSegments =make ([]*Header ,_cgeb );var (_bcd uint64 ;_ddgg error ;);for _eafe :=0;_eafe < _cgeb ;_eafe ++{_bcd ,_ddgg =_bfef .ReadBits (byte (_gccb .referenceSize ())<<3);if _ddgg !=nil {return nil ,_aaa .Wrapf (_ddgg ,_fcaf ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_eafe );
};_egbc [_eafe ]=int (_bcd &_f .MaxInt32 );};};return _egbc ,nil ;};func (_eafge *Header )subInputReader ()(*_bc .Reader ,error ){_ebed :=int (_eafge .SegmentDataLength );if _eafge .SegmentDataLength ==_f .MaxInt32 {_ebed =-1;};return _eafge .Reader .NewPartialReader (int (_eafge .SegmentDataStartOffset ),_ebed ,false );
};func (_cgad *SymbolDictionary )GetDictionary ()([]*_fd .Bitmap ,error ){_eb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_eb .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_eb .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_cgad ._agac ,_cgad ._adga );
}();if _cgad ._agac ==nil {var _eadg error ;if _cgad .UseRefinementAggregation {_cgad ._ccgag =_cgad .getSbSymCodeLen ();};if !_cgad .IsHuffmanEncoded {if _eadg =_cgad .setCodingStatistics ();_eadg !=nil {return nil ,_eadg ;};};_cgad ._adga =make ([]*_fd .Bitmap ,_cgad .NumberOfNewSymbols );
var _efce []int ;if _cgad .IsHuffmanEncoded &&!_cgad .UseRefinementAggregation {_efce =make ([]int ,_cgad .NumberOfNewSymbols );};if _eadg =_cgad .setSymbolsArray ();_eadg !=nil {return nil ,_eadg ;};var _defa ,_fadb int64 ;_cgad ._edfc =0;for _cgad ._edfc < _cgad .NumberOfNewSymbols {_fadb ,_eadg =_cgad .decodeHeightClassDeltaHeight ();
if _eadg !=nil {return nil ,_eadg ;};_defa +=_fadb ;var _facbf ,_agd uint32 ;_adec :=int64 (_cgad ._edfc );for {var _adcd int64 ;_adcd ,_eadg =_cgad .decodeDifferenceWidth ();if _gb .Is (_eadg ,_e .ErrOOB ){break ;};if _eadg !=nil {return nil ,_eadg ;};
if _cgad ._edfc >=_cgad .NumberOfNewSymbols {break ;};_facbf +=uint32 (_adcd );_agd +=_facbf ;if !_cgad .IsHuffmanEncoded ||_cgad .UseRefinementAggregation {if !_cgad .UseRefinementAggregation {_eadg =_cgad .decodeDirectlyThroughGenericRegion (_facbf ,uint32 (_defa ));
if _eadg !=nil {return nil ,_eadg ;};}else {_eadg =_cgad .decodeAggregate (_facbf ,uint32 (_defa ));if _eadg !=nil {return nil ,_eadg ;};};}else if _cgad .IsHuffmanEncoded &&!_cgad .UseRefinementAggregation {_efce [_cgad ._edfc ]=int (_facbf );};_cgad ._edfc ++;
};if _cgad .IsHuffmanEncoded &&!_cgad .UseRefinementAggregation {var _ggag int64 ;if _cgad .SdHuffBMSizeSelection ==0{var _cbeb _gd .Tabler ;_cbeb ,_eadg =_gd .GetStandardTable (1);if _eadg !=nil {return nil ,_eadg ;};_ggag ,_eadg =_cbeb .Decode (_cgad ._faab );
if _eadg !=nil {return nil ,_eadg ;};}else {_ggag ,_eadg =_cgad .huffDecodeBmSize ();if _eadg !=nil {return nil ,_eadg ;};};_cgad ._faab .Align ();var _eff *_fd .Bitmap ;_eff ,_eadg =_cgad .decodeHeightClassCollectiveBitmap (_ggag ,uint32 (_defa ),_agd );
if _eadg !=nil {return nil ,_eadg ;};_eadg =_cgad .decodeHeightClassBitmap (_eff ,_adec ,int (_defa ),_efce );if _eadg !=nil {return nil ,_eadg ;};};};_eafc ,_eadg :=_cgad .getToExportFlags ();if _eadg !=nil {return nil ,_eadg ;};_cgad .setExportedSymbols (_eafc );
};return _cgad ._agac ,nil ;};func (_afca *TextRegion )Encode (w _bc .BinaryWriter )(_acbd int ,_febcf error ){const _faee ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _acbd ,_febcf =_afca .RegionInfo .Encode (w );
_febcf !=nil {return _acbd ,_aaa .Wrap (_febcf ,_faee ,"");};var _aae int ;if _aae ,_febcf =_afca .encodeFlags (w );_febcf !=nil {return _acbd ,_aaa .Wrap (_febcf ,_faee ,"");};_acbd +=_aae ;if _aae ,_febcf =_afca .encodeSymbols (w );_febcf !=nil {return _acbd ,_aaa .Wrap (_febcf ,_faee ,"");
};_acbd +=_aae ;return _acbd ,nil ;};type GenericRegion struct{_eef *_bc .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;
UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_fdcc bool ;Bitmap *_fd .Bitmap ;_gcbc *_af .Decoder ;_fde *_af .DecoderStats ;_fdd *_fe .Decoder ;};func (_eeg *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _eeg .RegionInfo };
func (_dcee *template1 )setIndex (_abff *_af .DecoderStats ){_abff .SetIndex (0x080)};func (_dfdab *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _dfdab .IsHuffmanEncoded {switch _dfdab .SdHuffDecodeWidthSelection {case 0:_agfde ,_dbdd :=_gd .GetStandardTable (2);
if _dbdd !=nil {return 0,_dbdd ;};return _agfde .Decode (_dfdab ._faab );case 1:_cfcfd ,_degb :=_gd .GetStandardTable (3);if _degb !=nil {return 0,_degb ;};return _cfcfd .Decode (_dfdab ._faab );case 3:if _dfdab ._fbcg ==nil {var _acag int ;if _dfdab .SdHuffDecodeHeightSelection ==3{_acag ++;
};_gcaf ,_ggcd :=_dfdab .getUserTable (_acag );if _ggcd !=nil {return 0,_ggcd ;};_dfdab ._fbcg =_gcaf ;};return _dfdab ._fbcg .Decode (_dfdab ._faab );};}else {_bfdcg ,_fddc :=_dfdab ._beag .DecodeInt (_dfdab ._ccgf );if _fddc !=nil {return 0,_fddc ;};
return int64 (_bfdcg ),nil ;};return 0,nil ;};func (_abc *TextRegion )readUseRefinement ()error {if !_abc .UseRefinement ||_abc .SbrTemplate !=0{return nil ;};var (_feafe byte ;_eggc error ;);_abc .SbrATX =make ([]int8 ,2);_abc .SbrATY =make ([]int8 ,2);
_feafe ,_eggc =_abc ._afad .ReadByte ();if _eggc !=nil {return _eggc ;};_abc .SbrATX [0]=int8 (_feafe );_feafe ,_eggc =_abc ._afad .ReadByte ();if _eggc !=nil {return _eggc ;};_abc .SbrATY [0]=int8 (_feafe );_feafe ,_eggc =_abc ._afad .ReadByte ();if _eggc !=nil {return _eggc ;
};_abc .SbrATX [1]=int8 (_feafe );_feafe ,_eggc =_abc ._afad .ReadByte ();if _eggc !=nil {return _eggc ;};_abc .SbrATY [1]=int8 (_feafe );return nil ;};func (_bbg *TextRegion )setCodingStatistics ()error {if _bbg ._cffd ==nil {_bbg ._cffd =_af .NewStats (512,1);
};if _bbg ._gfbcf ==nil {_bbg ._gfbcf =_af .NewStats (512,1);};if _bbg ._bgcd ==nil {_bbg ._bgcd =_af .NewStats (512,1);};if _bbg ._efgfa ==nil {_bbg ._efgfa =_af .NewStats (512,1);};if _bbg ._aacb ==nil {_bbg ._aacb =_af .NewStats (512,1);};if _bbg ._gedc ==nil {_bbg ._gedc =_af .NewStats (512,1);
};if _bbg ._gbbb ==nil {_bbg ._gbbb =_af .NewStats (512,1);};if _bbg ._dffbg ==nil {_bbg ._dffbg =_af .NewStats (1<<uint (_bbg ._bfdg ),1);};if _bbg ._bdab ==nil {_bbg ._bdab =_af .NewStats (512,1);};if _bbg ._cbceb ==nil {_bbg ._cbceb =_af .NewStats (512,1);
};if _bbg ._aaac ==nil {var _adff error ;_bbg ._aaac ,_adff =_af .New (_bbg ._afad );if _adff !=nil {return _adff ;};};return nil ;};type SegmentEncoder interface{Encode (_dgfda _bc .BinaryWriter )(_bfda int ,_ccee error );};type Documenter interface{GetPage (int )(Pager ,error );
GetGlobalSegment (int )(*Header ,error );};func (_gaffg *TextRegion )parseHeader ()error {var _debe error ;_eb .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _debe !=nil {_eb .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_debe );
}else {_eb .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _debe =_gaffg .RegionInfo .parseHeader ();
_debe !=nil {return _debe ;};if _debe =_gaffg .readRegionFlags ();_debe !=nil {return _debe ;};if _gaffg .IsHuffmanEncoded {if _debe =_gaffg .readHuffmanFlags ();_debe !=nil {return _debe ;};};if _debe =_gaffg .readUseRefinement ();_debe !=nil {return _debe ;
};if _debe =_gaffg .readAmountOfSymbolInstances ();_debe !=nil {return _debe ;};if _debe =_gaffg .getSymbols ();_debe !=nil {return _debe ;};if _debe =_gaffg .computeSymbolCodeLength ();_debe !=nil {return _debe ;};if _debe =_gaffg .checkInput ();_debe !=nil {return _debe ;
};_eb .Log .Trace ("\u0025\u0073",_gaffg .String ());return nil ;};func _eabc (_dad *_bc .Reader ,_cff *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_df :_dad ,RegionInfo :NewRegionSegment (_dad ),_ace :_cff ,_ab :&template0 {},_ac :&template1 {}};
};func (_cfbfe *TextRegion )decodeIds ()(int64 ,error ){const _aeea ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _cfbfe .IsHuffmanEncoded {if _cfbfe .SbHuffDS ==3{if _cfbfe ._ggca ==nil {_bfed :=0;if _cfbfe .SbHuffFS ==3{_bfed ++;};var _bacf error ;
_cfbfe ._ggca ,_bacf =_cfbfe .getUserTable (_bfed );if _bacf !=nil {return 0,_aaa .Wrap (_bacf ,_aeea ,"");};};return _cfbfe ._ggca .Decode (_cfbfe ._afad );};_dbcg ,_ddaee :=_gd .GetStandardTable (8+int (_cfbfe .SbHuffDS ));if _ddaee !=nil {return 0,_aaa .Wrap (_ddaee ,_aeea ,"");
};return _dbcg .Decode (_cfbfe ._afad );};_ddbcb ,_feaf :=_cfbfe ._aaac .DecodeInt (_cfbfe ._bgcd );if _feaf !=nil {return 0,_aaa .Wrap (_feaf ,_aeea ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_ddbcb ),nil ;};func (_cfba *TableSegment )parseHeader ()error {var (_acfc int ;
_fab uint64 ;_gebab error ;);_acfc ,_gebab =_cfba ._faffd .ReadBit ();if _gebab !=nil {return _gebab ;};if _acfc ==1{return _b .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_acfc );
};if _fab ,_gebab =_cfba ._faffd .ReadBits (3);_gebab !=nil {return _gebab ;};_cfba ._ggfgf =(int32 (_fab )+1)&0xf;if _fab ,_gebab =_cfba ._faffd .ReadBits (3);_gebab !=nil {return _gebab ;};_cfba ._ecebg =(int32 (_fab )+1)&0xf;if _fab ,_gebab =_cfba ._faffd .ReadBits (32);
_gebab !=nil {return _gebab ;};_cfba ._dafge =int32 (_fab &_f .MaxInt32 );if _fab ,_gebab =_cfba ._faffd .ReadBits (32);_gebab !=nil {return _gebab ;};_cfba ._effd =int32 (_fab &_f .MaxInt32 );return nil ;};func (_dfda *GenericRegion )overrideAtTemplate3 (_ffg ,_afa ,_ebb ,_gdddf ,_fea int )int {_ffg &=0x3EF;
if _dfda .GBAtY [0]==0&&_dfda .GBAtX [0]>=-int8 (_fea ){_ffg |=(_gdddf >>uint (7-(int8 (_fea )+_dfda .GBAtX [0]))&0x1)<<4;}else {_ffg |=int (_dfda .getPixel (_afa +int (_dfda .GBAtX [0]),_ebb +int (_dfda .GBAtY [0])))<<4;};return _ffg ;};func (_aaag *Header )readSegmentPageAssociation (_bbfd Documenter ,_gcda *_bc .Reader ,_ccfb uint64 ,_caaf ...int )(_edf error ){const _bcdf ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_aaag .PageAssociationFieldSize {_gffg ,_eabd :=_gcda .ReadBits (8);if _eabd !=nil {return _aaa .Wrap (_eabd ,_bcdf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_aaag .PageAssociation =int (_gffg &0xFF);}else {_fffc ,_fgdd :=_gcda .ReadBits (32);
if _fgdd !=nil {return _aaa .Wrap (_fgdd ,_bcdf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_aaag .PageAssociation =int (_fffc &_f .MaxInt32 );};if _ccfb ==0{return nil ;};if _aaag .PageAssociation !=0{_edea ,_baf :=_bbfd .GetPage (_aaag .PageAssociation );
if _baf !=nil {return _aaa .Wrap (_baf ,_bcdf ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _eegg int ;for _fgaee :=uint64 (0);_fgaee < _ccfb ;_fgaee ++{_eegg =_caaf [_fgaee ];
_aaag .RTSegments [_fgaee ],_baf =_edea .GetSegment (_eegg );if _baf !=nil {var _eded error ;_aaag .RTSegments [_fgaee ],_eded =_bbfd .GetGlobalSegment (_eegg );if _eded !=nil {return _aaa .Wrapf (_baf ,_bcdf ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_aaag .PageAssociation );
};};};return nil ;};for _bcdd :=uint64 (0);_bcdd < _ccfb ;_bcdd ++{_aaag .RTSegments [_bcdd ],_edf =_bbfd .GetGlobalSegment (_caaf [_bcdd ]);if _edf !=nil {return _aaa .Wrapf (_edf ,_bcdf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_caaf [_bcdd ]);
};};return nil ;};func (_fgc *GenericRefinementRegion )Init (header *Header ,r *_bc .Reader )error {_fgc ._ace =header ;_fgc ._df =r ;_fgc .RegionInfo =NewRegionSegment (r );return _fgc .parseHeader ();};type RegionSegment struct{_fdacg *_bc .Reader ;BitmapWidth uint32 ;
BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _fd .CombinationOperator ;};func (_cedc *TextRegion )encodeFlags (_gegg _bc .BinaryWriter )(_beac int ,_eacf error ){const _defef ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _eacf =_gegg .WriteBit (int (_cedc .SbrTemplate ));_eacf !=nil {return _beac ,_aaa .Wrap (_eacf ,_defef ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_eacf =_gegg .WriteBits (uint64 (_cedc .SbDsOffset ),5);_eacf !=nil {return _beac ,_aaa .Wrap (_eacf ,_defef ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _eacf =_gegg .WriteBit (int (_cedc .DefaultPixel ));_eacf !=nil {return _beac ,_aaa .Wrap (_eacf ,_defef ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_eacf =_gegg .WriteBits (uint64 (_cedc .CombinationOperator ),2);
_eacf !=nil {return _beac ,_aaa .Wrap (_eacf ,_defef ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _eacf =_gegg .WriteBit (int (_cedc .IsTransposed ));_eacf !=nil {return _beac ,_aaa .Wrap (_eacf ,_defef ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_eacf =_gegg .WriteBits (uint64 (_cedc .ReferenceCorner ),2);_eacf !=nil {return _beac ,_aaa .Wrap (_eacf ,_defef ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_eacf =_gegg .WriteBits (uint64 (_cedc .LogSBStrips ),2);
_eacf !=nil {return _beac ,_aaa .Wrap (_eacf ,_defef ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _cdgf int ;if _cedc .UseRefinement {_cdgf =1;};if _eacf =_gegg .WriteBit (_cdgf );_eacf !=nil {return _beac ,_aaa .Wrap (_eacf ,_defef ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_cdgf =0;if _cedc .IsHuffmanEncoded {_cdgf =1;};if _eacf =_gegg .WriteBit (_cdgf );_eacf !=nil {return _beac ,_aaa .Wrap (_eacf ,_defef ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_beac =2;return _beac ,nil ;};func (_ebcg *TextRegion )decodeSymbolInstances ()error {_gagab ,_dfag :=_ebcg .decodeStripT ();
if _dfag !=nil {return _dfag ;};var (_gedd int64 ;_gbdg uint32 ;);for _gbdg < _ebcg .NumberOfSymbolInstances {_cead ,_gddc :=_ebcg .decodeDT ();if _gddc !=nil {return _gddc ;};_gagab +=_cead ;var _eeabb int64 ;_gcgc :=true ;_ebcg ._ddbg =0;for {if _gcgc {_eeabb ,_gddc =_ebcg .decodeDfs ();
if _gddc !=nil {return _gddc ;};_gedd +=_eeabb ;_ebcg ._ddbg =_gedd ;_gcgc =false ;}else {_bbfda ,_dcfg :=_ebcg .decodeIds ();if _gb .Is (_dcfg ,_e .ErrOOB ){break ;};if _dcfg !=nil {return _dcfg ;};if _gbdg >=_ebcg .NumberOfSymbolInstances {break ;};_ebcg ._ddbg +=_bbfda +int64 (_ebcg .SbDsOffset );
};_affb ,_dgdag :=_ebcg .decodeCurrentT ();if _dgdag !=nil {return _dgdag ;};_efgg :=_gagab +_affb ;_eefb ,_dgdag :=_ebcg .decodeID ();if _dgdag !=nil {return _dgdag ;};_dgcff ,_dgdag :=_ebcg .decodeRI ();if _dgdag !=nil {return _dgdag ;};_ebebf ,_dgdag :=_ebcg .decodeIb (_dgcff ,_eefb );
if _dgdag !=nil {return _dgdag ;};if _dgdag =_ebcg .blit (_ebebf ,_efgg );_dgdag !=nil {return _dgdag ;};_gbdg ++;};};return nil ;};func (_ffdeg *PageInformationSegment )readIsStriped ()error {_gdcb ,_aebg :=_ffdeg ._ccfae .ReadBit ();if _aebg !=nil {return _aebg ;
};if _gdcb ==1{_ffdeg .IsStripe =true ;};return nil ;};func (_eaee *GenericRefinementRegion )parseHeader ()(_gfg error ){_eb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_ada :=_ad .Now ();defer func (){if _gfg ==nil {_eb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_ad .Since (_ada ).Nanoseconds ());
}else {_eb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_gfg );
};}();if _gfg =_eaee .RegionInfo .parseHeader ();_gfg !=nil {return _gfg ;};_ ,_gfg =_eaee ._df .ReadBits (6);if _gfg !=nil {return _gfg ;};_eaee .IsTPGROn ,_gfg =_eaee ._df .ReadBool ();if _gfg !=nil {return _gfg ;};var _febb int ;_febb ,_gfg =_eaee ._df .ReadBit ();
if _gfg !=nil {return _gfg ;};_eaee .TemplateID =int8 (_febb );switch _eaee .TemplateID {case 0:_eaee .Template =_eaee ._ab ;if _gfg =_eaee .readAtPixels ();_gfg !=nil {return ;};case 1:_eaee .Template =_eaee ._ac ;};return nil ;};func (_eba *PatternDictionary )GetDictionary ()([]*_fd .Bitmap ,error ){if _eba .Patterns !=nil {return _eba .Patterns ,nil ;
};if !_eba .IsMMREncoded {_eba .setGbAtPixels ();};_adgg :=NewGenericRegion (_eba ._gcbae );_adgg .setParametersMMR (_eba .IsMMREncoded ,_eba .DataOffset ,_eba .DataLength ,uint32 (_eba .HdpHeight ),(_eba .GrayMax +1)*uint32 (_eba .HdpWidth ),_eba .HDTemplate ,false ,false ,_eba .GBAtX ,_eba .GBAtY );
_aced ,_gbg :=_adgg .GetRegionBitmap ();if _gbg !=nil {return nil ,_gbg ;};if _gbg =_eba .extractPatterns (_aced );_gbg !=nil {return nil ,_gbg ;};return _eba .Patterns ,nil ;};func (_efbfa *GenericRegion )readGBAtPixels (_ded int )error {const _cfab ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_efbfa .GBAtX =make ([]int8 ,_ded );_efbfa .GBAtY =make ([]int8 ,_ded );for _agec :=0;_agec < _ded ;_agec ++{_ddgf ,_dbad :=_efbfa ._eef .ReadByte ();if _dbad !=nil {return _aaa .Wrapf (_dbad ,_cfab ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_agec );
};_efbfa .GBAtX [_agec ]=int8 (_ddgf );_ddgf ,_dbad =_efbfa ._eef .ReadByte ();if _dbad !=nil {return _aaa .Wrapf (_dbad ,_cfab ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_agec );};_efbfa .GBAtY [_agec ]=int8 (_ddgf );};return nil ;
};func (_fdec *SymbolDictionary )readRefinementAtPixels (_fcddc int )error {_fdec .SdrATX =make ([]int8 ,_fcddc );_fdec .SdrATY =make ([]int8 ,_fcddc );var (_agaa byte ;_aefg error ;);for _faaf :=0;_faaf < _fcddc ;_faaf ++{_agaa ,_aefg =_fdec ._faab .ReadByte ();
if _aefg !=nil {return _aefg ;};_fdec .SdrATX [_faaf ]=int8 (_agaa );_agaa ,_aefg =_fdec ._faab .ReadByte ();if _aefg !=nil {return _aefg ;};_fdec .SdrATY [_faaf ]=int8 (_agaa );};return nil ;};func (_bdcd *PageInformationSegment )encodeStripingInformation (_begga _bc .BinaryWriter )(_ddggc int ,_geae error ){const _degca ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_bdcd .IsStripe {if _ddggc ,_geae =_begga .Write ([]byte {0x00,0x00});_geae !=nil {return 0,_aaa .Wrap (_geae ,_degca ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _ddggc ,nil ;};_bdf :=make ([]byte ,2);_c .BigEndian .PutUint16 (_bdf ,_bdcd .MaxStripeSize |1<<15);
if _ddggc ,_geae =_begga .Write (_bdf );_geae !=nil {return 0,_aaa .Wrapf (_geae ,_degca ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_bdcd .MaxStripeSize );};return _ddggc ,nil ;};type template0 struct{};func (_fegba *SymbolDictionary )decodeDirectlyThroughGenericRegion (_gafc ,_accd uint32 )error {if _fegba ._ccgd ==nil {_fegba ._ccgd =NewGenericRegion (_fegba ._faab );
};_fegba ._ccgd .setParametersWithAt (false ,byte (_fegba .SdTemplate ),false ,false ,_fegba .SdATX ,_fegba .SdATY ,_gafc ,_accd ,_fegba ._dfed ,_fegba ._beag );return _fegba .addSymbol (_fegba ._ccgd );};func (_eadcg *SymbolDictionary )getSbSymCodeLen ()int8 {_eceb :=int8 (_f .Ceil (_f .Log (float64 (_eadcg ._fdca +_eadcg .NumberOfNewSymbols ))/_f .Log (2)));
if _eadcg .IsHuffmanEncoded &&_eceb < 1{return 1;};return _eceb ;};func (_fgd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_eab ,_eca ,_dca ,_gge ,_dbg ,_gea ,_eabe ,_adc ,_ggg int )(_dea error ){var (_dbd ,_acef int ;_dgd ,_dbb int ;
_dce ,_fad int ;_dec byte ;);if _eab > 0{_dec ,_dea =_fgd .RegionBitmap .GetByte (_eabe -_dca );if _dea !=nil {return ;};_dgd =int (_dec );};if _adc > 0&&_adc <=_fgd .ReferenceBitmap .Height {_dec ,_dea =_fgd .ReferenceBitmap .GetByte (_ggg -_gge +_gea );
if _dea !=nil {return ;};_dbb =int (_dec )<<2;};if _adc >=0&&_adc < _fgd .ReferenceBitmap .Height {_dec ,_dea =_fgd .ReferenceBitmap .GetByte (_ggg +_gea );if _dea !=nil {return ;};_dce =int (_dec );};if _adc > -2&&_adc < _fgd .ReferenceBitmap .Height -1{_dec ,_dea =_fgd .ReferenceBitmap .GetByte (_ggg +_gge +_gea );
if _dea !=nil {return ;};_fad =int (_dec );};_dbd =((_dgd >>5)&0x6)|((_fad >>2)&0x30)|(_dce &0xc0)|(_dbb &0x200);_acef =((_fad >>2)&0x70)|(_dce &0xc0)|(_dbb &0x700);var _ebd int ;for _fgdb :=0;_fgdb < _dbg ;_fgdb =_ebd {var (_dbf int ;_efb int ;);_ebd =_fgdb +8;
if _dbf =_eca -_fgdb ;_dbf > 8{_dbf =8;};_bfff :=_ebd < _eca ;_gadf :=_ebd < _fgd .ReferenceBitmap .Width ;_bdb :=_gea +1;if _eab > 0{_dec =0;if _bfff {_dec ,_dea =_fgd .RegionBitmap .GetByte (_eabe -_dca +1);if _dea !=nil {return ;};};_dgd =(_dgd <<8)|int (_dec );
};if _adc > 0&&_adc <=_fgd .ReferenceBitmap .Height {var _afd int ;if _gadf {_dec ,_dea =_fgd .ReferenceBitmap .GetByte (_ggg -_gge +_bdb );if _dea !=nil {return ;};_afd =int (_dec )<<2;};_dbb =(_dbb <<8)|_afd ;};if _adc >=0&&_adc < _fgd .ReferenceBitmap .Height {_dec =0;
if _gadf {_dec ,_dea =_fgd .ReferenceBitmap .GetByte (_ggg +_bdb );if _dea !=nil {return ;};};_dce =(_dce <<8)|int (_dec );};if _adc > -2&&_adc < (_fgd .ReferenceBitmap .Height -1){_dec =0;if _gadf {_dec ,_dea =_fgd .ReferenceBitmap .GetByte (_ggg +_gge +_bdb );
if _dea !=nil {return ;};};_fad =(_fad <<8)|int (_dec );};for _agcd :=0;_agcd < _dbf ;_agcd ++{var _gec int ;_feb :=(_acef >>4)&0x1ff;switch _feb {case 0x1ff:_gec =1;case 0x00:_gec =0;default:_fgd ._cb .SetIndex (int32 (_dbd ));_gec ,_dea =_fgd ._ce .DecodeBit (_fgd ._cb );
if _dea !=nil {return ;};};_eec :=uint (7-_agcd );_efb |=_gec <<_eec ;_dbd =((_dbd &0x0d6)<<1)|_gec |(_dgd >>_eec +5)&0x002|((_fad >>_eec +2)&0x010)|((_dce >>_eec )&0x040)|((_dbb >>_eec )&0x200);_acef =((_acef &0xdb)<<1)|((_fad >>_eec +2)&0x010)|((_dce >>_eec )&0x080)|((_dbb >>_eec )&0x400);
};_dea =_fgd .RegionBitmap .SetByte (_eabe ,byte (_efb ));if _dea !=nil {return ;};_eabe ++;_ggg ++;};return nil ;};func (_bfcfc *SymbolDictionary )encodeATFlags (_ffdeb _bc .BinaryWriter )(_cbfe int ,_ddce error ){const _edec ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _bfcfc .IsHuffmanEncoded ||_bfcfc .SdTemplate !=0{return 0,nil ;};_afag :=4;if _bfcfc .SdTemplate !=0{_afag =1;};for _bccf :=0;_bccf < _afag ;_bccf ++{if _ddce =_ffdeb .WriteByte (byte (_bfcfc .SdATX [_bccf ]));_ddce !=nil {return _cbfe ,_aaa .Wrapf (_ddce ,_edec ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_bccf );
};_cbfe ++;if _ddce =_ffdeb .WriteByte (byte (_bfcfc .SdATY [_bccf ]));_ddce !=nil {return _cbfe ,_aaa .Wrapf (_ddce ,_edec ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_bccf );};_cbfe ++;};return _cbfe ,nil ;};func (_cdbc *SymbolDictionary )decodeHeightClassCollectiveBitmap (_cda int64 ,_acee ,_ebfa uint32 )(*_fd .Bitmap ,error ){if _cda ==0{_cgbc :=_fd .New (int (_ebfa ),int (_acee ));
var (_cffc byte ;_fgdcc error ;);for _gdcdg :=0;_gdcdg < len (_cgbc .Data );_gdcdg ++{_cffc ,_fgdcc =_cdbc ._faab .ReadByte ();if _fgdcc !=nil {return nil ,_fgdcc ;};if _fgdcc =_cgbc .SetByte (_gdcdg ,_cffc );_fgdcc !=nil {return nil ,_fgdcc ;};};return _cgbc ,nil ;
};if _cdbc ._ccgd ==nil {_cdbc ._ccgd =NewGenericRegion (_cdbc ._faab );};_cdbc ._ccgd .setParameters (true ,_cdbc ._faab .AbsolutePosition (),_cda ,_acee ,_ebfa );_gffa ,_dfae :=_cdbc ._ccgd .GetRegionBitmap ();if _dfae !=nil {return nil ,_dfae ;};return _gffa ,nil ;
};