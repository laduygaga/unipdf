//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_e "github.com/laduygaga/unipdf/v3/common";_af "github.com/laduygaga/unipdf/v3/internal/jbig2/basic";_eb "github.com/laduygaga/unipdf/v3/internal/jbig2/bitmap";_ef "github.com/laduygaga/unipdf/v3/internal/jbig2/errors";_b "image";_bd "math";
);func (_ege *Classer )classifyCorrelation (_bcd *_eb .Boxes ,_edb *_eb .Bitmaps ,_bca int )error {const _agf ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _bcd ==nil {return _ef .Error (_agf ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _edb ==nil {return _ef .Error (_agf ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_fg :=len (_edb .Values );if _fg ==0{_e .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_gff ,_ecd *_eb .Bitmap ;_eag error ;);_cdd :=&_eb .Bitmaps {Values :make ([]*_eb .Bitmap ,_fg )};for _eaa ,_fc :=range _edb .Values {_ecd ,_eag =_fc .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _eag !=nil {return _ef .Wrap (_eag ,_agf ,"");
};_cdd .Values [_eaa ]=_ecd ;};_ecda :=_ege .FgTemplates ;_cb :=_eb .MakePixelSumTab8 ();_bcc :=_eb .MakePixelCentroidTab8 ();_fgg :=make ([]int ,_fg );_aaeg :=make ([][]int ,_fg );_bde :=_eb .Points (make ([]_eb .Point ,_fg ));_abda :=&_bde ;var (_gef ,_fgc int ;
_cab ,_fab ,_ecg int ;_afd ,_fb int ;_dda byte ;);for _abb ,_aeg :=range _cdd .Values {_aaeg [_abb ]=make ([]int ,_aeg .Height );_gef =0;_fgc =0;_fab =(_aeg .Height -1)*_aeg .RowStride ;_cab =0;for _fb =_aeg .Height -1;_fb >=0;_fb ,_fab =_fb -1,_fab -_aeg .RowStride {_aaeg [_abb ][_fb ]=_cab ;
_ecg =0;for _afd =0;_afd < _aeg .RowStride ;_afd ++{_dda =_aeg .Data [_fab +_afd ];_ecg +=_cb [_dda ];_gef +=_bcc [_dda ]+_afd *8*_cb [_dda ];};_cab +=_ecg ;_fgc +=_ecg *_fb ;};_fgg [_abb ]=_cab ;if _cab > 0{(*_abda )[_abb ]=_eb .Point {X :float32 (_gef )/float32 (_cab ),Y :float32 (_fgc )/float32 (_cab )};
}else {(*_abda )[_abb ]=_eb .Point {X :float32 (_aeg .Width )/float32 (2),Y :float32 (_aeg .Height )/float32 (2)};};};if _eag =_ege .CentroidPoints .Add (_abda );_eag !=nil {return _ef .Wrap (_eag ,_agf ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");
};var (_bcb ,_dcd ,_gc int ;_fgf float64 ;_fbe ,_dge ,_da ,_gae float32 ;_fdg ,_ac _eb .Point ;_bdg bool ;_fdb *similarTemplatesFinder ;_db int ;_cc *_eb .Bitmap ;_fe *_b .Rectangle ;_ffcg *_eb .Bitmaps ;);for _db ,_ecd =range _cdd .Values {_dcd =_fgg [_db ];
if _fbe ,_dge ,_eag =_abda .GetGeometry (_db );_eag !=nil {return _ef .Wrap (_eag ,_agf ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_bdg =false ;_dbd :=len (_ege .UndilatedTemplates .Values );_fdb =_cae (_ege ,_ecd );for _gcf :=_fdb .Next ();_gcf > -1;
{if _cc ,_eag =_ege .UndilatedTemplates .GetBitmap (_gcf );_eag !=nil {return _ef .Wrap (_eag ,_agf ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _gc ,_eag =_ecda .GetInt (_gcf );
_eag !=nil {_e .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_eag );};if _da ,_gae ,_eag =_ege .CentroidPointsTemplates .GetGeometry (_gcf );
_eag !=nil {return _ef .Wrap (_eag ,_agf ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _ege .Settings .WeightFactor > 0.0{if _bcb ,_eag =_ege .TemplateAreas .Get (_gcf );_eag !=nil {_e .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_eag );
};_fgf =_ege .Settings .Thresh +(1.0-_ege .Settings .Thresh )*_ege .Settings .WeightFactor *float64 (_gc )/float64 (_bcb );}else {_fgf =_ege .Settings .Thresh ;};_gab ,_dbe :=_eb .CorrelationScoreThresholded (_ecd ,_cc ,_dcd ,_gc ,_fdg .X -_ac .X ,_fdg .Y -_ac .Y ,MaxDiffWidth ,MaxDiffHeight ,_cb ,_aaeg [_db ],float32 (_fgf ));
if _dbe !=nil {return _ef .Wrap (_dbe ,_agf ,"");};if _cd {var (_ecdb ,_egd float64 ;_cgga ,_aea int ;);_ecdb ,_dbe =_eb .CorrelationScore (_ecd ,_cc ,_dcd ,_gc ,_fbe -_da ,_dge -_gae ,MaxDiffWidth ,MaxDiffHeight ,_cb );if _dbe !=nil {return _ef .Wrap (_dbe ,_agf ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_egd ,_dbe =_eb .CorrelationScoreSimple (_ecd ,_cc ,_dcd ,_gc ,_fbe -_da ,_dge -_gae ,MaxDiffWidth ,MaxDiffHeight ,_cb );if _dbe !=nil {return _ef .Wrap (_dbe ,_agf ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_cgga =int (_bd .Sqrt (_ecdb *float64 (_dcd )*float64 (_gc )));_aea =int (_bd .Sqrt (_egd *float64 (_dcd )*float64 (_gc )));if (_ecdb >=_fgf )!=(_egd >=_fgf ){return _ef .Errorf (_agf ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_cgga ,_ecdb ,_ecdb >=_fgf ,_aea ,_egd ,_egd >=_fgf ,_ecdb -_egd );
};if _ecdb >=_fgf !=_gab {return _ef .Errorf (_agf ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_ecdb ,_ecdb *float64 (_dcd )*float64 (_gc ),_cgga ,_fgf ,float32 (_fgf )*float32 (_dcd )*float32 (_gc ),_gab );
};};if _gab {_bdg =true ;if _dbe =_ege .ClassIDs .Add (_gcf );_dbe !=nil {return _ef .Wrap (_dbe ,_agf ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _dbe =_ege .ComponentPageNumbers .Add (_bca );_dbe !=nil {return _ef .Wrap (_dbe ,_agf ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _ege .Settings .KeepClassInstances {if _gff ,_dbe =_edb .GetBitmap (_db );_dbe !=nil {return _ef .Wrap (_dbe ,_agf ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _ffcg ,_dbe =_ege .ClassInstances .GetBitmaps (_gcf );
_dbe !=nil {return _ef .Wrap (_dbe ,_agf ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_ffcg .AddBitmap (_gff );if _fe ,_dbe =_bcd .Get (_db );_dbe !=nil {return _ef .Wrap (_dbe ,_agf ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_ffcg .AddBox (_fe );};break ;};};if !_bdg {if _eag =_ege .ClassIDs .Add (_dbd );_eag !=nil {return _ef .Wrap (_eag ,_agf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _eag =_ege .ComponentPageNumbers .Add (_bca );_eag !=nil {return _ef .Wrap (_eag ,_agf ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_ffcg =&_eb .Bitmaps {};if _gff ,_eag =_edb .GetBitmap (_db );_eag !=nil {return _ef .Wrap (_eag ,_agf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ffcg .AddBitmap (_gff );_ged ,_fdbc :=_gff .Width ,_gff .Height ;_fbea :=uint64 (_fdbc )*uint64 (_ged );
_ege .TemplatesSize .Add (_fbea ,_dbd );if _fe ,_eag =_bcd .Get (_db );_eag !=nil {return _ef .Wrap (_eag ,_agf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ffcg .AddBox (_fe );_ege .ClassInstances .AddBitmaps (_ffcg );_ege .CentroidPointsTemplates .AddPoint (_fbe ,_dge );
_ege .FgTemplates .AddInt (_dcd );_ege .UndilatedTemplates .AddBitmap (_gff );_bcb =(_ecd .Width -2*JbAddedPixels )*(_ecd .Height -2*JbAddedPixels );if _eag =_ege .TemplateAreas .Add (_bcb );_eag !=nil {return _ef .Wrap (_eag ,_agf ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};};};_ege .NumberOfClasses =len (_ege .UndilatedTemplates .Values );return nil ;};func (_efd *Classer )getULCorners (_bfb *_eb .Bitmap ,_gfc *_eb .Boxes )error {const _ebg ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _bfb ==nil {return _ef .Error (_ebg ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _gfc ==nil {return _ef .Error (_ebg ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _efd .PtaUL ==nil {_efd .PtaUL =&_eb .Points {};};_cga :=len (*_gfc );var (_gd ,_fa ,_cf ,_cgd int ;_age ,_ge ,_be ,_agb float32 ;_ga error ;
_dg *_b .Rectangle ;_gdf *_eb .Bitmap ;_gfg _b .Point ;);for _bce :=0;_bce < _cga ;_bce ++{_gd =_efd .BaseIndex +_bce ;if _age ,_ge ,_ga =_efd .CentroidPoints .GetGeometry (_gd );_ga !=nil {return _ef .Wrap (_ga ,_ebg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _fa ,_ga =_efd .ClassIDs .Get (_gd );_ga !=nil {return _ef .Wrap (_ga ,_ebg ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _be ,_agb ,_ga =_efd .CentroidPointsTemplates .GetGeometry (_fa );_ga !=nil {return _ef .Wrap (_ga ,_ebg ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_bfbd :=_be -_age ;_aae :=_agb -_ge ;if _bfbd >=0{_cf =int (_bfbd +0.5);}else {_cf =int (_bfbd -0.5);};if _aae >=0{_cgd =int (_aae +0.5);}else {_cgd =int (_aae -0.5);};if _dg ,_ga =_gfc .Get (_bce );_ga !=nil {return _ef .Wrap (_ga ,_ebg ,"");};_ca ,_dee :=_dg .Min .X ,_dg .Min .Y ;
_gdf ,_ga =_efd .UndilatedTemplates .GetBitmap (_fa );if _ga !=nil {return _ef .Wrap (_ga ,_ebg ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_gfg ,_ga =_beg (_bfb ,_ca ,_dee ,_cf ,_cgd ,_gdf );if _ga !=nil {return _ef .Wrap (_ga ,_ebg ,"");};_efd .PtaUL .AddPoint (float32 (_ca -_cf +_gfg .X ),float32 (_dee -_cgd +_gfg .Y ));};return nil ;};type similarTemplatesFinder struct{Classer *Classer ;
Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_gbf *Classer )classifyRankHouseOne (_bfc *_eb .Boxes ,_cff ,_bea ,_daf *_eb .Bitmaps ,_dfe *_eb .Points ,_bdd int )(_gaa error ){const _eacb ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_dcb ,_aeag ,_bfbdf ,_ad float32 ;_fda int ;_bee ,_efb ,_gaab ,_ceg ,_ecdd *_eb .Bitmap ;_fdd ,_bbbe bool ;);for _dca :=0;_dca < len (_cff .Values );_dca ++{_efb =_bea .Values [_dca ];_gaab =_daf .Values [_dca ];_dcb ,_aeag ,_gaa =_dfe .GetGeometry (_dca );
if _gaa !=nil {return _ef .Wrapf (_gaa ,_eacb ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_dgad :=len (_gbf .UndilatedTemplates .Values );_fdd =false ;_ee :=_cae (_gbf ,_efb );for _fda =_ee .Next ();_fda > -1;{_ceg ,_gaa =_gbf .UndilatedTemplates .GetBitmap (_fda );
if _gaa !=nil {return _ef .Wrap (_gaa ,_eacb ,"\u0062\u006d\u0033");};_ecdd ,_gaa =_gbf .DilatedTemplates .GetBitmap (_fda );if _gaa !=nil {return _ef .Wrap (_gaa ,_eacb ,"\u0062\u006d\u0034");};_bfbdf ,_ad ,_gaa =_gbf .CentroidPointsTemplates .GetGeometry (_fda );
if _gaa !=nil {return _ef .Wrap (_gaa ,_eacb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_bbbe ,_gaa =_eb .HausTest (_efb ,_gaab ,_ceg ,_ecdd ,_dcb -_bfbdf ,_aeag -_ad ,MaxDiffWidth ,MaxDiffHeight );
if _gaa !=nil {return _ef .Wrap (_gaa ,_eacb ,"");};if _bbbe {_fdd =true ;if _gaa =_gbf .ClassIDs .Add (_fda );_gaa !=nil {return _ef .Wrap (_gaa ,_eacb ,"");};if _gaa =_gbf .ComponentPageNumbers .Add (_bdd );_gaa !=nil {return _ef .Wrap (_gaa ,_eacb ,"");
};if _gbf .Settings .KeepClassInstances {_cge ,_eeb :=_gbf .ClassInstances .GetBitmaps (_fda );if _eeb !=nil {return _ef .Wrap (_eeb ,_eacb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_bee ,_eeb =_cff .GetBitmap (_dca );if _eeb !=nil {return _ef .Wrap (_eeb ,_eacb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_cge .AddBitmap (_bee );_caa ,_eeb :=_bfc .Get (_dca );if _eeb !=nil {return _ef .Wrap (_eeb ,_eacb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_cge .AddBox (_caa );};break ;};};if !_fdd {if _gaa =_gbf .ClassIDs .Add (_dgad );_gaa !=nil {return _ef .Wrap (_gaa ,_eacb ,"");
};if _gaa =_gbf .ComponentPageNumbers .Add (_bdd );_gaa !=nil {return _ef .Wrap (_gaa ,_eacb ,"");};_dgac :=&_eb .Bitmaps {};_bee ,_gaa =_cff .GetBitmap (_dca );if _gaa !=nil {return _ef .Wrap (_gaa ,_eacb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dgac .Values =append (_dgac .Values ,_bee );
_cef ,_cee :=_bee .Width ,_bee .Height ;_gbf .TemplatesSize .Add (uint64 (_cee )*uint64 (_cef ),_dgad );_dgf ,_cffe :=_bfc .Get (_dca );if _cffe !=nil {return _ef .Wrap (_cffe ,_eacb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dgac .AddBox (_dgf );_gbf .ClassInstances .AddBitmaps (_dgac );
_gbf .CentroidPointsTemplates .AddPoint (_dcb ,_aeag );_gbf .UndilatedTemplates .AddBitmap (_efb );_gbf .DilatedTemplates .AddBitmap (_gaab );};};return nil ;};func (_fddg *Classer )classifyRankHouseNonOne (_fdgg *_eb .Boxes ,_bcad ,_gabb ,_ace *_eb .Bitmaps ,_cbd *_eb .Points ,_ead *_af .NumSlice ,_caf int )(_cfd error ){const _bbe ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_gad ,_ded ,_gagg ,_bag float32 ;_aaa ,_gfb ,_bcg int ;_gac ,_afb ,_efe ,_aec ,_ade *_eb .Bitmap ;_afe ,_cffd bool ;);_add :=_eb .MakePixelSumTab8 ();for _bef :=0;_bef < len (_bcad .Values );_bef ++{if _afb ,_cfd =_gabb .GetBitmap (_bef );_cfd !=nil {return _ef .Wrap (_cfd ,_bbe ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _aaa ,_cfd =_ead .GetInt (_bef );_cfd !=nil {_e .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bef ,_cfd );
};if _efe ,_cfd =_ace .GetBitmap (_bef );_cfd !=nil {return _ef .Wrap (_cfd ,_bbe ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _gad ,_ded ,_cfd =_cbd .GetGeometry (_bef );_cfd !=nil {return _ef .Wrapf (_cfd ,_bbe ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_eea :=len (_fddg .UndilatedTemplates .Values );_afe =false ;_dea :=_cae (_fddg ,_afb );for _bcg =_dea .Next ();_bcg > -1;{if _aec ,_cfd =_fddg .UndilatedTemplates .GetBitmap (_bcg );_cfd !=nil {return _ef .Wrap (_cfd ,_bbe ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _gfb ,_cfd =_fddg .FgTemplates .GetInt (_bcg );_cfd !=nil {_e .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_bcg ,_cfd );
};if _ade ,_cfd =_fddg .DilatedTemplates .GetBitmap (_bcg );_cfd !=nil {return _ef .Wrap (_cfd ,_bbe ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _gagg ,_bag ,_cfd =_fddg .CentroidPointsTemplates .GetGeometry (_bcg );
_cfd !=nil {return _ef .Wrap (_cfd ,_bbe ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_cffd ,_cfd =_eb .RankHausTest (_afb ,_efe ,_aec ,_ade ,_gad -_gagg ,_ded -_bag ,MaxDiffWidth ,MaxDiffHeight ,_aaa ,_gfb ,float32 (_fddg .Settings .RankHaus ),_add );
if _cfd !=nil {return _ef .Wrap (_cfd ,_bbe ,"");};if _cffd {_afe =true ;if _cfd =_fddg .ClassIDs .Add (_bcg );_cfd !=nil {return _ef .Wrap (_cfd ,_bbe ,"");};if _cfd =_fddg .ComponentPageNumbers .Add (_caf );_cfd !=nil {return _ef .Wrap (_cfd ,_bbe ,"");
};if _fddg .Settings .KeepClassInstances {_daff ,_ccg :=_fddg .ClassInstances .GetBitmaps (_bcg );if _ccg !=nil {return _ef .Wrap (_ccg ,_bbe ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _gac ,_ccg =_bcad .GetBitmap (_bef );_ccg !=nil {return _ef .Wrap (_ccg ,_bbe ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_daff .Values =append (_daff .Values ,_gac );_bdf ,_ccg :=_fdgg .Get (_bef );if _ccg !=nil {return _ef .Wrap (_ccg ,_bbe ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_daff .Boxes =append (_daff .Boxes ,_bdf );};break ;};};if !_afe {if _cfd =_fddg .ClassIDs .Add (_eea );_cfd !=nil {return _ef .Wrap (_cfd ,_bbe ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _cfd =_fddg .ComponentPageNumbers .Add (_caf );_cfd !=nil {return _ef .Wrap (_cfd ,_bbe ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fggf :=&_eb .Bitmaps {};_gac =_bcad .Values [_bef ];_fggf .AddBitmap (_gac );_ffb ,_aega :=_gac .Width ,_gac .Height ;_fddg .TemplatesSize .Add (uint64 (_ffb )*uint64 (_aega ),_eea );_eed ,_bg :=_fdgg .Get (_bef );if _bg !=nil {return _ef .Wrap (_bg ,_bbe ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fggf .AddBox (_eed );_fddg .ClassInstances .AddBitmaps (_fggf );_fddg .CentroidPointsTemplates .AddPoint (_gad ,_ded );_fddg .UndilatedTemplates .AddBitmap (_afb );_fddg .DilatedTemplates .AddBitmap (_efe );_fddg .FgTemplates .AddInt (_aaa );};};_fddg .NumberOfClasses =len (_fddg .UndilatedTemplates .Values );
return nil ;};type Method int ;const JbAddedPixels =6;func (_bge Settings )Validate ()error {const _abef ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _bge .Thresh < 0.4||_bge .Thresh > 0.98{return _ef .Error (_abef ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _bge .WeightFactor < 0.0||_bge .WeightFactor > 1.0{return _ef .Error (_abef ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _bge .RankHaus < 0.5||_bge .RankHaus > 1.0{return _ef .Error (_abef ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _bge .SizeHaus < 1||_bge .SizeHaus > 10{return _ef .Error (_abef ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _bge .Components {case _eb .ComponentConn ,_eb .ComponentCharacters ,_eb .ComponentWords :default:return _ef .Error (_abef ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func (_ab *Classer )AddPage (inputPage *_eb .Bitmap ,pageNumber int ,method Method )(_aa error ){const _bb ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_ab .Widths [pageNumber ]=inputPage .Width ;_ab .Heights [pageNumber ]=inputPage .Height ;
if _aa =_ab .verifyMethod (method );_aa !=nil {return _ef .Wrap (_aa ,_bb ,"");};_bf ,_g ,_aa :=inputPage .GetComponents (_ab .Settings .Components ,_ab .Settings .MaxCompWidth ,_ab .Settings .MaxCompHeight );if _aa !=nil {return _ef .Wrap (_aa ,_bb ,"");
};_e .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bf );if _aa =_ab .addPageComponents (inputPage ,_g ,_bf ,pageNumber ,method );_aa !=nil {return _ef .Wrap (_aa ,_bb ,"");};return nil ;};func DefaultSettings ()Settings {_cfdd :=&Settings {};
_cfdd .SetDefault ();return *_cfdd };type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _eb .Component ;Method Method ;};func (_ddcb *Settings )SetDefault (){if _ddcb .MaxCompWidth ==0{switch _ddcb .Components {case _eb .ComponentConn :_ddcb .MaxCompWidth =MaxConnCompWidth ;
case _eb .ComponentCharacters :_ddcb .MaxCompWidth =MaxCharCompWidth ;case _eb .ComponentWords :_ddcb .MaxCompWidth =MaxWordCompWidth ;};};if _ddcb .MaxCompHeight ==0{_ddcb .MaxCompHeight =MaxCompHeight ;};if _ddcb .Thresh ==0.0{_ddcb .Thresh =0.9;};if _ddcb .WeightFactor ==0.0{_ddcb .WeightFactor =0.75;
};if _ddcb .RankHaus ==0.0{_ddcb .RankHaus =0.97;};if _ddcb .SizeHaus ==0{_ddcb .SizeHaus =2;};};func _beg (_gee *_eb .Bitmap ,_gbd ,_ae ,_egg ,_bae int ,_bbb *_eb .Bitmap )(_ffg _b .Point ,_cac error ){const _fd ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _gee ==nil {return _ffg ,_ef .Error (_fd ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _bbb ==nil {return _ffg ,_ef .Error (_fd ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_ffc ,_eba :=_bbb .Width ,_bbb .Height ;_eca ,_gdfe :=_gbd -_egg -JbAddedPixels ,_ae -_bae -JbAddedPixels ;_e .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_gbd ,_ae ,_ffc ,_eba ,_eca ,_gdfe );
_dga ,_cac :=_eb .Rect (_eca ,_gdfe ,_ffc ,_eba );if _cac !=nil {return _ffg ,_ef .Wrap (_cac ,_fd ,"");};_dd ,_ ,_cac :=_gee .ClipRectangle (_dga );if _cac !=nil {_e .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_dga );
return _ffg ,_ef .Wrap (_cac ,_fd ,"");};_aad :=_eb .New (_dd .Width ,_dd .Height );_gde :=_bd .MaxInt32 ;var _abd ,_abdb ,_cag ,_ddc ,_ed int ;for _abd =-1;_abd <=1;_abd ++{for _abdb =-1;_abdb <=1;_abdb ++{if _ ,_cac =_eb .Copy (_aad ,_dd );_cac !=nil {return _ffg ,_ef .Wrap (_cac ,_fd ,"");
};if _cac =_aad .RasterOperation (_abdb ,_abd ,_ffc ,_eba ,_eb .PixSrcXorDst ,_bbb ,0,0);_cac !=nil {return _ffg ,_ef .Wrap (_cac ,_fd ,"");};_cag =_aad .CountPixels ();if _cag < _gde {_ddc =_abdb ;_ed =_abd ;_gde =_cag ;};};};_ffg .X =_ddc ;_ffg .Y =_ed ;
return _ffg ,nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_af .IntSlice ;TemplateAreas *_af .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_eb .BitmapsArray ;UndilatedTemplates *_eb .Bitmaps ;
DilatedTemplates *_eb .Bitmaps ;TemplatesSize _af .IntsMap ;FgTemplates *_af .NumSlice ;CentroidPoints *_eb .Points ;CentroidPointsTemplates *_eb .Points ;ClassIDs *_af .IntSlice ;ComponentPageNumbers *_af .IntSlice ;PtaUL *_eb .Points ;PtaLL *_eb .Points ;
};const (RankHaus Method =iota ;Correlation ;);func (_cgg *Classer )verifyMethod (_abe Method )error {if _abe !=RankHaus &&_abe !=Correlation {return _ef .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func (_ecb *similarTemplatesFinder )Next ()int {var (_fca ,_cbdf ,_bed ,_bbd int ;_eeac bool ;_ddcc *_eb .Bitmap ;_egea error ;);for {if _ecb .Index >=25{return -1;
};_cbdf =_ecb .Width +TwoByTwoWalk [2*_ecb .Index ];_fca =_ecb .Height +TwoByTwoWalk [2*_ecb .Index +1];if _fca < 1||_cbdf < 1{_ecb .Index ++;continue ;};if len (_ecb .CurrentNumbers )==0{_ecb .CurrentNumbers ,_eeac =_ecb .Classer .TemplatesSize .GetSlice (uint64 (_cbdf )*uint64 (_fca ));
if !_eeac {_ecb .Index ++;continue ;};_ecb .N =0;};_bed =len (_ecb .CurrentNumbers );for ;_ecb .N < _bed ;_ecb .N ++{_bbd =_ecb .CurrentNumbers [_ecb .N ];_ddcc ,_egea =_ecb .Classer .DilatedTemplates .GetBitmap (_bbd );if _egea !=nil {_e .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _ddcc .Width -2*JbAddedPixels ==_cbdf &&_ddcc .Height -2*JbAddedPixels ==_fca {return _bbd ;};};_ecb .Index ++;_ecb .CurrentNumbers =nil ;};};func (_d *Classer )ComputeLLCorners ()(_gb error ){const _c ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _d .PtaUL ==nil {return _ef .Error (_c ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_eg :=len (*_d .PtaUL );_d .PtaLL =&_eb .Points {};var (_ff ,_ebb float32 ;_ce ,_ba int ;
_fff *_eb .Bitmap ;);for _gf :=0;_gf < _eg ;_gf ++{_ff ,_ebb ,_gb =_d .PtaUL .GetGeometry (_gf );if _gb !=nil {_e .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gb );
return _ef .Wrap (_gb ,_c ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_ce ,_gb =_d .ClassIDs .Get (_gf );if _gb !=nil {_e .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_gb );
return _ef .Wrap (_gb ,_c ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_fff ,_gb =_d .UndilatedTemplates .GetBitmap (_ce );if _gb !=nil {_e .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gb );
return _ef .Wrap (_gb ,_c ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ba =_fff .Height ;_d .PtaLL .AddPoint (_ff ,_ebb +float32 (_ba ));};return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};
func (_cg *Classer )addPageComponents (_ec *_eb .Bitmap ,_gbg *_eb .Boxes ,_ega *_eb .Bitmaps ,_bc int ,_dc Method )error {const _afg ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _ec ==nil {return _ef .Error (_afg ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _gbg ==nil ||_ega ==nil ||len (*_gbg )==0{_e .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_ec );
return nil ;};var _bda error ;switch _dc {case RankHaus :_bda =_cg .classifyRankHaus (_gbg ,_ega ,_bc );case Correlation :_bda =_cg .classifyCorrelation (_gbg ,_ega ,_bc );default:_e .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_dc );
return _ef .Error (_afg ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _bda !=nil {return _ef .Wrap (_bda ,_afg ,"");};if _bda =_cg .getULCorners (_ec ,_gbg );_bda !=nil {return _ef .Wrap (_bda ,_afg ,"");
};_de :=len (*_gbg );_cg .BaseIndex +=_de ;if _bda =_cg .ComponentsNumber .Add (_de );_bda !=nil {return _ef .Wrap (_bda ,_afg ,"");};return nil ;};func Init (settings Settings )(*Classer ,error ){const _f ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_ag :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_af .IntsMap {},TemplateAreas :&_af .IntSlice {},ComponentPageNumbers :&_af .IntSlice {},ClassIDs :&_af .IntSlice {},ComponentsNumber :&_af .IntSlice {},CentroidPoints :&_eb .Points {},CentroidPointsTemplates :&_eb .Points {},UndilatedTemplates :&_eb .Bitmaps {},DilatedTemplates :&_eb .Bitmaps {},ClassInstances :&_eb .BitmapsArray {},FgTemplates :&_af .NumSlice {}};
if _ea :=_ag .Settings .Validate ();_ea !=nil {return nil ,_ef .Wrap (_ea ,_f ,"");};return _ag ,nil ;};func _cae (_bdb *Classer ,_fbc *_eb .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_fbc .Width ,Height :_fbc .Height ,Classer :_bdb };
};var _cd bool ;func (_bad *Classer )classifyRankHaus (_dcf *_eb .Boxes ,_aag *_eb .Bitmaps ,_gbe int )error {const _afc ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _dcf ==nil {return _ef .Error (_afc ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if _aag ==nil {return _ef .Error (_afc ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_bdgg :=len (_aag .Values );if _bdgg ==0{return _ef .Error (_afc ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");
};_gbdf :=_aag .CountPixels ();_egge :=_bad .Settings .SizeHaus ;_dff :=_eb .SelCreateBrick (_egge ,_egge ,_egge /2,_egge /2,_eb .SelHit );_agg :=&_eb .Bitmaps {Values :make ([]*_eb .Bitmap ,_bdgg )};_dgd :=&_eb .Bitmaps {Values :make ([]*_eb .Bitmap ,_bdgg )};
var (_gag ,_cdf ,_fgff *_eb .Bitmap ;_gfcg error ;);for _aef :=0;_aef < _bdgg ;_aef ++{_gag ,_gfcg =_aag .GetBitmap (_aef );if _gfcg !=nil {return _ef .Wrap (_gfcg ,_afc ,"");};_cdf ,_gfcg =_gag .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _gfcg !=nil {return _ef .Wrap (_gfcg ,_afc ,"");};_fgff ,_gfcg =_eb .Dilate (nil ,_cdf ,_dff );if _gfcg !=nil {return _ef .Wrap (_gfcg ,_afc ,"");};_agg .Values [_bdgg ]=_cdf ;_dgd .Values [_bdgg ]=_fgff ;};_eac ,_gfcg :=_eb .Centroids (_agg .Values );
if _gfcg !=nil {return _ef .Wrap (_gfcg ,_afc ,"");};if _gfcg =_eac .Add (_bad .CentroidPoints );_gfcg !=nil {_e .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _bad .Settings .RankHaus ==1.0{_gfcg =_bad .classifyRankHouseOne (_dcf ,_aag ,_agg ,_dgd ,_eac ,_gbe );
}else {_gfcg =_bad .classifyRankHouseNonOne (_dcf ,_aag ,_agg ,_dgd ,_eac ,_gbdf ,_gbe );};if _gfcg !=nil {return _ef .Wrap (_gfcg ,_afc ,"");};return nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);